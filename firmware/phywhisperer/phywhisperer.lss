
phywhisperer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000aa2c  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008aa2c  0008aa2c  0001aa2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000d50  20000000  0008aa34  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000674  20000d50  0008b784  00020d50  2**2
                  ALLOC
  4 .stack        00001500  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020d50  2**0
                  CONTENTS, READONLY
  6 .comment      00000049  00000000  00000000  00020d79  2**0
                  CONTENTS, READONLY
  7 .debug_info   00016958  00000000  00000000  00020dc2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000048bb  00000000  00000000  0003771a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_loc    00009d00  00000000  00000000  0003bfd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_aranges 00000ea0  00000000  00000000  00045cd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_ranges 00002e58  00000000  00000000  00046b75  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_macro  0001c100  00000000  00000000  000499cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line   0001eabe  00000000  00000000  00065acd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    0005d2cb  00000000  00000000  0008458b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_frame  000038bc  00000000  00000000  000e1858  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 15 08 20 15 2c 08 00 21 33 08 00 21 33 08 00     ... .,..!3..!3..
   80010:	21 33 08 00 21 33 08 00 21 33 08 00 00 00 00 00     !3..!3..!3......
   80020:	00 00 00 00 00 00 00 00 00 00 00 00 21 33 08 00     ............!3..
   80030:	21 33 08 00 00 00 00 00 21 33 08 00 21 33 08 00     !3......!3..!3..
   80040:	21 33 08 00 21 33 08 00 21 33 08 00 21 33 08 00     !3..!3..!3..!3..
   80050:	21 33 08 00 21 33 08 00 21 33 08 00 21 33 08 00     !3..!3..!3..!3..
   80060:	21 33 08 00 21 33 08 00 79 17 08 00 89 17 08 00     !3..!3..y.......
   80070:	99 17 08 00 21 33 08 00 21 33 08 00 21 33 08 00     ....!3..!3..!3..
   80080:	21 33 08 00 21 33 08 00 21 33 08 00 21 33 08 00     !3..!3..!3..!3..
   80090:	21 33 08 00 21 33 08 00 21 33 08 00 21 33 08 00     !3..!3..!3..!3..
   800a0:	21 33 08 00 21 33 08 00 21 33 08 00 21 33 08 00     !3..!3..!3..!3..
   800b0:	21 33 08 00 39 1b 08 00 21 33 08 00                 !3..9...!3..

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000d50 	.word	0x20000d50
   800d8:	00000000 	.word	0x00000000
   800dc:	0008aa34 	.word	0x0008aa34

000800e0 <frame_dummy>:
   800e0:	b508      	push	{r3, lr}
   800e2:	4b03      	ldr	r3, [pc, #12]	; (800f0 <frame_dummy+0x10>)
   800e4:	b11b      	cbz	r3, 800ee <frame_dummy+0xe>
   800e6:	4903      	ldr	r1, [pc, #12]	; (800f4 <frame_dummy+0x14>)
   800e8:	4803      	ldr	r0, [pc, #12]	; (800f8 <frame_dummy+0x18>)
   800ea:	f3af 8000 	nop.w
   800ee:	bd08      	pop	{r3, pc}
   800f0:	00000000 	.word	0x00000000
   800f4:	20000d54 	.word	0x20000d54
   800f8:	0008aa34 	.word	0x0008aa34

000800fc <phywhisperer_no_pwr>:
//Serial Number - will be read by device ID
char usb_serial_number[33] = "000000000000DEADBEEF";

void phywhisperer_no_pwr(void)
{
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   800fc:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80100:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80104:	4b01      	ldr	r3, [pc, #4]	; (8010c <phywhisperer_no_pwr+0x10>)
   80106:	6359      	str	r1, [r3, #52]	; 0x34
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80108:	635a      	str	r2, [r3, #52]	; 0x34
}
   8010a:	4770      	bx	lr
   8010c:	400e0c00 	.word	0x400e0c00

00080110 <phywhisperer_5V_pwr>:

void phywhisperer_5V_pwr(void)
{
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80110:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
    PIOA->PIO_SODR = (1 << F_VB5V); //enable host power
   80114:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80118:	4b01      	ldr	r3, [pc, #4]	; (80120 <phywhisperer_5V_pwr+0x10>)
   8011a:	6359      	str	r1, [r3, #52]	; 0x34
    PIOA->PIO_SODR = (1 << F_VB5V); //enable host power
   8011c:	631a      	str	r2, [r3, #48]	; 0x30
}
   8011e:	4770      	bx	lr
   80120:	400e0c00 	.word	0x400e0c00

00080124 <phywhisperer_host_pwr>:

void phywhisperer_host_pwr(void)
{
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80124:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
    PIOA->PIO_SODR = (1 << F_VBHOST); //enable sniff power
   80128:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   8012c:	4b01      	ldr	r3, [pc, #4]	; (80134 <phywhisperer_host_pwr+0x10>)
   8012e:	6359      	str	r1, [r3, #52]	; 0x34
    PIOA->PIO_SODR = (1 << F_VBHOST); //enable sniff power
   80130:	631a      	str	r2, [r3, #48]	; 0x30
}
   80132:	4770      	bx	lr
   80134:	400e0c00 	.word	0x400e0c00

00080138 <pwr_st_from_io>:
    }
}

uint8_t pwr_st_from_io(void)
{
    if (!(PIOA->PIO_ODSR & (1 << F_VBHOST)) && !(PIOA->PIO_ODSR & (1 << F_VB5V))) {
   80138:	4b0e      	ldr	r3, [pc, #56]	; (80174 <pwr_st_from_io+0x3c>)
   8013a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   8013c:	0191      	lsls	r1, r2, #6
   8013e:	d403      	bmi.n	80148 <pwr_st_from_io+0x10>
   80140:	6b98      	ldr	r0, [r3, #56]	; 0x38
   80142:	f010 6080 	ands.w	r0, r0, #67108864	; 0x4000000
   80146:	d00f      	beq.n	80168 <pwr_st_from_io+0x30>
        //USB off
        return 0;
    } else if (!(PIOA->PIO_ODSR & (1 << F_VBHOST)) && (PIOA->PIO_ODSR & (1 << F_VB5V))) {
   80148:	4b0a      	ldr	r3, [pc, #40]	; (80174 <pwr_st_from_io+0x3c>)
   8014a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   8014c:	0192      	lsls	r2, r2, #6
   8014e:	d50c      	bpl.n	8016a <pwr_st_from_io+0x32>
        //Host power
        return 1;
    } else if ((PIOA->PIO_ODSR & (1 << F_VBHOST)) && !(PIOA->PIO_ODSR & (1 << F_VB5V))) {
   80150:	4b08      	ldr	r3, [pc, #32]	; (80174 <pwr_st_from_io+0x3c>)
   80152:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   80154:	0192      	lsls	r2, r2, #6
   80156:	d506      	bpl.n	80166 <pwr_st_from_io+0x2e>
   80158:	6b9b      	ldr	r3, [r3, #56]	; 0x38
        //Sniffer power
        return 2;
   8015a:	f013 6f80 	tst.w	r3, #67108864	; 0x4000000
   8015e:	bf14      	ite	ne
   80160:	20ff      	movne	r0, #255	; 0xff
   80162:	2002      	moveq	r0, #2
   80164:	4770      	bx	lr
    } else {
        //Everything's on...
        return 0xFF;
   80166:	20ff      	movs	r0, #255	; 0xff
    }

}
   80168:	4770      	bx	lr
    } else if (!(PIOA->PIO_ODSR & (1 << F_VBHOST)) && (PIOA->PIO_ODSR & (1 << F_VB5V))) {
   8016a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   8016c:	0159      	lsls	r1, r3, #5
   8016e:	d5ef      	bpl.n	80150 <pwr_st_from_io+0x18>
        return 1;
   80170:	2001      	movs	r0, #1
   80172:	4770      	bx	lr
   80174:	400e0c00 	.word	0x400e0c00

00080178 <phywhisperer_setup_pins>:

void phywhisperer_setup_pins(void)
{
   80178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    board_init();
   8017c:	4b38      	ldr	r3, [pc, #224]	; (80260 <phywhisperer_setup_pins+0xe8>)
   8017e:	4798      	blx	r3
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   80180:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80184:	f04f 6e80 	mov.w	lr, #67108864	; 0x4000000
    PIOA->PIO_SODR = (1 << F_VBHOST); //enable sniff power
   80188:	f04f 7c00 	mov.w	ip, #33554432	; 0x2000000
    ioport_set_pin_mode(BUTTON_IN, IOPORT_MODE_PULLUP); //(1 << 2) = PULL UP
    PIOA->PIO_ODR = (1 << BUTTON_IN);
    PIOA->PIO_PUER = (1 << BUTTON_IN); // enable pullup
    PIOA->PIO_DIFSR = (1 << BUTTON_IN); //enable debounce

    PIOA->PIO_OER = (1 << F_VB5V) | (1 << F_VBHOST); //enable output mode on VBHOST/VBSNIFF pins
   8018c:	f04f 68c0 	mov.w	r8, #100663296	; 0x6000000
   80190:	4b34      	ldr	r3, [pc, #208]	; (80264 <phywhisperer_setup_pins+0xec>)
    //Configure FPGA to allow programming via USB
    fpga_program_init();

    /* Enable SMC */
    pmc_enable_periph_clk(ID_SMC);
    gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   80192:	4d35      	ldr	r5, [pc, #212]	; (80268 <phywhisperer_setup_pins+0xf0>)
   80194:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   80196:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80198:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   8019a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   8019e:	6f19      	ldr	r1, [r3, #112]	; 0x70
    fpga_program_init();
   801a0:	4832      	ldr	r0, [pc, #200]	; (8026c <phywhisperer_setup_pins+0xf4>)
   801a2:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
   801a6:	6719      	str	r1, [r3, #112]	; 0x70
    PIOA->PIO_ODR = (1 << BUTTON_IN);
   801a8:	615a      	str	r2, [r3, #20]
    PIOA->PIO_PUER = (1 << BUTTON_IN); // enable pullup
   801aa:	665a      	str	r2, [r3, #100]	; 0x64
    PIOA->PIO_DIFSR = (1 << BUTTON_IN); //enable debounce
   801ac:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    PIOA->PIO_OER = (1 << F_VB5V) | (1 << F_VBHOST); //enable output mode on VBHOST/VBSNIFF pins
   801b0:	f8c3 8010 	str.w	r8, [r3, #16]
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   801b4:	f8c3 e034 	str.w	lr, [r3, #52]	; 0x34
    PIOA->PIO_SODR = (1 << F_VBHOST); //enable sniff power
   801b8:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30
    fpga_program_init();
   801bc:	4780      	blx	r0
    pmc_enable_periph_clk(ID_SMC);
   801be:	4b2c      	ldr	r3, [pc, #176]	; (80270 <phywhisperer_setup_pins+0xf8>)
   801c0:	2009      	movs	r0, #9
   801c2:	4798      	blx	r3
    gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   801c4:	4c2b      	ldr	r4, [pc, #172]	; (80274 <phywhisperer_setup_pins+0xfc>)
   801c6:	4629      	mov	r1, r5
   801c8:	2029      	movs	r0, #41	; 0x29
   801ca:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAG1);
   801cc:	4629      	mov	r1, r5
   801ce:	202a      	movs	r0, #42	; 0x2a
   801d0:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAG1);
   801d2:	4629      	mov	r1, r5
   801d4:	202b      	movs	r0, #43	; 0x2b
   801d6:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAG1);
   801d8:	4629      	mov	r1, r5
   801da:	202c      	movs	r0, #44	; 0x2c
   801dc:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAG1);
   801de:	4629      	mov	r1, r5
   801e0:	202d      	movs	r0, #45	; 0x2d
   801e2:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAG1);
   801e4:	4629      	mov	r1, r5
   801e6:	202e      	movs	r0, #46	; 0x2e
   801e8:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAG1);
   801ea:	4629      	mov	r1, r5
   801ec:	202f      	movs	r0, #47	; 0x2f
   801ee:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAG1);
   801f0:	4629      	mov	r1, r5
   801f2:	2030      	movs	r0, #48	; 0x30
   801f4:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
   801f6:	4629      	mov	r1, r5
   801f8:	2033      	movs	r0, #51	; 0x33
   801fa:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
    gpio_configure_pin(PIN_EBI_NCS0, PIN_EBI_NCS0_FLAGS);

    gpio_configure_group(FPGA_ADDR_PORT, FPGA_ADDR_PINS, (PIO_TYPE_PIO_OUTPUT_0 | PIO_DEFAULT));
   801fc:	4f1e      	ldr	r7, [pc, #120]	; (80278 <phywhisperer_setup_pins+0x100>)
    gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
   801fe:	4629      	mov	r1, r5
   80200:	2037      	movs	r0, #55	; 0x37
   80202:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_NCS0, PIN_EBI_NCS0_FLAGS);
   80204:	4629      	mov	r1, r5
   80206:	2034      	movs	r0, #52	; 0x34
   80208:	47a0      	blx	r4
    gpio_configure_group(FPGA_ADDR_PORT, FPGA_ADDR_PINS, (PIO_TYPE_PIO_OUTPUT_0 | PIO_DEFAULT));
   8020a:	f04f 5240 	mov.w	r2, #805306368	; 0x30000000
   8020e:	f240 11bf 	movw	r1, #447	; 0x1bf
   80212:	4638      	mov	r0, r7
   80214:	4b19      	ldr	r3, [pc, #100]	; (8027c <phywhisperer_setup_pins+0x104>)
   80216:	4798      	blx	r3
    pio_enable_output_write(FPGA_ADDR_PORT, FPGA_ADDR_PINS);
   80218:	4b19      	ldr	r3, [pc, #100]	; (80280 <phywhisperer_setup_pins+0x108>)
   8021a:	4638      	mov	r0, r7
   8021c:	f240 11bf 	movw	r1, #447	; 0x1bf
   80220:	4798      	blx	r3
    */

    gpio_configure_pin(PIN_EBI_USB_SPARE0, PIN_EBI_USB_SPARE0_FLAGS);
    gpio_configure_pin(PIN_EBI_USB_SPARE1, PIN_EBI_USB_SPARE1_FLAGS);

    smc_set_setup_timing(SMC, 0, SMC_SETUP_NWE_SETUP(0)
   80222:	4e18      	ldr	r6, [pc, #96]	; (80284 <phywhisperer_setup_pins+0x10c>)
    gpio_configure_pin(PIN_EBI_USB_SPARE0, PIN_EBI_USB_SPARE0_FLAGS);
   80224:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   80228:	2026      	movs	r0, #38	; 0x26
   8022a:	47a0      	blx	r4
    gpio_configure_pin(PIN_EBI_USB_SPARE1, PIN_EBI_USB_SPARE1_FLAGS);
   8022c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80230:	2031      	movs	r0, #49	; 0x31
   80232:	47a0      	blx	r4
    smc_set_setup_timing(SMC, 0, SMC_SETUP_NWE_SETUP(0)
   80234:	4630      	mov	r0, r6
   80236:	2100      	movs	r1, #0
   80238:	4a13      	ldr	r2, [pc, #76]	; (80288 <phywhisperer_setup_pins+0x110>)
   8023a:	4b14      	ldr	r3, [pc, #80]	; (8028c <phywhisperer_setup_pins+0x114>)
   8023c:	4798      	blx	r3
                         | SMC_SETUP_NCS_WR_SETUP(1)
                         | SMC_SETUP_NRD_SETUP(1)
                         | SMC_SETUP_NCS_RD_SETUP(1));
    smc_set_pulse_timing(SMC, 0, SMC_PULSE_NWE_PULSE(1)
   8023e:	4630      	mov	r0, r6
   80240:	2100      	movs	r1, #0
   80242:	4a13      	ldr	r2, [pc, #76]	; (80290 <phywhisperer_setup_pins+0x118>)
   80244:	4b13      	ldr	r3, [pc, #76]	; (80294 <phywhisperer_setup_pins+0x11c>)
   80246:	4798      	blx	r3
                         | SMC_PULSE_NCS_WR_PULSE(1)
                         | SMC_PULSE_NRD_PULSE(3)
                         | SMC_PULSE_NCS_RD_PULSE(1));
    smc_set_cycle_timing(SMC, 0, SMC_CYCLE_NWE_CYCLE(2)
   80248:	4630      	mov	r0, r6
   8024a:	2100      	movs	r1, #0
   8024c:	4a12      	ldr	r2, [pc, #72]	; (80298 <phywhisperer_setup_pins+0x120>)
   8024e:	4b13      	ldr	r3, [pc, #76]	; (8029c <phywhisperer_setup_pins+0x124>)
   80250:	4798      	blx	r3
                         | SMC_CYCLE_NRD_CYCLE(4));
    smc_set_mode(SMC, 0, SMC_MODE_READ_MODE | SMC_MODE_WRITE_MODE
   80252:	4630      	mov	r0, r6
                 | SMC_MODE_DBW_BIT_8);
}
   80254:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    smc_set_mode(SMC, 0, SMC_MODE_READ_MODE | SMC_MODE_WRITE_MODE
   80258:	2203      	movs	r2, #3
   8025a:	2100      	movs	r1, #0
   8025c:	4b10      	ldr	r3, [pc, #64]	; (802a0 <phywhisperer_setup_pins+0x128>)
   8025e:	4718      	bx	r3
   80260:	0008367d 	.word	0x0008367d
   80264:	400e0c00 	.word	0x400e0c00
   80268:	08000001 	.word	0x08000001
   8026c:	00080575 	.word	0x00080575
   80270:	00082f5d 	.word	0x00082f5d
   80274:	00083165 	.word	0x00083165
   80278:	400e0e00 	.word	0x400e0e00
   8027c:	0008325d 	.word	0x0008325d
   80280:	00083101 	.word	0x00083101
   80284:	400e0000 	.word	0x400e0000
   80288:	01010100 	.word	0x01010100
   8028c:	000816ed 	.word	0x000816ed
   80290:	01030101 	.word	0x01030101
   80294:	000816f9 	.word	0x000816f9
   80298:	00040002 	.word	0x00040002
   8029c:	00081705 	.word	0x00081705
   802a0:	00081711 	.word	0x00081711

000802a4 <main>:
// }

void (*pwr_list[])(void) = {phywhisperer_no_pwr, phywhisperer_5V_pwr, phywhisperer_host_pwr};

int main(void)
{
   802a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   802a8:	b087      	sub	sp, #28
    uint32_t serial_number[4];

    // Read Device-ID from SAM3U. Do this before enabling interrupts etc.
    flash_read_unique_id(serial_number, sizeof(serial_number));
   802aa:	2110      	movs	r1, #16
   802ac:	4b4f      	ldr	r3, [pc, #316]	; (803ec <main+0x148>)
   802ae:	a802      	add	r0, sp, #8
   802b0:	4798      	blx	r3

    irq_initialize_vectors();
    cpu_irq_enable();
   802b2:	2201      	movs	r2, #1
   802b4:	4d4e      	ldr	r5, [pc, #312]	; (803f0 <main+0x14c>)
   802b6:	702a      	strb	r2, [r5, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   802b8:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
   802bc:	b662      	cpsie	i
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	uint8_t i;

	for (i = 0; i < SLEEPMGR_NR_OF_MODES - 1; i++) {
		sleepmgr_locks[i] = 0;
   802be:	2300      	movs	r3, #0
   802c0:	4c4c      	ldr	r4, [pc, #304]	; (803f4 <main+0x150>)
   802c2:	4f4d      	ldr	r7, [pc, #308]	; (803f8 <main+0x154>)
	}
	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
   802c4:	7162      	strb	r2, [r4, #5]
		sleepmgr_locks[i] = 0;
   802c6:	7023      	strb	r3, [r4, #0]
   802c8:	7063      	strb	r3, [r4, #1]
   802ca:	70a3      	strb	r3, [r4, #2]
   802cc:	70e3      	strb	r3, [r4, #3]
   802ce:	7123      	strb	r3, [r4, #4]

    // Initialize the sleep manager
    sleepmgr_init();
#if !SAMD21 && !SAMR21
    sysclk_init();
   802d0:	4a4a      	ldr	r2, [pc, #296]	; (803fc <main+0x158>)
   802d2:	4790      	blx	r2
    phywhisperer_setup_pins();
   802d4:	4b4a      	ldr	r3, [pc, #296]	; (80400 <main+0x15c>)
   802d6:	46bb      	mov	fp, r7
   802d8:	f8df 9128 	ldr.w	r9, [pc, #296]	; 80404 <main+0x160>
    system_init();
#endif

	//Convert serial number to ASCII for USB Serial number
	for(unsigned int i = 0; i < 4; i++){
		sprintf(usb_serial_number+(i*8), "%08x", (unsigned int)serial_number[i]);	
   802dc:	f8df 8128 	ldr.w	r8, [pc, #296]	; 80408 <main+0x164>
   802e0:	ae02      	add	r6, sp, #8
   802e2:	f10d 0a18 	add.w	sl, sp, #24
    phywhisperer_setup_pins();
   802e6:	4798      	blx	r3
		sprintf(usb_serial_number+(i*8), "%08x", (unsigned int)serial_number[i]);	
   802e8:	f856 2b04 	ldr.w	r2, [r6], #4
   802ec:	4658      	mov	r0, fp
   802ee:	4641      	mov	r1, r8
   802f0:	47c8      	blx	r9
	for(unsigned int i = 0; i < 4; i++){
   802f2:	4556      	cmp	r6, sl
   802f4:	f10b 0b08 	add.w	fp, fp, #8
   802f8:	d1f6      	bne.n	802e8 <main+0x44>
//@}

static inline void genclk_enable(const struct genclk_config *p_cfg,
		uint32_t ul_id)
{
	PMC->PMC_PCK[ul_id] = p_cfg->ctrl;
   802fa:	2204      	movs	r2, #4
	}
	usb_serial_number[32] = 0;
   802fc:	2600      	movs	r6, #0
   802fe:	4b43      	ldr	r3, [pc, #268]	; (8040c <main+0x168>)
	pmc_enable_pck(ul_id);
   80300:	2001      	movs	r0, #1
	PMC->PMC_PCK[ul_id] = p_cfg->ctrl;
   80302:	645a      	str	r2, [r3, #68]	; 0x44
	pmc_enable_pck(ul_id);
   80304:	4b42      	ldr	r3, [pc, #264]	; (80410 <main+0x16c>)
   80306:	f887 6020 	strb.w	r6, [r7, #32]
   8030a:	4798      	blx	r3

    genclk_enable_config(GENCLK_PCK_1, GENCLK_PCK_SRC_MCK, GENCLK_PCK_PRES_1);
    udc_start();
   8030c:	4b41      	ldr	r3, [pc, #260]	; (80414 <main+0x170>)
   8030e:	4798      	blx	r3
    gpio_set_pin_high(LED0_GPIO);
   80310:	201d      	movs	r0, #29
   80312:	4b41      	ldr	r3, [pc, #260]	; (80418 <main+0x174>)
   80314:	4798      	blx	r3
    gpio_set_pin_low(LED1_GPIO);
   80316:	201f      	movs	r0, #31
   80318:	4b40      	ldr	r3, [pc, #256]	; (8041c <main+0x178>)
   8031a:	4798      	blx	r3
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   8031c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80320:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000

	// Find the deepest allowable sleep mode
	sleep_mode = sleepmgr_get_sleep_mode();
	// Return right away if first mode (ACTIVE) is locked.
	if (sleep_mode==SLEEPMGR_ACTIVE) {
		cpu_irq_enable();
   80324:	2701      	movs	r7, #1
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80326:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 80420 <main+0x17c>

    phywhisperer_no_pwr();
    naeusb_register_handlers();
    openadc_register_handlers();
    phywhisperer_register_handlers();
    USB_PWR_STATE = 0;
   8032a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80424 <main+0x180>
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   8032e:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80332:	f8cb 3034 	str.w	r3, [fp, #52]	; 0x34
    naeusb_register_handlers();
   80336:	4b3c      	ldr	r3, [pc, #240]	; (80428 <main+0x184>)
   80338:	4798      	blx	r3
    openadc_register_handlers();
   8033a:	4b3c      	ldr	r3, [pc, #240]	; (8042c <main+0x188>)
   8033c:	4798      	blx	r3
    phywhisperer_register_handlers();
   8033e:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 80430 <main+0x18c>
   80342:	4b3c      	ldr	r3, [pc, #240]	; (80434 <main+0x190>)
   80344:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 80438 <main+0x194>
   80348:	4798      	blx	r3
    USB_PWR_STATE = 0;
   8034a:	f889 6000 	strb.w	r6, [r9]

static inline void sleepmgr_sleep(const enum sleepmgr_mode sleep_mode)
{
	Assert(sleep_mode != SLEEPMGR_ACTIVE);
#ifdef CONFIG_SLEEPMGR_ENABLE
	cpu_irq_disable();
   8034e:	2600      	movs	r6, #0
	while (!(*lock_ptr)) {
   80350:	7820      	ldrb	r0, [r4, #0]
   80352:	2800      	cmp	r0, #0
   80354:	d132      	bne.n	803bc <main+0x118>
   80356:	4b27      	ldr	r3, [pc, #156]	; (803f4 <main+0x150>)
   80358:	f813 2f01 	ldrb.w	r2, [r3, #1]!
		sleep_mode = (enum sleepmgr_mode)(sleep_mode + 1);
   8035c:	3001      	adds	r0, #1
   8035e:	b2c0      	uxtb	r0, r0
	while (!(*lock_ptr)) {
   80360:	2a00      	cmp	r2, #0
   80362:	d0f9      	beq.n	80358 <main+0xb4>
	if (sleep_mode==SLEEPMGR_ACTIVE) {
   80364:	b350      	cbz	r0, 803bc <main+0x118>
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i");
   80366:	b672      	cpsid	i
   80368:	f3bf 8f5f 	dmb	sy
   8036c:	702e      	strb	r6, [r5, #0]

	// Atomically enable the global interrupts and enter the sleep mode.
	pmc_sleep(sleep_mode);
   8036e:	47c0      	blx	r8

    uint8_t curr_pwr_setting = 0;
    while(1) {
        sleepmgr_enter_sleep();
        uint8_t button_status = !(PIOA->PIO_PDSR & (1 << BUTTON_IN));
   80370:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
        if (button_status){
   80374:	f013 7380 	ands.w	r3, r3, #16777216	; 0x1000000
   80378:	d1ea      	bne.n	80350 <main+0xac>
    for (volatile uint32_t i = 0; i < 250000; i++);
   8037a:	9300      	str	r3, [sp, #0]
   8037c:	9b00      	ldr	r3, [sp, #0]
   8037e:	4a2f      	ldr	r2, [pc, #188]	; (8043c <main+0x198>)
   80380:	4293      	cmp	r3, r2
   80382:	d805      	bhi.n	80390 <main+0xec>
   80384:	9b00      	ldr	r3, [sp, #0]
   80386:	3301      	adds	r3, #1
   80388:	9300      	str	r3, [sp, #0]
   8038a:	9b00      	ldr	r3, [sp, #0]
   8038c:	4293      	cmp	r3, r2
   8038e:	d9f9      	bls.n	80384 <main+0xe0>
            hacky_delay(); //delay to try to debounce
            while (!(PIOA->PIO_PDSR & (1 << BUTTON_IN))); //wait for trigger to be unpressed
   80390:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
   80394:	01db      	lsls	r3, r3, #7
   80396:	d5fb      	bpl.n	80390 <main+0xec>

            if (USB_PWR_STATE && USB_PWR_STATE <= 2) {
   80398:	f899 3000 	ldrb.w	r3, [r9]
   8039c:	3b01      	subs	r3, #1
   8039e:	2b01      	cmp	r3, #1
   803a0:	d911      	bls.n	803c6 <main+0x122>
    for (volatile uint32_t i = 0; i < 250000; i++);
   803a2:	2300      	movs	r3, #0
   803a4:	9301      	str	r3, [sp, #4]
   803a6:	4a25      	ldr	r2, [pc, #148]	; (8043c <main+0x198>)
   803a8:	9b01      	ldr	r3, [sp, #4]
   803aa:	4293      	cmp	r3, r2
   803ac:	d8cf      	bhi.n	8034e <main+0xaa>
   803ae:	9b01      	ldr	r3, [sp, #4]
   803b0:	3301      	adds	r3, #1
   803b2:	9301      	str	r3, [sp, #4]
   803b4:	9b01      	ldr	r3, [sp, #4]
   803b6:	4293      	cmp	r3, r2
   803b8:	d9f9      	bls.n	803ae <main+0x10a>
   803ba:	e7c8      	b.n	8034e <main+0xaa>
		cpu_irq_enable();
   803bc:	702f      	strb	r7, [r5, #0]
   803be:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   803c2:	b662      	cpsie	i
		return;
   803c4:	e7d4      	b.n	80370 <main+0xcc>
                if (pwr_st_from_io()) { //currently on
   803c6:	47d0      	blx	sl
   803c8:	b140      	cbz	r0, 803dc <main+0x138>
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   803ca:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   803ce:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
    PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   803d2:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   803d6:	f8cb 3034 	str.w	r3, [fp, #52]	; 0x34
}
   803da:	e7e2      	b.n	803a2 <main+0xfe>
                    phywhisperer_no_pwr();
                } else {
                    pwr_list[USB_PWR_STATE]();
   803dc:	f899 3000 	ldrb.w	r3, [r9]
   803e0:	4a17      	ldr	r2, [pc, #92]	; (80440 <main+0x19c>)
   803e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   803e6:	4798      	blx	r3
   803e8:	e7db      	b.n	803a2 <main+0xfe>
   803ea:	bf00      	nop
   803ec:	000815b5 	.word	0x000815b5
   803f0:	2000030c 	.word	0x2000030c
   803f4:	20001374 	.word	0x20001374
   803f8:	20000194 	.word	0x20000194
   803fc:	00082d7d 	.word	0x00082d7d
   80400:	00080179 	.word	0x00080179
   80404:	00083a3d 	.word	0x00083a3d
   80408:	0008a598 	.word	0x0008a598
   8040c:	400e0400 	.word	0x400e0400
   80410:	00082fa5 	.word	0x00082fa5
   80414:	00080f11 	.word	0x00080f11
   80418:	0008312d 	.word	0x0008312d
   8041c:	00083149 	.word	0x00083149
   80420:	400e0c00 	.word	0x400e0c00
   80424:	20000d6c 	.word	0x20000d6c
   80428:	00080925 	.word	0x00080925
   8042c:	00080c99 	.word	0x00080c99
   80430:	00083325 	.word	0x00083325
   80434:	00080d69 	.word	0x00080d69
   80438:	00080139 	.word	0x00080139
   8043c:	0003d08f 	.word	0x0003d08f
   80440:	20000188 	.word	0x20000188

00080444 <FPGA_setlock>:
uint8_t volatile *xram = (uint8_t *) PSRAM_BASE_ADDRESS;

static volatile fpga_lockstatus_t _fpga_locked = fpga_unlocked;

int FPGA_setlock(fpga_lockstatus_t lockstatus)
{
   80444:	b538      	push	{r3, r4, r5, lr}
  int ret = 0;
  cpu_irq_enter_critical();
   80446:	4b08      	ldr	r3, [pc, #32]	; (80468 <FPGA_setlock+0x24>)
{
   80448:	4604      	mov	r4, r0
  cpu_irq_enter_critical();
   8044a:	4798      	blx	r3
  if (_fpga_locked == fpga_unlocked)
   8044c:	4b07      	ldr	r3, [pc, #28]	; (8046c <FPGA_setlock+0x28>)
   8044e:	781a      	ldrb	r2, [r3, #0]
   80450:	b92a      	cbnz	r2, 8045e <FPGA_setlock+0x1a>
  {
    ret = 1;
   80452:	2501      	movs	r5, #1
    _fpga_locked = lockstatus;
   80454:	701c      	strb	r4, [r3, #0]
  }
  cpu_irq_leave_critical();
   80456:	4b06      	ldr	r3, [pc, #24]	; (80470 <FPGA_setlock+0x2c>)
   80458:	4798      	blx	r3
  return ret;
}
   8045a:	4628      	mov	r0, r5
   8045c:	bd38      	pop	{r3, r4, r5, pc}
  int ret = 0;
   8045e:	2500      	movs	r5, #0
  cpu_irq_leave_critical();
   80460:	4b03      	ldr	r3, [pc, #12]	; (80470 <FPGA_setlock+0x2c>)
   80462:	4798      	blx	r3
}
   80464:	4628      	mov	r0, r5
   80466:	bd38      	pop	{r3, r4, r5, pc}
   80468:	000836a9 	.word	0x000836a9
   8046c:	20000d6d 	.word	0x20000d6d
   80470:	000836e9 	.word	0x000836e9

00080474 <FPGA_releaselock>:

void FPGA_releaselock(void)
{
  _fpga_locked = fpga_unlocked;
   80474:	2200      	movs	r2, #0
   80476:	4b01      	ldr	r3, [pc, #4]	; (8047c <FPGA_releaselock+0x8>)
   80478:	701a      	strb	r2, [r3, #0]
}
   8047a:	4770      	bx	lr
   8047c:	20000d6d 	.word	0x20000d6d

00080480 <FPGA_lockstatus>:

fpga_lockstatus_t FPGA_lockstatus(void)
{
  return _fpga_locked;
   80480:	4b01      	ldr	r3, [pc, #4]	; (80488 <FPGA_lockstatus+0x8>)
   80482:	7818      	ldrb	r0, [r3, #0]
}
   80484:	4770      	bx	lr
   80486:	bf00      	nop
   80488:	20000d6d 	.word	0x20000d6d

0008048c <FPGA_setaddr>:
#define FPGA_ALE_GPIO PIN_EBI_USB_SPARE1
#endif

#ifdef FPGA_ADDR_PORT
void FPGA_setaddr(uint32_t addr)
{
   8048c:	4603      	mov	r3, r0
   8048e:	b510      	push	{r4, lr}
	#if (USB_DEVICE_PRODUCT_ID == 0xACE5) || (USB_DEVICE_PRODUCT_ID == 0xC610)
	//husky
	  FPGA_ADDR_PORT->PIO_ODSR = (FPGA_ADDR_PORT->PIO_ODSR & 0x40) | (addr & 0x3F) | ((addr & 0xC0) << 1);
   80490:	490a      	ldr	r1, [pc, #40]	; (804bc <FPGA_setaddr+0x30>)
   80492:	f003 0c3f 	and.w	ip, r3, #63	; 0x3f
   80496:	6b8a      	ldr	r2, [r1, #56]	; 0x38
   80498:	005b      	lsls	r3, r3, #1
   8049a:	f002 0240 	and.w	r2, r2, #64	; 0x40
   8049e:	ea42 020c 	orr.w	r2, r2, ip
   804a2:	f403 73c0 	and.w	r3, r3, #384	; 0x180
   804a6:	4313      	orrs	r3, r2
	#else
			pio_sync_output_write(FPGA_ADDR_PORT, addr);
	#endif

			gpio_set_pin_low(FPGA_ALE_GPIO);
   804a8:	2031      	movs	r0, #49	; 0x31
   804aa:	4c05      	ldr	r4, [pc, #20]	; (804c0 <FPGA_setaddr+0x34>)
	  FPGA_ADDR_PORT->PIO_ODSR = (FPGA_ADDR_PORT->PIO_ODSR & 0x40) | (addr & 0x3F) | ((addr & 0xC0) << 1);
   804ac:	638b      	str	r3, [r1, #56]	; 0x38
			gpio_set_pin_low(FPGA_ALE_GPIO);
   804ae:	47a0      	blx	r4
			gpio_set_pin_high(FPGA_ALE_GPIO);
}
   804b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			gpio_set_pin_high(FPGA_ALE_GPIO);
   804b4:	2031      	movs	r0, #49	; 0x31
   804b6:	4b03      	ldr	r3, [pc, #12]	; (804c4 <FPGA_setaddr+0x38>)
   804b8:	4718      	bx	r3
   804ba:	bf00      	nop
   804bc:	400e0e00 	.word	0x400e0e00
   804c0:	00083149 	.word	0x00083149
   804c4:	0008312d 	.word	0x0008312d

000804c8 <fpga_program_spi_setup1>:
#include <asf.h>
#include "fpga_program.h"
#include "spi.h"

void fpga_program_spi_setup1(uint32_t prog_freq)
{
   804c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gpio_configure_pin(AVRISP_MOSI_GPIO, AVRISP_MOSI_FLAGS);
	gpio_configure_pin(AVRISP_SCK_GPIO, AVRISP_SCK_FLAGS);
	usart_enable_tx(AVRISP_USART);
	usart_enable_rx(AVRISP_USART);
	#else
	spi_enable_clock(SPI);
   804cc:	4c1a      	ldr	r4, [pc, #104]	; (80538 <fpga_program_spi_setup1+0x70>)
{
   804ce:	4605      	mov	r5, r0
	spi_enable_clock(SPI);
   804d0:	4b1a      	ldr	r3, [pc, #104]	; (8053c <fpga_program_spi_setup1+0x74>)
   804d2:	4620      	mov	r0, r4
   804d4:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
   804d6:	2380      	movs	r3, #128	; 0x80
	spi_reset(SPI);
	spi_set_master_mode(SPI);
	spi_disable_mode_fault_detect(SPI);
	spi_disable_loopback(SPI);

	spi_set_clock_polarity(SPI, 0, 0);
   804d8:	2200      	movs	r2, #0
   804da:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
   804dc:	6863      	ldr	r3, [r4, #4]
   804de:	4620      	mov	r0, r4
   804e0:	f043 0301 	orr.w	r3, r3, #1
   804e4:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
   804e6:	6863      	ldr	r3, [r4, #4]
   804e8:	4611      	mov	r1, r2
   804ea:	f043 0310 	orr.w	r3, r3, #16
   804ee:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
   804f0:	6863      	ldr	r3, [r4, #4]
   804f2:	4f13      	ldr	r7, [pc, #76]	; (80540 <fpga_program_spi_setup1+0x78>)
   804f4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   804f8:	6063      	str	r3, [r4, #4]
   804fa:	47b8      	blx	r7
	spi_set_clock_phase(SPI, 0, 1);
   804fc:	2201      	movs	r2, #1
   804fe:	4620      	mov	r0, r4
   80500:	2100      	movs	r1, #0
   80502:	4b10      	ldr	r3, [pc, #64]	; (80544 <fpga_program_spi_setup1+0x7c>)
   80504:	4798      	blx	r3
	spi_set_baudrate_div(SPI, 0, spi_calc_baudrate_div(prog_freq, sysclk_get_cpu_hz()));
   80506:	4628      	mov	r0, r5
   80508:	490f      	ldr	r1, [pc, #60]	; (80548 <fpga_program_spi_setup1+0x80>)
   8050a:	4b10      	ldr	r3, [pc, #64]	; (8054c <fpga_program_spi_setup1+0x84>)
   8050c:	4798      	blx	r3
   8050e:	4602      	mov	r2, r0
   80510:	2100      	movs	r1, #0
   80512:	4620      	mov	r0, r4
   80514:	4b0e      	ldr	r3, [pc, #56]	; (80550 <fpga_program_spi_setup1+0x88>)
   80516:	b2d2      	uxtb	r2, r2
   80518:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
   8051a:	2301      	movs	r3, #1

	spi_enable(SPI);

	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
   8051c:	4e0d      	ldr	r6, [pc, #52]	; (80554 <fpga_program_spi_setup1+0x8c>)
   8051e:	6023      	str	r3, [r4, #0]
   80520:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80524:	200e      	movs	r0, #14
   80526:	47b0      	blx	r6
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
   80528:	4633      	mov	r3, r6
	#endif

}
   8052a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
   8052e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80532:	200f      	movs	r0, #15
   80534:	4718      	bx	r3
   80536:	bf00      	nop
   80538:	40008000 	.word	0x40008000
   8053c:	00082ca1 	.word	0x00082ca1
   80540:	00082ce9 	.word	0x00082ce9
   80544:	00082d01 	.word	0x00082d01
   80548:	05b8d800 	.word	0x05b8d800
   8054c:	00082d19 	.word	0x00082d19
   80550:	00082d31 	.word	0x00082d31
   80554:	00083165 	.word	0x00083165

00080558 <fpga_program_spi_sendbyte>:
void fpga_program_spi_sendbyte(uint8_t databyte)
{
	#if AVRISP_USEUART
	usart_putchar(AVRISP_USART, databyte);
	#else
	spi_write(SPI, databyte, 0, 0);
   80558:	2300      	movs	r3, #0
{
   8055a:	b410      	push	{r4}
	spi_write(SPI, databyte, 0, 0);
   8055c:	4c03      	ldr	r4, [pc, #12]	; (8056c <fpga_program_spi_sendbyte+0x14>)
{
   8055e:	4601      	mov	r1, r0
	spi_write(SPI, databyte, 0, 0);
   80560:	46a4      	mov	ip, r4
   80562:	461a      	mov	r2, r3
   80564:	4802      	ldr	r0, [pc, #8]	; (80570 <fpga_program_spi_sendbyte+0x18>)
	#endif
}
   80566:	bc10      	pop	{r4}
	spi_write(SPI, databyte, 0, 0);
   80568:	4760      	bx	ip
   8056a:	bf00      	nop
   8056c:	00082cad 	.word	0x00082cad
   80570:	40008000 	.word	0x40008000

00080574 <fpga_program_init>:

/* FPGA Programming: Init pins, set to standby state */
void fpga_program_init(void)
{
   80574:	b510      	push	{r4, lr}
    FPGA_NPROG_SETUP();
   80576:	4b05      	ldr	r3, [pc, #20]	; (8058c <fpga_program_init+0x18>)
   80578:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8057c:	2014      	movs	r0, #20
   8057e:	4798      	blx	r3
    FPGA_NPROG_HIGH();
}
   80580:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    FPGA_NPROG_HIGH();
   80584:	2014      	movs	r0, #20
   80586:	4b02      	ldr	r3, [pc, #8]	; (80590 <fpga_program_init+0x1c>)
   80588:	4718      	bx	r3
   8058a:	bf00      	nop
   8058c:	00083165 	.word	0x00083165
   80590:	0008312d 	.word	0x0008312d

00080594 <fpga_program_setup1>:

/* FPGA Programming Step 1: Erase FPGA, setup SPI interface */
void fpga_program_setup1(uint32_t prog_freq)
{
   80594:	b570      	push	{r4, r5, r6, lr}
	/* Init - set program low to erase FPGA */
	FPGA_NPROG_LOW();
   80596:	4b13      	ldr	r3, [pc, #76]	; (805e4 <fpga_program_setup1+0x50>)
{
   80598:	b084      	sub	sp, #16
   8059a:	4604      	mov	r4, r0
	FPGA_NPROG_LOW();
   8059c:	2014      	movs	r0, #20
   8059e:	4798      	blx	r3
#if (USB_DEVICE_PRODUCT_ID == 0xACE5) || (USB_DEVICE_PRODUCT_ID == 0xC610) || (USB_DEVICE_PRODUCT_ID == 0xC310)
    
    usart_spi_opt_t spiopts;
    spiopts.baudrate = prog_freq;
    spiopts.char_length = US_MR_CHRL_8_BIT;
    spiopts.channel_mode = US_MR_CHMODE_NORMAL;
   805a0:	2300      	movs	r3, #0
    spiopts.char_length = US_MR_CHRL_8_BIT;
   805a2:	21c0      	movs	r1, #192	; 0xc0
    spiopts.spi_mode = SPI_MODE_0;

    sysclk_enable_peripheral_clock(FPGA_PROG_USART_ID);
    usart_init_spi_master(FPGA_PROG_USART, &spiopts, sysclk_get_cpu_hz());
   805a4:	4d10      	ldr	r5, [pc, #64]	; (805e8 <fpga_program_setup1+0x54>)
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   805a6:	4a11      	ldr	r2, [pc, #68]	; (805ec <fpga_program_setup1+0x58>)
   805a8:	200d      	movs	r0, #13
    spiopts.char_length = US_MR_CHRL_8_BIT;
   805aa:	e9cd 4100 	strd	r4, r1, [sp]
    spiopts.spi_mode = SPI_MODE_0;
   805ae:	e9cd 3302 	strd	r3, r3, [sp, #8]
   805b2:	4790      	blx	r2
    usart_init_spi_master(FPGA_PROG_USART, &spiopts, sysclk_get_cpu_hz());
   805b4:	4a0e      	ldr	r2, [pc, #56]	; (805f0 <fpga_program_setup1+0x5c>)
   805b6:	4b0f      	ldr	r3, [pc, #60]	; (805f4 <fpga_program_setup1+0x60>)
   805b8:	4669      	mov	r1, sp
   805ba:	4628      	mov	r0, r5
   805bc:	4798      	blx	r3
    FPGA_DO_SETUP();
   805be:	4e0e      	ldr	r6, [pc, #56]	; (805f8 <fpga_program_setup1+0x64>)
   805c0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805c4:	2012      	movs	r0, #18
   805c6:	47b0      	blx	r6
    FPGA_CCLK_SETUP();
   805c8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805cc:	2011      	movs	r0, #17
   805ce:	47b0      	blx	r6

    //pin setup doesn't transfer control over to USART, so have to do it manually
    PIOA->PIO_PDR = (1 << PIN_FPGA_DO_GPIO) | (1 << PIN_FPGA_CCLK_GPIO);
   805d0:	f44f 21c0 	mov.w	r1, #393216	; 0x60000
   805d4:	4a09      	ldr	r2, [pc, #36]	; (805fc <fpga_program_setup1+0x68>)
    usart_enable_tx(FPGA_PROG_USART);
   805d6:	4628      	mov	r0, r5
   805d8:	4b09      	ldr	r3, [pc, #36]	; (80600 <fpga_program_setup1+0x6c>)
    PIOA->PIO_PDR = (1 << PIN_FPGA_DO_GPIO) | (1 << PIN_FPGA_CCLK_GPIO);
   805da:	6051      	str	r1, [r2, #4]
    usart_enable_tx(FPGA_PROG_USART);
   805dc:	4798      	blx	r3

	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
	#endif
#endif
}
   805de:	b004      	add	sp, #16
   805e0:	bd70      	pop	{r4, r5, r6, pc}
   805e2:	bf00      	nop
   805e4:	00083149 	.word	0x00083149
   805e8:	40090000 	.word	0x40090000
   805ec:	00082f5d 	.word	0x00082f5d
   805f0:	05b8d800 	.word	0x05b8d800
   805f4:	00081601 	.word	0x00081601
   805f8:	00083165 	.word	0x00083165
   805fc:	400e0c00 	.word	0x400e0c00
   80600:	000816d5 	.word	0x000816d5

00080604 <fpga_program_setup2>:

/* FPGA Programming Step 2: Prepare FPGA for receiving programming data */
void fpga_program_setup2(void)
{
    FPGA_NPROG_HIGH();
   80604:	2014      	movs	r0, #20
   80606:	4b01      	ldr	r3, [pc, #4]	; (8060c <fpga_program_setup2+0x8>)
   80608:	4718      	bx	r3
   8060a:	bf00      	nop
   8060c:	0008312d 	.word	0x0008312d

00080610 <fpga_program_sendbyte>:
//For debug only
//uint32_t fpga_total_bs_len;

/* FPGA Programming Step 3: Send data until done */
void fpga_program_sendbyte(uint8_t databyte)
{
   80610:	4601      	mov	r1, r0
    #if (USB_DEVICE_PRODUCT_ID == 0xACE5) || (USB_DEVICE_PRODUCT_ID == 0xC610)
	//For debug only
    //fpga_total_bs_len++;
    usart_putchar(FPGA_PROG_USART, databyte);
   80612:	4b01      	ldr	r3, [pc, #4]	; (80618 <fpga_program_sendbyte+0x8>)
   80614:	4801      	ldr	r0, [pc, #4]	; (8061c <fpga_program_sendbyte+0xc>)
   80616:	4718      	bx	r3
   80618:	000816dd 	.word	0x000816dd
   8061c:	40090000 	.word	0x40090000

00080620 <ui_powerdown>:
   80620:	b510      	push	{r4, lr}
   80622:	4c04      	ldr	r4, [pc, #16]	; (80634 <ui_powerdown+0x14>)
   80624:	201d      	movs	r0, #29
   80626:	47a0      	blx	r4
   80628:	4623      	mov	r3, r4
   8062a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8062e:	201f      	movs	r0, #31
   80630:	4718      	bx	r3
   80632:	bf00      	nop
   80634:	00082bed 	.word	0x00082bed

00080638 <ui_wakeup>:
		
}

void ui_wakeup(void)
{
	LED_On(LED0_GPIO);
   80638:	201d      	movs	r0, #29
   8063a:	4b01      	ldr	r3, [pc, #4]	; (80640 <ui_wakeup+0x8>)
   8063c:	4718      	bx	r3
   8063e:	bf00      	nop
   80640:	00082c01 	.word	0x00082c01

00080644 <ui_process>:
	//board_sram_pwron();
}

void ui_process(uint16_t framenumber)
{
	if ((framenumber % 1000) == 0) {
   80644:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   80648:	4b10      	ldr	r3, [pc, #64]	; (8068c <ui_process+0x48>)
{
   8064a:	b510      	push	{r4, lr}
	if ((framenumber % 1000) == 0) {
   8064c:	fba3 2300 	umull	r2, r3, r3, r0
   80650:	099b      	lsrs	r3, r3, #6
   80652:	fb01 0313 	mls	r3, r1, r3, r0
   80656:	b29b      	uxth	r3, r3
{
   80658:	4604      	mov	r4, r0
	if ((framenumber % 1000) == 0) {
   8065a:	b193      	cbz	r3, 80682 <ui_process+0x3e>
		LED_On(LED0_GPIO);
	}
	if ((framenumber % 1000) == 500) {
   8065c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
   80660:	d003      	beq.n	8066a <ui_process+0x26>
		LED_Off(LED0_GPIO);
	}
	
	if ((framenumber % 512) == 0) {
   80662:	f3c4 0408 	ubfx	r4, r4, #0, #9
   80666:	b13c      	cbz	r4, 80678 <ui_process+0x34>
		LED_Off(LED1_GPIO);
		//LED_Off(LED2_GPIO);
	}
}
   80668:	bd10      	pop	{r4, pc}
		LED_Off(LED0_GPIO);
   8066a:	201d      	movs	r0, #29
   8066c:	4b08      	ldr	r3, [pc, #32]	; (80690 <ui_process+0x4c>)
	if ((framenumber % 512) == 0) {
   8066e:	f3c4 0408 	ubfx	r4, r4, #0, #9
		LED_Off(LED0_GPIO);
   80672:	4798      	blx	r3
	if ((framenumber % 512) == 0) {
   80674:	2c00      	cmp	r4, #0
   80676:	d1f7      	bne.n	80668 <ui_process+0x24>
}
   80678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		LED_Off(LED1_GPIO);
   8067c:	201f      	movs	r0, #31
   8067e:	4b04      	ldr	r3, [pc, #16]	; (80690 <ui_process+0x4c>)
   80680:	4718      	bx	r3
		LED_On(LED0_GPIO);
   80682:	201d      	movs	r0, #29
   80684:	4b03      	ldr	r3, [pc, #12]	; (80694 <ui_process+0x50>)
   80686:	4798      	blx	r3
	if ((framenumber % 1000) == 500) {
   80688:	e7eb      	b.n	80662 <ui_process+0x1e>
   8068a:	bf00      	nop
   8068c:	10624dd3 	.word	0x10624dd3
   80690:	00082bed 	.word	0x00082bed
   80694:	00082c01 	.word	0x00082c01

00080698 <naeusb_add_in_handler>:
    return main_b_vendor_enable;
}

bool naeusb_add_in_handler(usb_request_handle_func new_handler)
{
    if (naeusb_num_in_handlers < 16) {
   80698:	4907      	ldr	r1, [pc, #28]	; (806b8 <naeusb_add_in_handler+0x20>)
   8069a:	780a      	ldrb	r2, [r1, #0]
   8069c:	2a0f      	cmp	r2, #15
   8069e:	d901      	bls.n	806a4 <naeusb_add_in_handler+0xc>
        naeusb_in_request_handlers[naeusb_num_in_handlers++] = new_handler;
        return true;
    }
    return false;
   806a0:	2000      	movs	r0, #0
    
}
   806a2:	4770      	bx	lr
   806a4:	4603      	mov	r3, r0
{
   806a6:	b410      	push	{r4}
        naeusb_in_request_handlers[naeusb_num_in_handlers++] = new_handler;
   806a8:	1c50      	adds	r0, r2, #1
   806aa:	4c04      	ldr	r4, [pc, #16]	; (806bc <naeusb_add_in_handler+0x24>)
   806ac:	7008      	strb	r0, [r1, #0]
   806ae:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
        return true;
   806b2:	2001      	movs	r0, #1
}
   806b4:	bc10      	pop	{r4}
   806b6:	4770      	bx	lr
   806b8:	200011f0 	.word	0x200011f0
   806bc:	200011b0 	.word	0x200011b0

000806c0 <naeusb_add_out_handler>:

bool naeusb_add_out_handler(usb_request_handle_func new_handler)
{
    if (naeusb_num_out_handlers < 16) {
   806c0:	4907      	ldr	r1, [pc, #28]	; (806e0 <naeusb_add_out_handler+0x20>)
   806c2:	780a      	ldrb	r2, [r1, #0]
   806c4:	2a0f      	cmp	r2, #15
   806c6:	d901      	bls.n	806cc <naeusb_add_out_handler+0xc>
        naeusb_out_request_handlers[naeusb_num_out_handlers++] = new_handler;
        return true;
    }
    return false;
   806c8:	2000      	movs	r0, #0
    
}
   806ca:	4770      	bx	lr
   806cc:	4603      	mov	r3, r0
{
   806ce:	b410      	push	{r4}
        naeusb_out_request_handlers[naeusb_num_out_handlers++] = new_handler;
   806d0:	1c50      	adds	r0, r2, #1
   806d2:	4c04      	ldr	r4, [pc, #16]	; (806e4 <naeusb_add_out_handler+0x24>)
   806d4:	7008      	strb	r0, [r1, #0]
   806d6:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
        return true;
   806da:	2001      	movs	r0, #1
}
   806dc:	bc10      	pop	{r4}
   806de:	4770      	bx	lr
   806e0:	200011f1 	.word	0x200011f1
   806e4:	200011f4 	.word	0x200011f4

000806e8 <main_suspend_action>:

//this stuff just turns leds on and off
void main_suspend_action(void)
{
	active = false;
	ui_powerdown();
   806e8:	4b00      	ldr	r3, [pc, #0]	; (806ec <main_suspend_action+0x4>)
   806ea:	4718      	bx	r3
   806ec:	00080621 	.word	0x00080621

000806f0 <main_resume_action>:
}

void main_resume_action(void)
{
    ui_wakeup();
   806f0:	4b00      	ldr	r3, [pc, #0]	; (806f4 <main_resume_action+0x4>)
   806f2:	4718      	bx	r3
   806f4:	00080639 	.word	0x00080639

000806f8 <main_sof_action>:
}

void main_sof_action(void)
{
    if (!main_b_vendor_enable)
   806f8:	4b05      	ldr	r3, [pc, #20]	; (80710 <main_sof_action+0x18>)
   806fa:	781b      	ldrb	r3, [r3, #0]
   806fc:	b903      	cbnz	r3, 80700 <main_sof_action+0x8>
   806fe:	4770      	bx	lr
{
   80700:	b510      	push	{r4, lr}
        return;
    ui_process(udd_get_frame_number());
   80702:	4b04      	ldr	r3, [pc, #16]	; (80714 <main_sof_action+0x1c>)
   80704:	4798      	blx	r3
}
   80706:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ui_process(udd_get_frame_number());
   8070a:	4b03      	ldr	r3, [pc, #12]	; (80718 <main_sof_action+0x20>)
   8070c:	4718      	bx	r3
   8070e:	bf00      	nop
   80710:	200001bc 	.word	0x200001bc
   80714:	0008251d 	.word	0x0008251d
   80718:	00080645 	.word	0x00080645

0008071c <main_vendor_enable>:

void main_vendor_bulk_out_received(udd_ep_status_t status,
                                   iram_size_t nb_transfered, udd_ep_id_t ep);

bool main_vendor_enable(void)
{
   8071c:	b538      	push	{r3, r4, r5, lr}
    active = true;
    main_b_vendor_enable = true;
   8071e:	2401      	movs	r4, #1
   80720:	4d04      	ldr	r5, [pc, #16]	; (80734 <main_vendor_enable+0x18>)
    // Start data reception on OUT endpoints
// #if UDI_VENDOR_EPS_SIZE_BULK_FS
//     //main_vendor_bulk_in_received(UDD_EP_TRANSFER_OK, 0, 0);
    udi_vendor_bulk_out_run(
   80722:	f44f 6180 	mov.w	r1, #1024	; 0x400
   80726:	4a04      	ldr	r2, [pc, #16]	; (80738 <main_vendor_enable+0x1c>)
   80728:	4b04      	ldr	r3, [pc, #16]	; (8073c <main_vendor_enable+0x20>)
   8072a:	4805      	ldr	r0, [pc, #20]	; (80740 <main_vendor_enable+0x24>)
    main_b_vendor_enable = true;
   8072c:	702c      	strb	r4, [r5, #0]
    udi_vendor_bulk_out_run(
   8072e:	4798      	blx	r3
        main_buf_loopback,
        sizeof(main_buf_loopback),
        main_vendor_bulk_out_received);
// #endif
    return true;
}
   80730:	4620      	mov	r0, r4
   80732:	bd38      	pop	{r3, r4, r5, pc}
   80734:	200001bc 	.word	0x200001bc
   80738:	00080b69 	.word	0x00080b69
   8073c:	00083095 	.word	0x00083095
   80740:	20000db0 	.word	0x20000db0

00080744 <main_vendor_disable>:

void main_vendor_disable(void)
{
    main_b_vendor_enable = false;
   80744:	2200      	movs	r2, #0
   80746:	4b01      	ldr	r3, [pc, #4]	; (8074c <main_vendor_disable+0x8>)
   80748:	701a      	strb	r2, [r3, #0]
}
   8074a:	4770      	bx	lr
   8074c:	200001bc 	.word	0x200001bc

00080750 <main_setup_out_received>:

bool main_setup_out_received(void)
{
   80750:	b538      	push	{r3, r4, r5, lr}
    bool handler_status = false;
    udd_g_ctrlreq.payload = ctrlbuffer;
   80752:	4b0f      	ldr	r3, [pc, #60]	; (80790 <main_setup_out_received+0x40>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));

    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   80754:	4a0f      	ldr	r2, [pc, #60]	; (80794 <main_setup_out_received+0x44>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   80756:	88d9      	ldrh	r1, [r3, #6]
    udd_g_ctrlreq.payload = ctrlbuffer;
   80758:	480f      	ldr	r0, [pc, #60]	; (80798 <main_setup_out_received+0x48>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   8075a:	2940      	cmp	r1, #64	; 0x40
   8075c:	bf28      	it	cs
   8075e:	2140      	movcs	r1, #64	; 0x40
    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   80760:	7812      	ldrb	r2, [r2, #0]
    udd_g_ctrlreq.payload = ctrlbuffer;
   80762:	6098      	str	r0, [r3, #8]
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   80764:	8199      	strh	r1, [r3, #12]
    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   80766:	b18a      	cbz	r2, 8078c <main_setup_out_received+0x3c>
   80768:	4c0c      	ldr	r4, [pc, #48]	; (8079c <main_setup_out_received+0x4c>)
   8076a:	1e55      	subs	r5, r2, #1
   8076c:	b2ed      	uxtb	r5, r5
   8076e:	1b53      	subs	r3, r2, r5
   80770:	1f25      	subs	r5, r4, #4
   80772:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   80776:	eb04 0482 	add.w	r4, r4, r2, lsl #2
   8077a:	e001      	b.n	80780 <main_setup_out_received+0x30>
   8077c:	42ac      	cmp	r4, r5
   8077e:	d005      	beq.n	8078c <main_setup_out_received+0x3c>
        handler_status = naeusb_out_request_handlers[i-1]();
   80780:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   80784:	4798      	blx	r3
        if (handler_status == true) {
   80786:	2800      	cmp	r0, #0
   80788:	d0f8      	beq.n	8077c <main_setup_out_received+0x2c>
        }
    }

    return false;

}
   8078a:	bd38      	pop	{r3, r4, r5, pc}
    return false;
   8078c:	2000      	movs	r0, #0
}
   8078e:	bd38      	pop	{r3, r4, r5, pc}
   80790:	2000133c 	.word	0x2000133c
   80794:	200011f1 	.word	0x200011f1
   80798:	20000d70 	.word	0x20000d70
   8079c:	200011f4 	.word	0x200011f4

000807a0 <main_setup_in_received>:

bool main_setup_in_received(void)
{
   807a0:	b538      	push	{r3, r4, r5, lr}
    bool handler_status = false;

    for (uint8_t i = naeusb_num_in_handlers; i > 0; i--) {
   807a2:	4b0b      	ldr	r3, [pc, #44]	; (807d0 <main_setup_in_received+0x30>)
   807a4:	781a      	ldrb	r2, [r3, #0]
   807a6:	b18a      	cbz	r2, 807cc <main_setup_in_received+0x2c>
   807a8:	4c0a      	ldr	r4, [pc, #40]	; (807d4 <main_setup_in_received+0x34>)
   807aa:	1e55      	subs	r5, r2, #1
   807ac:	b2ed      	uxtb	r5, r5
   807ae:	1b53      	subs	r3, r2, r5
   807b0:	1f25      	subs	r5, r4, #4
   807b2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   807b6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
   807ba:	e001      	b.n	807c0 <main_setup_in_received+0x20>
   807bc:	42ac      	cmp	r4, r5
   807be:	d005      	beq.n	807cc <main_setup_in_received+0x2c>
        handler_status = naeusb_in_request_handlers[i-1]();
   807c0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   807c4:	4798      	blx	r3
        if (handler_status == true) {
   807c6:	2800      	cmp	r0, #0
   807c8:	d0f8      	beq.n	807bc <main_setup_in_received+0x1c>
        }
    }

    return false;

   807ca:	bd38      	pop	{r3, r4, r5, pc}
    return false;
   807cc:	2000      	movs	r0, #0
   807ce:	bd38      	pop	{r3, r4, r5, pc}
   807d0:	200011f0 	.word	0x200011f0
   807d4:	200011b0 	.word	0x200011b0

000807d8 <naeusb_setup_out_received>:
}


bool naeusb_setup_out_received(void)
{
    switch (udd_g_ctrlreq.req.bRequest) {
   807d8:	4b04      	ldr	r3, [pc, #16]	; (807ec <naeusb_setup_out_received+0x14>)
   807da:	785a      	ldrb	r2, [r3, #1]
   807dc:	2a22      	cmp	r2, #34	; 0x22
        case REQ_SAM_CFG:
            udd_g_ctrlreq.callback = naeusb_sam_cfg_out;
   807de:	bf03      	ittte	eq
   807e0:	4a03      	ldreq	r2, [pc, #12]	; (807f0 <naeusb_setup_out_received+0x18>)
            return true;
   807e2:	2001      	moveq	r0, #1
            udd_g_ctrlreq.callback = naeusb_sam_cfg_out;
   807e4:	611a      	streq	r2, [r3, #16]
            break;
    }
    return false;
   807e6:	2000      	movne	r0, #0
}
   807e8:	4770      	bx	lr
   807ea:	bf00      	nop
   807ec:	2000133c 	.word	0x2000133c
   807f0:	000807f5 	.word	0x000807f5

000807f4 <naeusb_sam_cfg_out>:
{
   807f4:	b510      	push	{r4, lr}
    switch(udd_g_ctrlreq.req.wValue & 0xFF)
   807f6:	4b24      	ldr	r3, [pc, #144]	; (80888 <naeusb_sam_cfg_out+0x94>)
   807f8:	789b      	ldrb	r3, [r3, #2]
   807fa:	3b01      	subs	r3, #1
   807fc:	2b10      	cmp	r3, #16
   807fe:	d80a      	bhi.n	80816 <naeusb_sam_cfg_out+0x22>
   80800:	e8df f003 	tbb	[pc, r3]
   80804:	091b160a 	.word	0x091b160a
   80808:	09090909 	.word	0x09090909
   8080c:	09090909 	.word	0x09090909
   80810:	30090909 	.word	0x30090909
   80814:	3d          	.byte	0x3d
   80815:	00          	.byte	0x00
}
   80816:	bd10      	pop	{r4, pc}
		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   80818:	203e      	movs	r0, #62	; 0x3e
   8081a:	4b1c      	ldr	r3, [pc, #112]	; (8088c <naeusb_sam_cfg_out+0x98>)
   8081c:	4798      	blx	r3
				BOARD_OSC_STARTUP_US, OSC_SLCK_32K_RC_HZ));
		break;
   8081e:	4c1c      	ldr	r4, [pc, #112]	; (80890 <naeusb_sam_cfg_out+0x9c>)
	case OSC_MAINCK_12M_RC:
		return pmc_osc_is_ready_fastrc();

	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_main_xtal();
   80820:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80822:	2800      	cmp	r0, #0
   80824:	d0fc      	beq.n	80820 <naeusb_sam_cfg_out+0x2c>
   80826:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
   8082a:	2010      	movs	r0, #16
   8082c:	4b19      	ldr	r3, [pc, #100]	; (80894 <naeusb_sam_cfg_out+0xa0>)
   8082e:	4718      	bx	r3
        pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80830:	2010      	movs	r0, #16
}
   80832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80836:	4b18      	ldr	r3, [pc, #96]	; (80898 <naeusb_sam_cfg_out+0xa4>)
   80838:	4718      	bx	r3
        board_power(0);
   8083a:	2018      	movs	r0, #24
   8083c:	4b17      	ldr	r3, [pc, #92]	; (8089c <naeusb_sam_cfg_out+0xa8>)
   8083e:	4798      	blx	r3
 *
 * The driver must remove pull-up on USB line D- or D+.
 */
static inline void udc_detach(void)
{
	udd_detach();
   80840:	4b17      	ldr	r3, [pc, #92]	; (808a0 <naeusb_sam_cfg_out+0xac>)
   80842:	4798      	blx	r3
        efc_perform_command(EFC0, EFC_FCMD_CGPB, 1);
   80844:	2201      	movs	r2, #1
   80846:	210c      	movs	r1, #12
   80848:	4816      	ldr	r0, [pc, #88]	; (808a4 <naeusb_sam_cfg_out+0xb0>)
   8084a:	4b17      	ldr	r3, [pc, #92]	; (808a8 <naeusb_sam_cfg_out+0xb4>)
   8084c:	4798      	blx	r3
        while (RSTC->RSTC_SR & RSTC_SR_SRCMP);
   8084e:	4a17      	ldr	r2, [pc, #92]	; (808ac <naeusb_sam_cfg_out+0xb8>)
   80850:	6853      	ldr	r3, [r2, #4]
   80852:	0399      	lsls	r1, r3, #14
   80854:	d4fc      	bmi.n	80850 <naeusb_sam_cfg_out+0x5c>
		RSTC->RSTC_CR |= RSTC_CR_KEY_PASSWD | RSTC_CR_PERRST | RSTC_CR_PROCRST;
   80856:	6813      	ldr	r3, [r2, #0]
   80858:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   8085c:	f043 0305 	orr.w	r3, r3, #5
   80860:	6013      	str	r3, [r2, #0]
        while(1);
   80862:	e7fe      	b.n	80862 <naeusb_sam_cfg_out+0x6e>
   80864:	4b0e      	ldr	r3, [pc, #56]	; (808a0 <naeusb_sam_cfg_out+0xac>)
   80866:	4798      	blx	r3
        while (RSTC->RSTC_SR & RSTC_SR_SRCMP);
   80868:	4a10      	ldr	r2, [pc, #64]	; (808ac <naeusb_sam_cfg_out+0xb8>)
   8086a:	6853      	ldr	r3, [r2, #4]
   8086c:	039b      	lsls	r3, r3, #14
   8086e:	d4fc      	bmi.n	8086a <naeusb_sam_cfg_out+0x76>
        RSTC->RSTC_CR |= RSTC_CR_KEY_PASSWD | RSTC_CR_PERRST | RSTC_CR_PROCRST;
   80870:	6813      	ldr	r3, [r2, #0]
   80872:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   80876:	f043 0305 	orr.w	r3, r3, #5
   8087a:	6013      	str	r3, [r2, #0]
        while(1);
   8087c:	e7fe      	b.n	8087c <naeusb_sam_cfg_out+0x88>
        FPGA_releaselock();
   8087e:	4b0c      	ldr	r3, [pc, #48]	; (808b0 <naeusb_sam_cfg_out+0xbc>)
}
   80880:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FPGA_releaselock();
   80884:	4718      	bx	r3
   80886:	bf00      	nop
   80888:	2000133c 	.word	0x2000133c
   8088c:	00082eb1 	.word	0x00082eb1
   80890:	00082ed5 	.word	0x00082ed5
   80894:	00082df9 	.word	0x00082df9
   80898:	00082e55 	.word	0x00082e55
   8089c:	00083149 	.word	0x00083149
   808a0:	00082461 	.word	0x00082461
   808a4:	400e0800 	.word	0x400e0800
   808a8:	000830b5 	.word	0x000830b5
   808ac:	400e1200 	.word	0x400e1200
   808b0:	00080475 	.word	0x00080475

000808b4 <naeusb_setup_in_received>:

bool naeusb_setup_in_received(void)
{
   808b4:	b538      	push	{r3, r4, r5, lr}
    switch (udd_g_ctrlreq.req.bRequest) {
   808b6:	4c15      	ldr	r4, [pc, #84]	; (8090c <naeusb_setup_in_received+0x58>)
   808b8:	7863      	ldrb	r3, [r4, #1]
   808ba:	2b17      	cmp	r3, #23
   808bc:	d01b      	beq.n	808f6 <naeusb_setup_in_received+0x42>
   808be:	2b40      	cmp	r3, #64	; 0x40
   808c0:	d117      	bne.n	808f2 <naeusb_setup_in_received+0x3e>
    respbuf[sizeof(BUILD_TIME) - 1] = ' ';
   808c2:	f04f 0c20 	mov.w	ip, #32
    strncpy(respbuf, BUILD_TIME, 64);
   808c6:	4d12      	ldr	r5, [pc, #72]	; (80910 <naeusb_setup_in_received+0x5c>)
   808c8:	4b12      	ldr	r3, [pc, #72]	; (80914 <naeusb_setup_in_received+0x60>)
    strncpy(respbuf + sizeof(BUILD_TIME), BUILD_DATE, 64 - sizeof(BUILD_TIME));
   808ca:	2237      	movs	r2, #55	; 0x37
    strncpy(respbuf, BUILD_TIME, 64);
   808cc:	e893 0003 	ldmia.w	r3, {r0, r1}
    respbuf[sizeof(BUILD_TIME) - 1] = ' ';
   808d0:	f885 c008 	strb.w	ip, [r5, #8]
    strncpy(respbuf, BUILD_TIME, 64);
   808d4:	e885 0003 	stmia.w	r5, {r0, r1}
    strncpy(respbuf + sizeof(BUILD_TIME), BUILD_DATE, 64 - sizeof(BUILD_TIME));
   808d8:	4b0f      	ldr	r3, [pc, #60]	; (80918 <naeusb_setup_in_received+0x64>)
   808da:	4910      	ldr	r1, [pc, #64]	; (8091c <naeusb_setup_in_received+0x68>)
   808dc:	f105 0009 	add.w	r0, r5, #9
   808e0:	4798      	blx	r3
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   808e2:	4628      	mov	r0, r5
   808e4:	4b0e      	ldr	r3, [pc, #56]	; (80920 <naeusb_setup_in_received+0x6c>)
    udd_g_ctrlreq.payload = respbuf;
   808e6:	60a5      	str	r5, [r4, #8]
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   808e8:	4798      	blx	r3
   808ea:	4603      	mov	r3, r0
        case REQ_FW_VERSION:
            return naeusb_fw_version_in();
            break;
        case REQ_BUILD_DATE:
            return naeusb_build_date_in();
   808ec:	2001      	movs	r0, #1
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   808ee:	81a3      	strh	r3, [r4, #12]
            break;
    }
    return false;
}
   808f0:	bd38      	pop	{r3, r4, r5, pc}
    switch (udd_g_ctrlreq.req.bRequest) {
   808f2:	2000      	movs	r0, #0
}
   808f4:	bd38      	pop	{r3, r4, r5, pc}
    respbuf[0] = FW_VER_MAJOR;
   808f6:	f243 2501 	movw	r5, #12801	; 0x3201
    respbuf[2] = FW_VER_DEBUG;
   808fa:	2100      	movs	r1, #0
    udd_g_ctrlreq.payload_size = 3;
   808fc:	2203      	movs	r2, #3
    respbuf[0] = FW_VER_MAJOR;
   808fe:	4b04      	ldr	r3, [pc, #16]	; (80910 <naeusb_setup_in_received+0x5c>)
    udd_g_ctrlreq.payload_size = 3;
   80900:	2001      	movs	r0, #1
    respbuf[0] = FW_VER_MAJOR;
   80902:	801d      	strh	r5, [r3, #0]
    respbuf[2] = FW_VER_DEBUG;
   80904:	7099      	strb	r1, [r3, #2]
    udd_g_ctrlreq.payload = respbuf;
   80906:	60a3      	str	r3, [r4, #8]
    udd_g_ctrlreq.payload_size = 3;
   80908:	81a2      	strh	r2, [r4, #12]
}
   8090a:	bd38      	pop	{r3, r4, r5, pc}
   8090c:	2000133c 	.word	0x2000133c
   80910:	20001234 	.word	0x20001234
   80914:	0008a5ac 	.word	0x0008a5ac
   80918:	00083add 	.word	0x00083add
   8091c:	0008a5a0 	.word	0x0008a5a0
   80920:	00083a81 	.word	0x00083a81

00080924 <naeusb_register_handlers>:

void naeusb_register_handlers(void)
{
   80924:	b510      	push	{r4, lr}
    naeusb_add_in_handler(naeusb_setup_in_received);
   80926:	4b04      	ldr	r3, [pc, #16]	; (80938 <naeusb_register_handlers+0x14>)
   80928:	4804      	ldr	r0, [pc, #16]	; (8093c <naeusb_register_handlers+0x18>)
   8092a:	4798      	blx	r3
    naeusb_add_out_handler(naeusb_setup_out_received);
   8092c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naeusb_add_out_handler(naeusb_setup_out_received);
   80930:	4803      	ldr	r0, [pc, #12]	; (80940 <naeusb_register_handlers+0x1c>)
   80932:	4b04      	ldr	r3, [pc, #16]	; (80944 <naeusb_register_handlers+0x20>)
   80934:	4718      	bx	r3
   80936:	bf00      	nop
   80938:	00080699 	.word	0x00080699
   8093c:	000808b5 	.word	0x000808b5
   80940:	000807d9 	.word	0x000807d9
   80944:	000806c1 	.word	0x000806c1

00080948 <openadc_progfpga_bulk>:
static uint8_t * ctrlmemread_buf;
static unsigned int ctrlmemread_size;

void openadc_progfpga_bulk(void){
	uint32_t prog_freq = 1E6;
    switch(udd_g_ctrlreq.req.wValue){
   80948:	4a18      	ldr	r2, [pc, #96]	; (809ac <openadc_progfpga_bulk+0x64>)
   8094a:	8853      	ldrh	r3, [r2, #2]
   8094c:	3ba0      	subs	r3, #160	; 0xa0
   8094e:	2b12      	cmp	r3, #18
   80950:	d80b      	bhi.n	8096a <openadc_progfpga_bulk+0x22>
   80952:	e8df f003 	tbb	[pc, r3]
   80956:	0f22      	.short	0x0f22
   80958:	0a0a0a0b 	.word	0x0a0a0a0b
   8095c:	0a0a0a0a 	.word	0x0a0a0a0a
   80960:	0a0a0a0a 	.word	0x0a0a0a0a
   80964:	1e160a0a 	.word	0x1e160a0a
   80968:	0b          	.byte	0x0b
   80969:	00          	.byte	0x00
   8096a:	4770      	bx	lr
        blockendpoint_usage = bep_fpgabitstream;
        break;

    case 0xA2:
        /* Done */
        blockendpoint_usage = bep_emem;
   8096c:	2200      	movs	r2, #0
   8096e:	4b10      	ldr	r3, [pc, #64]	; (809b0 <openadc_progfpga_bulk+0x68>)
   80970:	701a      	strb	r2, [r3, #0]
        break;
   80972:	4770      	bx	lr
        fpga_program_setup2();
   80974:	4b0f      	ldr	r3, [pc, #60]	; (809b4 <openadc_progfpga_bulk+0x6c>)
void openadc_progfpga_bulk(void){
   80976:	b510      	push	{r4, lr}
        fpga_program_setup2();
   80978:	4798      	blx	r3
        blockendpoint_usage = bep_fpgabitstream;
   8097a:	220a      	movs	r2, #10
   8097c:	4b0c      	ldr	r3, [pc, #48]	; (809b0 <openadc_progfpga_bulk+0x68>)
   8097e:	701a      	strb	r2, [r3, #0]
        //gpio_configure_pin(PIN_TARG_NRST_GPIO, (PIO_TYPE_PIO_INPUT | PIO_DEFAULT));
        break;
    default:
        break;
    }
}
   80980:	bd10      	pop	{r4, pc}
        if (udd_g_ctrlreq.req.wLength == 4) {
   80982:	88d3      	ldrh	r3, [r2, #6]
   80984:	2b04      	cmp	r3, #4
            prog_freq = *(CTRLBUFFER_WORDPTR);
   80986:	bf0a      	itet	eq
   80988:	4b0b      	ldreq	r3, [pc, #44]	; (809b8 <openadc_progfpga_bulk+0x70>)
	uint32_t prog_freq = 1E6;
   8098a:	480c      	ldrne	r0, [pc, #48]	; (809bc <openadc_progfpga_bulk+0x74>)
            prog_freq = *(CTRLBUFFER_WORDPTR);
   8098c:	6818      	ldreq	r0, [r3, #0]
        fpga_program_spi_setup1(prog_freq);
   8098e:	4b0c      	ldr	r3, [pc, #48]	; (809c0 <openadc_progfpga_bulk+0x78>)
   80990:	4718      	bx	r3
        blockendpoint_usage = bep_fpgabitstreamspi;
   80992:	2214      	movs	r2, #20
   80994:	4b06      	ldr	r3, [pc, #24]	; (809b0 <openadc_progfpga_bulk+0x68>)
   80996:	701a      	strb	r2, [r3, #0]
}
   80998:	4770      	bx	lr
        if (udd_g_ctrlreq.req.wLength == 4) {
   8099a:	88d3      	ldrh	r3, [r2, #6]
   8099c:	2b04      	cmp	r3, #4
            prog_freq = *(CTRLBUFFER_WORDPTR);
   8099e:	bf0a      	itet	eq
   809a0:	4b05      	ldreq	r3, [pc, #20]	; (809b8 <openadc_progfpga_bulk+0x70>)
	uint32_t prog_freq = 1E6;
   809a2:	4806      	ldrne	r0, [pc, #24]	; (809bc <openadc_progfpga_bulk+0x74>)
            prog_freq = *(CTRLBUFFER_WORDPTR);
   809a4:	6818      	ldreq	r0, [r3, #0]
        fpga_program_setup1(prog_freq);
   809a6:	4b07      	ldr	r3, [pc, #28]	; (809c4 <openadc_progfpga_bulk+0x7c>)
   809a8:	4718      	bx	r3
   809aa:	bf00      	nop
   809ac:	2000133c 	.word	0x2000133c
   809b0:	20001274 	.word	0x20001274
   809b4:	00080605 	.word	0x00080605
   809b8:	20000d70 	.word	0x20000d70
   809bc:	000f4240 	.word	0x000f4240
   809c0:	000804c9 	.word	0x000804c9
   809c4:	00080595 	.word	0x00080595

000809c8 <openadc_setup_out_received>:
    }
    return false;
}
bool openadc_setup_out_received(void)
{
    blockendpoint_usage = bep_emem;
   809c8:	2100      	movs	r1, #0
{
   809ca:	b510      	push	{r4, lr}
    switch(udd_g_ctrlreq.req.bRequest){
   809cc:	4c1b      	ldr	r4, [pc, #108]	; (80a3c <openadc_setup_out_received+0x74>)
    blockendpoint_usage = bep_emem;
   809ce:	4a1c      	ldr	r2, [pc, #112]	; (80a40 <openadc_setup_out_received+0x78>)
    switch(udd_g_ctrlreq.req.bRequest){
   809d0:	7863      	ldrb	r3, [r4, #1]
    blockendpoint_usage = bep_emem;
   809d2:	7011      	strb	r1, [r2, #0]
    switch(udd_g_ctrlreq.req.bRequest){
   809d4:	3b10      	subs	r3, #16
   809d6:	2b06      	cmp	r3, #6
   809d8:	d805      	bhi.n	809e6 <openadc_setup_out_received+0x1e>
   809da:	e8df f003 	tbb	[pc, r3]
   809de:	130a      	.short	0x130a
   809e0:	0404251c 	.word	0x0404251c
   809e4:	06          	.byte	0x06
   809e5:	00          	.byte	0x00
   809e6:	2000      	movs	r0, #0
    default:
        return false;
    }

    return false;
}
   809e8:	bd10      	pop	{r4, pc}
        udd_g_ctrlreq.callback = openadc_progfpga_bulk;
   809ea:	4b16      	ldr	r3, [pc, #88]	; (80a44 <openadc_setup_out_received+0x7c>)
        return true;
   809ec:	2001      	movs	r0, #1
        udd_g_ctrlreq.callback = openadc_progfpga_bulk;
   809ee:	6123      	str	r3, [r4, #16]
}
   809f0:	bd10      	pop	{r4, pc}
        if (FPGA_setlock(fpga_usblocked)){
   809f2:	2006      	movs	r0, #6
   809f4:	4b14      	ldr	r3, [pc, #80]	; (80a48 <openadc_setup_out_received+0x80>)
   809f6:	4798      	blx	r3
   809f8:	2800      	cmp	r0, #0
   809fa:	d0f4      	beq.n	809e6 <openadc_setup_out_received+0x1e>
            udd_g_ctrlreq.callback = openadc_readmem_bulk;
   809fc:	4b13      	ldr	r3, [pc, #76]	; (80a4c <openadc_setup_out_received+0x84>)
            return true;
   809fe:	2001      	movs	r0, #1
            udd_g_ctrlreq.callback = openadc_readmem_bulk;
   80a00:	6123      	str	r3, [r4, #16]
}
   80a02:	bd10      	pop	{r4, pc}
        if (FPGA_setlock(fpga_usblocked)){
   80a04:	2006      	movs	r0, #6
   80a06:	4b10      	ldr	r3, [pc, #64]	; (80a48 <openadc_setup_out_received+0x80>)
   80a08:	4798      	blx	r3
   80a0a:	2800      	cmp	r0, #0
   80a0c:	d0eb      	beq.n	809e6 <openadc_setup_out_received+0x1e>
            udd_g_ctrlreq.callback = openadc_writemem_bulk;
   80a0e:	4b10      	ldr	r3, [pc, #64]	; (80a50 <openadc_setup_out_received+0x88>)
            return true;
   80a10:	2001      	movs	r0, #1
            udd_g_ctrlreq.callback = openadc_writemem_bulk;
   80a12:	6123      	str	r3, [r4, #16]
}
   80a14:	bd10      	pop	{r4, pc}
        if (FPGA_setlock(fpga_usblocked)){
   80a16:	2006      	movs	r0, #6
   80a18:	4b0b      	ldr	r3, [pc, #44]	; (80a48 <openadc_setup_out_received+0x80>)
   80a1a:	4798      	blx	r3
   80a1c:	2800      	cmp	r0, #0
   80a1e:	d0e2      	beq.n	809e6 <openadc_setup_out_received+0x1e>
            udd_g_ctrlreq.callback = openadc_readmem_ctrl;
   80a20:	4b0c      	ldr	r3, [pc, #48]	; (80a54 <openadc_setup_out_received+0x8c>)
            return true;
   80a22:	2001      	movs	r0, #1
            udd_g_ctrlreq.callback = openadc_readmem_ctrl;
   80a24:	6123      	str	r3, [r4, #16]
}
   80a26:	bd10      	pop	{r4, pc}
        if (FPGA_setlock(fpga_usblocked)){
   80a28:	2006      	movs	r0, #6
   80a2a:	4b07      	ldr	r3, [pc, #28]	; (80a48 <openadc_setup_out_received+0x80>)
   80a2c:	4798      	blx	r3
   80a2e:	2800      	cmp	r0, #0
   80a30:	d0d9      	beq.n	809e6 <openadc_setup_out_received+0x1e>
            udd_g_ctrlreq.callback = openadc_writemem_ctrl;
   80a32:	4b09      	ldr	r3, [pc, #36]	; (80a58 <openadc_setup_out_received+0x90>)
            return true;
   80a34:	2001      	movs	r0, #1
            udd_g_ctrlreq.callback = openadc_writemem_ctrl;
   80a36:	6123      	str	r3, [r4, #16]
}
   80a38:	bd10      	pop	{r4, pc}
   80a3a:	bf00      	nop
   80a3c:	2000133c 	.word	0x2000133c
   80a40:	20001274 	.word	0x20001274
   80a44:	00080949 	.word	0x00080949
   80a48:	00080445 	.word	0x00080445
   80a4c:	00080b25 	.word	0x00080b25
   80a50:	00080a5d 	.word	0x00080a5d
   80a54:	00080a8d 	.word	0x00080a8d
   80a58:	00080ad1 	.word	0x00080ad1

00080a5c <openadc_writemem_bulk>:
{
   80a5c:	b570      	push	{r4, r5, r6, lr}
    uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80a5e:	4a07      	ldr	r2, [pc, #28]	; (80a7c <openadc_writemem_bulk+0x20>)
    FPGA_releaselock();
   80a60:	4b07      	ldr	r3, [pc, #28]	; (80a80 <openadc_writemem_bulk+0x24>)
    uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80a62:	6855      	ldr	r5, [r2, #4]
    FPGA_releaselock();
   80a64:	4798      	blx	r3
    while(!FPGA_setlock(fpga_blockout));
   80a66:	4c07      	ldr	r4, [pc, #28]	; (80a84 <openadc_writemem_bulk+0x28>)
   80a68:	2004      	movs	r0, #4
   80a6a:	47a0      	blx	r4
   80a6c:	2800      	cmp	r0, #0
   80a6e:	d0fb      	beq.n	80a68 <openadc_writemem_bulk+0xc>
    FPGA_setaddr(address);
   80a70:	4628      	mov	r0, r5
}
   80a72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    FPGA_setaddr(address);
   80a76:	4b04      	ldr	r3, [pc, #16]	; (80a88 <openadc_writemem_bulk+0x2c>)
   80a78:	4718      	bx	r3
   80a7a:	bf00      	nop
   80a7c:	20000d70 	.word	0x20000d70
   80a80:	00080475 	.word	0x00080475
   80a84:	00080445 	.word	0x00080445
   80a88:	0008048d 	.word	0x0008048d

00080a8c <openadc_readmem_ctrl>:
{
   80a8c:	b570      	push	{r4, r5, r6, lr}
    uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80a8e:	4b0a      	ldr	r3, [pc, #40]	; (80ab8 <openadc_readmem_ctrl+0x2c>)
    FPGA_releaselock();
   80a90:	4a0a      	ldr	r2, [pc, #40]	; (80abc <openadc_readmem_ctrl+0x30>)
    uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80a92:	e9d3 5600 	ldrd	r5, r6, [r3]
    FPGA_releaselock();
   80a96:	4790      	blx	r2
    while(!FPGA_setlock(fpga_ctrlmem));
   80a98:	4c09      	ldr	r4, [pc, #36]	; (80ac0 <openadc_readmem_ctrl+0x34>)
   80a9a:	2005      	movs	r0, #5
   80a9c:	47a0      	blx	r4
   80a9e:	2800      	cmp	r0, #0
   80aa0:	d0fb      	beq.n	80a9a <openadc_readmem_ctrl+0xe>
    FPGA_setaddr(address);
   80aa2:	4b08      	ldr	r3, [pc, #32]	; (80ac4 <openadc_readmem_ctrl+0x38>)
   80aa4:	4630      	mov	r0, r6
   80aa6:	4798      	blx	r3
    ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS;
   80aa8:	f04f 42c0 	mov.w	r2, #1610612736	; 0x60000000
   80aac:	4b06      	ldr	r3, [pc, #24]	; (80ac8 <openadc_readmem_ctrl+0x3c>)
    ctrlmemread_size = buflen;
   80aae:	4907      	ldr	r1, [pc, #28]	; (80acc <openadc_readmem_ctrl+0x40>)
    ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS;
   80ab0:	601a      	str	r2, [r3, #0]
    ctrlmemread_size = buflen;
   80ab2:	600d      	str	r5, [r1, #0]
}
   80ab4:	bd70      	pop	{r4, r5, r6, pc}
   80ab6:	bf00      	nop
   80ab8:	20000d70 	.word	0x20000d70
   80abc:	00080475 	.word	0x00080475
   80ac0:	00080445 	.word	0x00080445
   80ac4:	0008048d 	.word	0x0008048d
   80ac8:	20001278 	.word	0x20001278
   80acc:	2000127c 	.word	0x2000127c

00080ad0 <openadc_writemem_ctrl>:
{
   80ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80ad4:	4b0d      	ldr	r3, [pc, #52]	; (80b0c <openadc_writemem_ctrl+0x3c>)
    FPGA_releaselock();
   80ad6:	4e0e      	ldr	r6, [pc, #56]	; (80b10 <openadc_writemem_ctrl+0x40>)
    uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80ad8:	e9d3 4700 	ldrd	r4, r7, [r3]
    FPGA_releaselock();
   80adc:	47b0      	blx	r6
    while(!FPGA_setlock(fpga_generic));
   80ade:	4d0d      	ldr	r5, [pc, #52]	; (80b14 <openadc_writemem_ctrl+0x44>)
   80ae0:	2001      	movs	r0, #1
   80ae2:	47a8      	blx	r5
   80ae4:	2800      	cmp	r0, #0
   80ae6:	d0fb      	beq.n	80ae0 <openadc_writemem_ctrl+0x10>
    FPGA_setaddr(address);
   80ae8:	4638      	mov	r0, r7
   80aea:	4b0b      	ldr	r3, [pc, #44]	; (80b18 <openadc_writemem_ctrl+0x48>)
   80aec:	4798      	blx	r3
    for(unsigned int i = 0; i < buflen; i++){
   80aee:	b14c      	cbz	r4, 80b04 <openadc_writemem_ctrl+0x34>
   80af0:	2300      	movs	r3, #0
   80af2:	4a0a      	ldr	r2, [pc, #40]	; (80b1c <openadc_writemem_ctrl+0x4c>)
   80af4:	4d0a      	ldr	r5, [pc, #40]	; (80b20 <openadc_writemem_ctrl+0x50>)
        xram[i] = ctrlbuf_payload[i];
   80af6:	6829      	ldr	r1, [r5, #0]
   80af8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
   80afc:	54c8      	strb	r0, [r1, r3]
    for(unsigned int i = 0; i < buflen; i++){
   80afe:	3301      	adds	r3, #1
   80b00:	429c      	cmp	r4, r3
   80b02:	d1f8      	bne.n	80af6 <openadc_writemem_ctrl+0x26>
    FPGA_releaselock();
   80b04:	4633      	mov	r3, r6
}
   80b06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    FPGA_releaselock();
   80b0a:	4718      	bx	r3
   80b0c:	20000d70 	.word	0x20000d70
   80b10:	00080475 	.word	0x00080475
   80b14:	00080445 	.word	0x00080445
   80b18:	0008048d 	.word	0x0008048d
   80b1c:	20000d77 	.word	0x20000d77
   80b20:	200001b8 	.word	0x200001b8

00080b24 <openadc_readmem_bulk>:
{
   80b24:	b570      	push	{r4, r5, r6, lr}
    uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80b26:	4b0a      	ldr	r3, [pc, #40]	; (80b50 <openadc_readmem_bulk+0x2c>)
    FPGA_releaselock();
   80b28:	4a0a      	ldr	r2, [pc, #40]	; (80b54 <openadc_readmem_bulk+0x30>)
    uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80b2a:	e9d3 5600 	ldrd	r5, r6, [r3]
    FPGA_releaselock();
   80b2e:	4790      	blx	r2
    while(!FPGA_setlock(fpga_blockin));
   80b30:	4c09      	ldr	r4, [pc, #36]	; (80b58 <openadc_readmem_bulk+0x34>)
   80b32:	2002      	movs	r0, #2
   80b34:	47a0      	blx	r4
   80b36:	2800      	cmp	r0, #0
   80b38:	d0fb      	beq.n	80b32 <openadc_readmem_bulk+0xe>
    FPGA_setaddr(address);
   80b3a:	4630      	mov	r0, r6
   80b3c:	4b07      	ldr	r3, [pc, #28]	; (80b5c <openadc_readmem_bulk+0x38>)
   80b3e:	4798      	blx	r3
    if  (!udi_vendor_bulk_in_run(
   80b40:	4629      	mov	r1, r5
}
   80b42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    if  (!udi_vendor_bulk_in_run(
   80b46:	f04f 40c0 	mov.w	r0, #1610612736	; 0x60000000
   80b4a:	4a05      	ldr	r2, [pc, #20]	; (80b60 <openadc_readmem_bulk+0x3c>)
   80b4c:	4b05      	ldr	r3, [pc, #20]	; (80b64 <openadc_readmem_bulk+0x40>)
   80b4e:	4718      	bx	r3
   80b50:	20000d70 	.word	0x20000d70
   80b54:	00080475 	.word	0x00080475
   80b58:	00080445 	.word	0x00080445
   80b5c:	0008048d 	.word	0x0008048d
   80b60:	00080c05 	.word	0x00080c05
   80b64:	00083075 	.word	0x00083075

00080b68 <main_vendor_bulk_out_received>:
{
   80b68:	b570      	push	{r4, r5, r6, lr}
   80b6a:	4605      	mov	r5, r0
    FPGA_releaselock();
   80b6c:	4e1c      	ldr	r6, [pc, #112]	; (80be0 <main_vendor_bulk_out_received+0x78>)
{
   80b6e:	460c      	mov	r4, r1
    FPGA_releaselock();
   80b70:	47b0      	blx	r6
    if (UDD_EP_TRANSFER_OK != status) {
   80b72:	b985      	cbnz	r5, 80b96 <main_vendor_bulk_out_received+0x2e>
    if (blockendpoint_usage == bep_emem){
   80b74:	4b1b      	ldr	r3, [pc, #108]	; (80be4 <main_vendor_bulk_out_received+0x7c>)
   80b76:	781b      	ldrb	r3, [r3, #0]
   80b78:	b9ab      	cbnz	r3, 80ba6 <main_vendor_bulk_out_received+0x3e>
        for(unsigned int i = 0; i < nb_transfered; i++){
   80b7a:	b144      	cbz	r4, 80b8e <main_vendor_bulk_out_received+0x26>
   80b7c:	4a1a      	ldr	r2, [pc, #104]	; (80be8 <main_vendor_bulk_out_received+0x80>)
   80b7e:	4d1b      	ldr	r5, [pc, #108]	; (80bec <main_vendor_bulk_out_received+0x84>)
            xram[i] = main_buf_loopback[i];
   80b80:	6829      	ldr	r1, [r5, #0]
   80b82:	f812 0b01 	ldrb.w	r0, [r2], #1
   80b86:	54c8      	strb	r0, [r1, r3]
        for(unsigned int i = 0; i < nb_transfered; i++){
   80b88:	3301      	adds	r3, #1
   80b8a:	429c      	cmp	r4, r3
   80b8c:	d1f8      	bne.n	80b80 <main_vendor_bulk_out_received+0x18>
        if (FPGA_lockstatus() == fpga_blockout){
   80b8e:	4b18      	ldr	r3, [pc, #96]	; (80bf0 <main_vendor_bulk_out_received+0x88>)
   80b90:	4798      	blx	r3
   80b92:	2804      	cmp	r0, #4
   80b94:	d016      	beq.n	80bc4 <main_vendor_bulk_out_received+0x5c>
}
   80b96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        udi_vendor_bulk_out_run(
   80b9a:	f44f 6180 	mov.w	r1, #1024	; 0x400
   80b9e:	4a15      	ldr	r2, [pc, #84]	; (80bf4 <main_vendor_bulk_out_received+0x8c>)
   80ba0:	4811      	ldr	r0, [pc, #68]	; (80be8 <main_vendor_bulk_out_received+0x80>)
   80ba2:	4b15      	ldr	r3, [pc, #84]	; (80bf8 <main_vendor_bulk_out_received+0x90>)
   80ba4:	4718      	bx	r3
    } else if (blockendpoint_usage == bep_fpgabitstream){
   80ba6:	2b0a      	cmp	r3, #10
   80ba8:	d00e      	beq.n	80bc8 <main_vendor_bulk_out_received+0x60>
    } else if (blockendpoint_usage == bep_fpgabitstreamspi) {
   80baa:	2b14      	cmp	r3, #20
   80bac:	d1f3      	bne.n	80b96 <main_vendor_bulk_out_received+0x2e>
        for(unsigned int i = 0; i < nb_transfered; i++){
   80bae:	2c00      	cmp	r4, #0
   80bb0:	d0f1      	beq.n	80b96 <main_vendor_bulk_out_received+0x2e>
   80bb2:	4d0d      	ldr	r5, [pc, #52]	; (80be8 <main_vendor_bulk_out_received+0x80>)
   80bb4:	4e11      	ldr	r6, [pc, #68]	; (80bfc <main_vendor_bulk_out_received+0x94>)
   80bb6:	442c      	add	r4, r5
            fpga_program_spi_sendbyte(main_buf_loopback[i]);
   80bb8:	f815 0b01 	ldrb.w	r0, [r5], #1
   80bbc:	47b0      	blx	r6
        for(unsigned int i = 0; i < nb_transfered; i++){
   80bbe:	42a5      	cmp	r5, r4
   80bc0:	d1fa      	bne.n	80bb8 <main_vendor_bulk_out_received+0x50>
   80bc2:	e7e8      	b.n	80b96 <main_vendor_bulk_out_received+0x2e>
            FPGA_releaselock();
   80bc4:	47b0      	blx	r6
   80bc6:	e7e6      	b.n	80b96 <main_vendor_bulk_out_received+0x2e>
        for(unsigned int i = 0; i < nb_transfered; i++){
   80bc8:	2c00      	cmp	r4, #0
   80bca:	d0e4      	beq.n	80b96 <main_vendor_bulk_out_received+0x2e>
   80bcc:	4d06      	ldr	r5, [pc, #24]	; (80be8 <main_vendor_bulk_out_received+0x80>)
   80bce:	4e0c      	ldr	r6, [pc, #48]	; (80c00 <main_vendor_bulk_out_received+0x98>)
   80bd0:	442c      	add	r4, r5
            fpga_program_sendbyte(main_buf_loopback[i]);
   80bd2:	f815 0b01 	ldrb.w	r0, [r5], #1
   80bd6:	47b0      	blx	r6
        for(unsigned int i = 0; i < nb_transfered; i++){
   80bd8:	42ac      	cmp	r4, r5
   80bda:	d1fa      	bne.n	80bd2 <main_vendor_bulk_out_received+0x6a>
   80bdc:	e7db      	b.n	80b96 <main_vendor_bulk_out_received+0x2e>
   80bde:	bf00      	nop
   80be0:	00080475 	.word	0x00080475
   80be4:	20001274 	.word	0x20001274
   80be8:	20000db0 	.word	0x20000db0
   80bec:	200001b8 	.word	0x200001b8
   80bf0:	00080481 	.word	0x00080481
   80bf4:	00080b69 	.word	0x00080b69
   80bf8:	00083095 	.word	0x00083095
   80bfc:	00080559 	.word	0x00080559
   80c00:	00080611 	.word	0x00080611

00080c04 <main_vendor_bulk_in_received>:
{
   80c04:	b510      	push	{r4, lr}
   80c06:	4604      	mov	r4, r0
    FPGA_releaselock();
   80c08:	4b06      	ldr	r3, [pc, #24]	; (80c24 <main_vendor_bulk_in_received+0x20>)
   80c0a:	4798      	blx	r3
    if (UDD_EP_TRANSFER_OK != status) {
   80c0c:	b104      	cbz	r4, 80c10 <main_vendor_bulk_in_received+0xc>
}
   80c0e:	bd10      	pop	{r4, pc}
    if (FPGA_lockstatus() == fpga_blockin){
   80c10:	4b05      	ldr	r3, [pc, #20]	; (80c28 <main_vendor_bulk_in_received+0x24>)
   80c12:	4798      	blx	r3
   80c14:	2802      	cmp	r0, #2
   80c16:	d1fa      	bne.n	80c0e <main_vendor_bulk_in_received+0xa>
        FPGA_setlock(fpga_unlocked);
   80c18:	4620      	mov	r0, r4
}
   80c1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FPGA_setlock(fpga_unlocked);
   80c1e:	4b03      	ldr	r3, [pc, #12]	; (80c2c <main_vendor_bulk_in_received+0x28>)
   80c20:	4718      	bx	r3
   80c22:	bf00      	nop
   80c24:	00080475 	.word	0x00080475
   80c28:	00080481 	.word	0x00080481
   80c2c:	00080445 	.word	0x00080445

00080c30 <openadc_setup_in_received>:
{
   80c30:	b510      	push	{r4, lr}
    switch(udd_g_ctrlreq.req.bRequest){
   80c32:	4c13      	ldr	r4, [pc, #76]	; (80c80 <openadc_setup_in_received+0x50>)
   80c34:	7863      	ldrb	r3, [r4, #1]
   80c36:	2b12      	cmp	r3, #18
   80c38:	d016      	beq.n	80c68 <openadc_setup_in_received+0x38>
   80c3a:	2b15      	cmp	r3, #21
   80c3c:	d112      	bne.n	80c64 <openadc_setup_in_received+0x34>
        respbuf[0] = FPGA_ISDONE();
   80c3e:	4b11      	ldr	r3, [pc, #68]	; (80c84 <openadc_setup_in_received+0x54>)
   80c40:	2013      	movs	r0, #19
   80c42:	4798      	blx	r3
        respbuf[1] = 0;
   80c44:	2100      	movs	r1, #0
        respbuf[0] = FPGA_ISDONE();
   80c46:	4602      	mov	r2, r0
   80c48:	1a52      	subs	r2, r2, r1
   80c4a:	bf18      	it	ne
   80c4c:	2201      	movne	r2, #1
        udd_g_ctrlreq.payload_size = 4;
   80c4e:	f04f 0c04 	mov.w	ip, #4
        respbuf[0] = FPGA_ISDONE();
   80c52:	4b0d      	ldr	r3, [pc, #52]	; (80c88 <openadc_setup_in_received+0x58>)
        udd_g_ctrlreq.payload_size = 4;
   80c54:	2001      	movs	r0, #1
        respbuf[1] = 0;
   80c56:	7059      	strb	r1, [r3, #1]
        respbuf[2] = 0;
   80c58:	8059      	strh	r1, [r3, #2]
        respbuf[0] = FPGA_ISDONE();
   80c5a:	701a      	strb	r2, [r3, #0]
        udd_g_ctrlreq.payload = respbuf;
   80c5c:	60a3      	str	r3, [r4, #8]
        udd_g_ctrlreq.payload_size = 4;
   80c5e:	f8a4 c00c 	strh.w	ip, [r4, #12]
}
   80c62:	bd10      	pop	{r4, pc}
    switch(udd_g_ctrlreq.req.bRequest){
   80c64:	2000      	movs	r0, #0
}
   80c66:	bd10      	pop	{r4, pc}
        ctrlmemread_size = 0;
   80c68:	2100      	movs	r1, #0
        udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80c6a:	4b08      	ldr	r3, [pc, #32]	; (80c8c <openadc_setup_in_received+0x5c>)
        udd_g_ctrlreq.payload = ctrlmemread_buf;
   80c6c:	4808      	ldr	r0, [pc, #32]	; (80c90 <openadc_setup_in_received+0x60>)
        udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80c6e:	681a      	ldr	r2, [r3, #0]
        udd_g_ctrlreq.payload = ctrlmemread_buf;
   80c70:	6800      	ldr	r0, [r0, #0]
        udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80c72:	81a2      	strh	r2, [r4, #12]
        FPGA_releaselock();
   80c74:	4a07      	ldr	r2, [pc, #28]	; (80c94 <openadc_setup_in_received+0x64>)
        udd_g_ctrlreq.payload = ctrlmemread_buf;
   80c76:	60a0      	str	r0, [r4, #8]
        ctrlmemread_size = 0;
   80c78:	6019      	str	r1, [r3, #0]
        FPGA_releaselock();
   80c7a:	4790      	blx	r2
        return true;
   80c7c:	2001      	movs	r0, #1
}
   80c7e:	bd10      	pop	{r4, pc}
   80c80:	2000133c 	.word	0x2000133c
   80c84:	00083111 	.word	0x00083111
   80c88:	20001234 	.word	0x20001234
   80c8c:	2000127c 	.word	0x2000127c
   80c90:	20001278 	.word	0x20001278
   80c94:	00080475 	.word	0x00080475

00080c98 <openadc_register_handlers>:

void openadc_register_handlers(void)
{
   80c98:	b510      	push	{r4, lr}
    FPGA_releaselock();
   80c9a:	4b05      	ldr	r3, [pc, #20]	; (80cb0 <openadc_register_handlers+0x18>)
   80c9c:	4798      	blx	r3
    naeusb_add_in_handler(openadc_setup_in_received);
   80c9e:	4b05      	ldr	r3, [pc, #20]	; (80cb4 <openadc_register_handlers+0x1c>)
   80ca0:	4805      	ldr	r0, [pc, #20]	; (80cb8 <openadc_register_handlers+0x20>)
   80ca2:	4798      	blx	r3
    naeusb_add_out_handler(openadc_setup_out_received);
}
   80ca4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naeusb_add_out_handler(openadc_setup_out_received);
   80ca8:	4804      	ldr	r0, [pc, #16]	; (80cbc <openadc_register_handlers+0x24>)
   80caa:	4b05      	ldr	r3, [pc, #20]	; (80cc0 <openadc_register_handlers+0x28>)
   80cac:	4718      	bx	r3
   80cae:	bf00      	nop
   80cb0:	00080475 	.word	0x00080475
   80cb4:	00080699 	.word	0x00080699
   80cb8:	00080c31 	.word	0x00080c31
   80cbc:	000809c9 	.word	0x000809c9
   80cc0:	000806c1 	.word	0x000806c1

00080cc4 <phywhisperer_setup_out_received>:
    gpio_set_pin_high(PIN_EBI_USB_SPARE0);
    gpio_set_pin_low(PIN_EBI_USB_SPARE0);
}

bool phywhisperer_setup_out_received(void) {
    switch (udd_g_ctrlreq.req.bRequest) {
   80cc4:	4a07      	ldr	r2, [pc, #28]	; (80ce4 <phywhisperer_setup_out_received+0x20>)
   80cc6:	7853      	ldrb	r3, [r2, #1]
   80cc8:	2b24      	cmp	r3, #36	; 0x24
   80cca:	d007      	beq.n	80cdc <phywhisperer_setup_out_received+0x18>
   80ccc:	2b25      	cmp	r3, #37	; 0x25
   80cce:	d103      	bne.n	80cd8 <phywhisperer_setup_out_received+0x14>
        //TODO
        udd_g_ctrlreq.callback = ctrl_change_pwr;
        return true;

    case REQ_FPGA_RESET:
        udd_g_ctrlreq.callback = ctrl_fpga_reset;
   80cd0:	4b05      	ldr	r3, [pc, #20]	; (80ce8 <phywhisperer_setup_out_received+0x24>)
        return true;
   80cd2:	2001      	movs	r0, #1
        udd_g_ctrlreq.callback = ctrl_fpga_reset;
   80cd4:	6113      	str	r3, [r2, #16]

    default:
        return false;
    }
    return false;
}
   80cd6:	4770      	bx	lr
    switch (udd_g_ctrlreq.req.bRequest) {
   80cd8:	2000      	movs	r0, #0
   80cda:	4770      	bx	lr
        udd_g_ctrlreq.callback = ctrl_change_pwr;
   80cdc:	4b03      	ldr	r3, [pc, #12]	; (80cec <phywhisperer_setup_out_received+0x28>)
        return true;
   80cde:	2001      	movs	r0, #1
        udd_g_ctrlreq.callback = ctrl_change_pwr;
   80ce0:	6113      	str	r3, [r2, #16]
        return true;
   80ce2:	4770      	bx	lr
   80ce4:	2000133c 	.word	0x2000133c
   80ce8:	00080cf5 	.word	0x00080cf5
   80cec:	00080d11 	.word	0x00080d11

00080cf0 <phywhisperer_setup_in_received>:

    default:
        return false;
    }
    return false;
}
   80cf0:	2000      	movs	r0, #0
   80cf2:	4770      	bx	lr

00080cf4 <ctrl_fpga_reset>:
void ctrl_fpga_reset (void) {
   80cf4:	b510      	push	{r4, lr}
    gpio_set_pin_high(PIN_EBI_USB_SPARE0);
   80cf6:	2026      	movs	r0, #38	; 0x26
   80cf8:	4b03      	ldr	r3, [pc, #12]	; (80d08 <ctrl_fpga_reset+0x14>)
   80cfa:	4798      	blx	r3
}
   80cfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    gpio_set_pin_low(PIN_EBI_USB_SPARE0);
   80d00:	2026      	movs	r0, #38	; 0x26
   80d02:	4b02      	ldr	r3, [pc, #8]	; (80d0c <ctrl_fpga_reset+0x18>)
   80d04:	4718      	bx	r3
   80d06:	bf00      	nop
   80d08:	0008312d 	.word	0x0008312d
   80d0c:	00083149 	.word	0x00083149

00080d10 <ctrl_change_pwr>:
void ctrl_change_pwr(void) {
   80d10:	b410      	push	{r4}
    switch (udd_g_ctrlreq.req.wValue) {
   80d12:	4b12      	ldr	r3, [pc, #72]	; (80d5c <ctrl_change_pwr+0x4c>)
   80d14:	885b      	ldrh	r3, [r3, #2]
   80d16:	2b01      	cmp	r3, #1
   80d18:	d004      	beq.n	80d24 <ctrl_change_pwr+0x14>
   80d1a:	2b02      	cmp	r3, #2
   80d1c:	d018      	beq.n	80d50 <ctrl_change_pwr+0x40>
   80d1e:	b163      	cbz	r3, 80d3a <ctrl_change_pwr+0x2a>
}
   80d20:	bc10      	pop	{r4}
   80d22:	4770      	bx	lr
        PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80d24:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
        PIOA->PIO_SODR = (1 << F_VB5V); //enable host power
   80d28:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
        PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80d2c:	4a0c      	ldr	r2, [pc, #48]	; (80d60 <ctrl_change_pwr+0x50>)
        USB_PWR_STATE = 2;
   80d2e:	490d      	ldr	r1, [pc, #52]	; (80d64 <ctrl_change_pwr+0x54>)
        PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80d30:	6354      	str	r4, [r2, #52]	; 0x34
        PIOA->PIO_SODR = (1 << F_VBHOST); //enable sniff power
   80d32:	6310      	str	r0, [r2, #48]	; 0x30
        USB_PWR_STATE = 2;
   80d34:	700b      	strb	r3, [r1, #0]
}
   80d36:	bc10      	pop	{r4}
   80d38:	4770      	bx	lr
        PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80d3a:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
        PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80d3e:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
        PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80d42:	4a07      	ldr	r2, [pc, #28]	; (80d60 <ctrl_change_pwr+0x50>)
        USB_PWR_STATE = 0;
   80d44:	4907      	ldr	r1, [pc, #28]	; (80d64 <ctrl_change_pwr+0x54>)
        PIOA->PIO_CODR = (1 << F_VBHOST); //disable sniff power
   80d46:	6354      	str	r4, [r2, #52]	; 0x34
        PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80d48:	6350      	str	r0, [r2, #52]	; 0x34
        USB_PWR_STATE = 0;
   80d4a:	700b      	strb	r3, [r1, #0]
}
   80d4c:	bc10      	pop	{r4}
   80d4e:	4770      	bx	lr
        PIOA->PIO_CODR = (1 << F_VB5V); //disable host power
   80d50:	f04f 6480 	mov.w	r4, #67108864	; 0x4000000
        PIOA->PIO_SODR = (1 << F_VBHOST); //enable sniff power
   80d54:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
   80d58:	e7e8      	b.n	80d2c <ctrl_change_pwr+0x1c>
   80d5a:	bf00      	nop
   80d5c:	2000133c 	.word	0x2000133c
   80d60:	400e0c00 	.word	0x400e0c00
   80d64:	20000d6c 	.word	0x20000d6c

00080d68 <phywhisperer_register_handlers>:

void phywhisperer_register_handlers(void)
{
   80d68:	b510      	push	{r4, lr}
    naeusb_add_in_handler(phywhisperer_setup_in_received);
   80d6a:	4b04      	ldr	r3, [pc, #16]	; (80d7c <phywhisperer_register_handlers+0x14>)
   80d6c:	4804      	ldr	r0, [pc, #16]	; (80d80 <phywhisperer_register_handlers+0x18>)
   80d6e:	4798      	blx	r3
    naeusb_add_out_handler(phywhisperer_setup_out_received);
   80d70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naeusb_add_out_handler(phywhisperer_setup_out_received);
   80d74:	4803      	ldr	r0, [pc, #12]	; (80d84 <phywhisperer_register_handlers+0x1c>)
   80d76:	4b04      	ldr	r3, [pc, #16]	; (80d88 <phywhisperer_register_handlers+0x20>)
   80d78:	4718      	bx	r3
   80d7a:	bf00      	nop
   80d7c:	00080699 	.word	0x00080699
   80d80:	00080cf1 	.word	0x00080cf1
   80d84:	00080cc5 	.word	0x00080cc5
   80d88:	000806c1 	.word	0x000806c1

00080d8c <udc_valid_address>:
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
   80d8c:	4a02      	ldr	r2, [pc, #8]	; (80d98 <udc_valid_address+0xc>)
   80d8e:	4b03      	ldr	r3, [pc, #12]	; (80d9c <udc_valid_address+0x10>)
   80d90:	8850      	ldrh	r0, [r2, #2]
   80d92:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   80d96:	4718      	bx	r3
   80d98:	2000133c 	.word	0x2000133c
   80d9c:	000824e5 	.word	0x000824e5

00080da0 <udc_update_iface_desc.part.0>:
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80da0:	4b15      	ldr	r3, [pc, #84]	; (80df8 <udc_update_iface_desc.part.0+0x58>)
   80da2:	681b      	ldr	r3, [r3, #0]
   80da4:	681b      	ldr	r3, [r3, #0]
   80da6:	791a      	ldrb	r2, [r3, #4]
   80da8:	4282      	cmp	r2, r0
   80daa:	d922      	bls.n	80df2 <udc_update_iface_desc.part.0+0x52>
static bool udc_update_iface_desc(uint8_t iface_num, uint8_t setting_num)
   80dac:	b430      	push	{r4, r5}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80dae:	4c13      	ldr	r4, [pc, #76]	; (80dfc <udc_update_iface_desc.part.0+0x5c>)
   80db0:	6023      	str	r3, [r4, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80db2:	f8b3 c002 	ldrh.w	ip, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80db6:	449c      	add	ip, r3
	while (ptr_end_desc >
   80db8:	4563      	cmp	r3, ip
   80dba:	d217      	bcs.n	80dec <udc_update_iface_desc.part.0+0x4c>
   80dbc:	2500      	movs	r5, #0
   80dbe:	e004      	b.n	80dca <udc_update_iface_desc.part.0+0x2a>
				udc_ptr_iface->bLength);
   80dc0:	781a      	ldrb	r2, [r3, #0]
   80dc2:	2501      	movs	r5, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   80dc4:	4413      	add	r3, r2
	while (ptr_end_desc >
   80dc6:	459c      	cmp	ip, r3
   80dc8:	d90c      	bls.n	80de4 <udc_update_iface_desc.part.0+0x44>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   80dca:	785a      	ldrb	r2, [r3, #1]
   80dcc:	2a04      	cmp	r2, #4
   80dce:	d1f7      	bne.n	80dc0 <udc_update_iface_desc.part.0+0x20>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80dd0:	789a      	ldrb	r2, [r3, #2]
   80dd2:	4282      	cmp	r2, r0
   80dd4:	d1f4      	bne.n	80dc0 <udc_update_iface_desc.part.0+0x20>
   80dd6:	78da      	ldrb	r2, [r3, #3]
   80dd8:	428a      	cmp	r2, r1
   80dda:	d1f1      	bne.n	80dc0 <udc_update_iface_desc.part.0+0x20>
   80ddc:	b105      	cbz	r5, 80de0 <udc_update_iface_desc.part.0+0x40>
   80dde:	6023      	str	r3, [r4, #0]
				return true; // Interface found
   80de0:	2001      	movs	r0, #1
   80de2:	e001      	b.n	80de8 <udc_update_iface_desc.part.0+0x48>
	return false; // Interface not found
   80de4:	2000      	movs	r0, #0
   80de6:	6023      	str	r3, [r4, #0]
}
   80de8:	bc30      	pop	{r4, r5}
   80dea:	4770      	bx	lr
		return false;
   80dec:	2000      	movs	r0, #0
}
   80dee:	bc30      	pop	{r4, r5}
   80df0:	4770      	bx	lr
		return false;
   80df2:	2000      	movs	r0, #0
}
   80df4:	4770      	bx	lr
   80df6:	bf00      	nop
   80df8:	20001288 	.word	0x20001288
   80dfc:	2000128c 	.word	0x2000128c

00080e00 <udc_iface_disable>:
{
   80e00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if (0 == udc_num_configuration) {
   80e04:	4c1c      	ldr	r4, [pc, #112]	; (80e78 <udc_iface_disable+0x78>)
   80e06:	7823      	ldrb	r3, [r4, #0]
   80e08:	b37b      	cbz	r3, 80e6a <udc_iface_disable+0x6a>
   80e0a:	2100      	movs	r1, #0
   80e0c:	4e1b      	ldr	r6, [pc, #108]	; (80e7c <udc_iface_disable+0x7c>)
   80e0e:	4605      	mov	r5, r0
   80e10:	47b0      	blx	r6
	if (!udc_update_iface_desc(iface_num, 0)) {
   80e12:	b350      	cbz	r0, 80e6a <udc_iface_disable+0x6a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80e14:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80e80 <udc_iface_disable+0x80>
   80e18:	f8d8 3000 	ldr.w	r3, [r8]
   80e1c:	685b      	ldr	r3, [r3, #4]
   80e1e:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80e22:	68fb      	ldr	r3, [r7, #12]
   80e24:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   80e26:	7823      	ldrb	r3, [r4, #0]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80e28:	4601      	mov	r1, r0
	if (0 == udc_num_configuration) {
   80e2a:	b1f3      	cbz	r3, 80e6a <udc_iface_disable+0x6a>
   80e2c:	4628      	mov	r0, r5
   80e2e:	47b0      	blx	r6
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80e30:	4605      	mov	r5, r0
   80e32:	b1d0      	cbz	r0, 80e6a <udc_iface_disable+0x6a>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80e34:	4b13      	ldr	r3, [pc, #76]	; (80e84 <udc_iface_disable+0x84>)
			udd_ep_free(ep_desc->bEndpointAddress);
   80e36:	4e14      	ldr	r6, [pc, #80]	; (80e88 <udc_iface_disable+0x88>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80e38:	681c      	ldr	r4, [r3, #0]
			udc_ptr_conf->desc +
   80e3a:	f8d8 2000 	ldr.w	r2, [r8]
			desc->bLength);
   80e3e:	7823      	ldrb	r3, [r4, #0]
			udc_ptr_conf->desc +
   80e40:	6812      	ldr	r2, [r2, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80e42:	441c      	add	r4, r3
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80e44:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80e46:	441a      	add	r2, r3
	while (ptr_eof_desc > desc) {
   80e48:	42a2      	cmp	r2, r4
   80e4a:	d806      	bhi.n	80e5a <udc_iface_disable+0x5a>
   80e4c:	e008      	b.n	80e60 <udc_iface_disable+0x60>
		if (desc_id == desc->bDescriptorType) {
   80e4e:	2b05      	cmp	r3, #5
   80e50:	d00f      	beq.n	80e72 <udc_iface_disable+0x72>
				desc->bLength);
   80e52:	7823      	ldrb	r3, [r4, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80e54:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   80e56:	42a2      	cmp	r2, r4
   80e58:	d902      	bls.n	80e60 <udc_iface_disable+0x60>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80e5a:	7863      	ldrb	r3, [r4, #1]
   80e5c:	2b04      	cmp	r3, #4
   80e5e:	d1f6      	bne.n	80e4e <udc_iface_disable+0x4e>
	udi_api->disable();
   80e60:	687b      	ldr	r3, [r7, #4]
   80e62:	4798      	blx	r3
}
   80e64:	4628      	mov	r0, r5
   80e66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return false;
   80e6a:	2500      	movs	r5, #0
}
   80e6c:	4628      	mov	r0, r5
   80e6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			udd_ep_free(ep_desc->bEndpointAddress);
   80e72:	78a0      	ldrb	r0, [r4, #2]
   80e74:	47b0      	blx	r6
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80e76:	e7e0      	b.n	80e3a <udc_iface_disable+0x3a>
   80e78:	20001285 	.word	0x20001285
   80e7c:	00080da1 	.word	0x00080da1
   80e80:	20001288 	.word	0x20001288
   80e84:	2000128c 	.word	0x2000128c
   80e88:	00082539 	.word	0x00082539

00080e8c <udc_iface_enable>:
	if (0 == udc_num_configuration) {
   80e8c:	4b18      	ldr	r3, [pc, #96]	; (80ef0 <udc_iface_enable+0x64>)
   80e8e:	781b      	ldrb	r3, [r3, #0]
   80e90:	b35b      	cbz	r3, 80eea <udc_iface_enable+0x5e>
{
   80e92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80e96:	4b17      	ldr	r3, [pc, #92]	; (80ef4 <udc_iface_enable+0x68>)
   80e98:	4605      	mov	r5, r0
   80e9a:	4798      	blx	r3
	if (!udc_update_iface_desc(iface_num, setting_num)) {
   80e9c:	b310      	cbz	r0, 80ee4 <udc_iface_enable+0x58>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80e9e:	4b16      	ldr	r3, [pc, #88]	; (80ef8 <udc_iface_enable+0x6c>)
   80ea0:	4e16      	ldr	r6, [pc, #88]	; (80efc <udc_iface_enable+0x70>)
   80ea2:	681c      	ldr	r4, [r3, #0]
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   80ea4:	4f16      	ldr	r7, [pc, #88]	; (80f00 <udc_iface_enable+0x74>)
			udc_ptr_conf->desc +
   80ea6:	6831      	ldr	r1, [r6, #0]
			desc->bLength);
   80ea8:	7823      	ldrb	r3, [r4, #0]
			udc_ptr_conf->desc +
   80eaa:	680a      	ldr	r2, [r1, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80eac:	441c      	add	r4, r3
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80eae:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80eb0:	441a      	add	r2, r3
	while (ptr_eof_desc > desc) {
   80eb2:	42a2      	cmp	r2, r4
   80eb4:	d806      	bhi.n	80ec4 <udc_iface_enable+0x38>
   80eb6:	e008      	b.n	80eca <udc_iface_enable+0x3e>
		if (desc_id == desc->bDescriptorType) {
   80eb8:	2b05      	cmp	r3, #5
   80eba:	d00d      	beq.n	80ed8 <udc_iface_enable+0x4c>
				desc->bLength);
   80ebc:	7823      	ldrb	r3, [r4, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80ebe:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   80ec0:	42a2      	cmp	r2, r4
   80ec2:	d902      	bls.n	80eca <udc_iface_enable+0x3e>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80ec4:	7863      	ldrb	r3, [r4, #1]
   80ec6:	2b04      	cmp	r3, #4
   80ec8:	d1f6      	bne.n	80eb8 <udc_iface_enable+0x2c>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   80eca:	684b      	ldr	r3, [r1, #4]
   80ecc:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
}
   80ed0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   80ed4:	681b      	ldr	r3, [r3, #0]
   80ed6:	4718      	bx	r3
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   80ed8:	88a2      	ldrh	r2, [r4, #4]
   80eda:	78e1      	ldrb	r1, [r4, #3]
   80edc:	78a0      	ldrb	r0, [r4, #2]
   80ede:	47b8      	blx	r7
   80ee0:	2800      	cmp	r0, #0
   80ee2:	d1e0      	bne.n	80ea6 <udc_iface_enable+0x1a>
}
   80ee4:	2000      	movs	r0, #0
   80ee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80eea:	2000      	movs	r0, #0
   80eec:	4770      	bx	lr
   80eee:	bf00      	nop
   80ef0:	20001285 	.word	0x20001285
   80ef4:	00080da1 	.word	0x00080da1
   80ef8:	2000128c 	.word	0x2000128c
   80efc:	20001288 	.word	0x20001288
   80f00:	00082809 	.word	0x00082809

00080f04 <udc_get_interface_desc>:
	return udc_ptr_iface;
   80f04:	4b01      	ldr	r3, [pc, #4]	; (80f0c <udc_get_interface_desc+0x8>)
}
   80f06:	6818      	ldr	r0, [r3, #0]
   80f08:	4770      	bx	lr
   80f0a:	bf00      	nop
   80f0c:	2000128c 	.word	0x2000128c

00080f10 <udc_start>:
	udd_enable();
   80f10:	4b00      	ldr	r3, [pc, #0]	; (80f14 <udc_start+0x4>)
   80f12:	4718      	bx	r3
   80f14:	000823a1 	.word	0x000823a1

00080f18 <udc_reset>:
{
   80f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (udc_num_configuration) {
   80f1a:	4f0c      	ldr	r7, [pc, #48]	; (80f4c <udc_reset+0x34>)
   80f1c:	783b      	ldrb	r3, [r7, #0]
   80f1e:	b17b      	cbz	r3, 80f40 <udc_reset+0x28>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f20:	4d0b      	ldr	r5, [pc, #44]	; (80f50 <udc_reset+0x38>)
   80f22:	682b      	ldr	r3, [r5, #0]
   80f24:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   80f26:	791b      	ldrb	r3, [r3, #4]
   80f28:	b153      	cbz	r3, 80f40 <udc_reset+0x28>
   80f2a:	2400      	movs	r4, #0
   80f2c:	4620      	mov	r0, r4
   80f2e:	4e09      	ldr	r6, [pc, #36]	; (80f54 <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
   80f30:	47b0      	blx	r6
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f32:	682b      	ldr	r3, [r5, #0]
		for (iface_num = 0;
   80f34:	3401      	adds	r4, #1
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f36:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   80f38:	b2e0      	uxtb	r0, r4
   80f3a:	791b      	ldrb	r3, [r3, #4]
   80f3c:	4283      	cmp	r3, r0
   80f3e:	d8f7      	bhi.n	80f30 <udc_reset+0x18>
	udc_num_configuration = 0;
   80f40:	2300      	movs	r3, #0
	udc_device_status =
   80f42:	4a05      	ldr	r2, [pc, #20]	; (80f58 <udc_reset+0x40>)
	udc_num_configuration = 0;
   80f44:	703b      	strb	r3, [r7, #0]
	udc_device_status =
   80f46:	8013      	strh	r3, [r2, #0]
}
   80f48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80f4a:	bf00      	nop
   80f4c:	20001285 	.word	0x20001285
   80f50:	20001288 	.word	0x20001288
   80f54:	00080e01 	.word	0x00080e01
   80f58:	20001280 	.word	0x20001280

00080f5c <udc_sof_notify>:
{
   80f5c:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
   80f5e:	4b0c      	ldr	r3, [pc, #48]	; (80f90 <udc_sof_notify+0x34>)
   80f60:	781b      	ldrb	r3, [r3, #0]
   80f62:	b19b      	cbz	r3, 80f8c <udc_sof_notify+0x30>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f64:	4d0b      	ldr	r5, [pc, #44]	; (80f94 <udc_sof_notify+0x38>)
   80f66:	682b      	ldr	r3, [r5, #0]
   80f68:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   80f6a:	7912      	ldrb	r2, [r2, #4]
   80f6c:	b172      	cbz	r2, 80f8c <udc_sof_notify+0x30>
   80f6e:	2400      	movs	r4, #0
   80f70:	4622      	mov	r2, r4
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   80f72:	685b      	ldr	r3, [r3, #4]
		for (iface_num = 0;
   80f74:	3401      	adds	r4, #1
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   80f76:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   80f7a:	691b      	ldr	r3, [r3, #16]
   80f7c:	b103      	cbz	r3, 80f80 <udc_sof_notify+0x24>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
   80f7e:	4798      	blx	r3
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f80:	682b      	ldr	r3, [r5, #0]
		for (iface_num = 0;
   80f82:	b2e2      	uxtb	r2, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f84:	6819      	ldr	r1, [r3, #0]
		for (iface_num = 0;
   80f86:	7909      	ldrb	r1, [r1, #4]
   80f88:	4291      	cmp	r1, r2
   80f8a:	d8f2      	bhi.n	80f72 <udc_sof_notify+0x16>
}
   80f8c:	bd38      	pop	{r3, r4, r5, pc}
   80f8e:	bf00      	nop
   80f90:	20001285 	.word	0x20001285
   80f94:	20001288 	.word	0x20001288

00080f98 <udc_process_setup>:
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
   80f98:	2300      	movs	r3, #0
{
   80f9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	udd_g_ctrlreq.payload_size = 0;
   80f9e:	4c8b      	ldr	r4, [pc, #556]	; (811cc <udc_process_setup+0x234>)
	udd_g_ctrlreq.callback = NULL;
	udd_g_ctrlreq.over_under_run = NULL;

	// MS requests this using request type 0xC0 and our user defined bRequest (0x01 in our case)
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80fa0:	8822      	ldrh	r2, [r4, #0]
	udd_g_ctrlreq.over_under_run = NULL;
   80fa2:	e9c4 3304 	strd	r3, r3, [r4, #16]
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80fa6:	f5b2 7fe0 	cmp.w	r2, #448	; 0x1c0
	udd_g_ctrlreq.payload_size = 0;
   80faa:	81a3      	strh	r3, [r4, #12]
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80fac:	f000 80d0 	beq.w	81150 <udc_process_setup+0x1b8>
#endif
		udd_set_setup_payload((uint8_t *)&MS_OS_DESC, sizeof(struct MS_OS_DESC_SET_HEADER));
		return true;
	}

	if (Udd_setup_is_in()) {
   80fb0:	f994 2000 	ldrsb.w	r2, [r4]
   80fb4:	7823      	ldrb	r3, [r4, #0]
   80fb6:	2a00      	cmp	r2, #0
   80fb8:	db0e      	blt.n	80fd8 <udc_process_setup+0x40>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80fba:	f013 0f60 	tst.w	r3, #96	; 0x60
   80fbe:	d079      	beq.n	810b4 <udc_process_setup+0x11c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   80fc0:	f013 0f1e 	tst.w	r3, #30
   80fc4:	d040      	beq.n	81048 <udc_process_setup+0xb0>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   80fc6:	f003 031f 	and.w	r3, r3, #31
   80fca:	2b02      	cmp	r3, #2
   80fcc:	f000 80b6 	beq.w	8113c <udc_process_setup+0x1a4>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
   80fd0:	2500      	movs	r5, #0
#endif
}
   80fd2:	4628      	mov	r0, r5
   80fd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
   80fd8:	88e5      	ldrh	r5, [r4, #6]
   80fda:	2d00      	cmp	r5, #0
   80fdc:	d0f8      	beq.n	80fd0 <udc_process_setup+0x38>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80fde:	f013 0f60 	tst.w	r3, #96	; 0x60
   80fe2:	d1ed      	bne.n	80fc0 <udc_process_setup+0x28>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80fe4:	f013 021f 	ands.w	r2, r3, #31
   80fe8:	f000 8165 	beq.w	812b6 <udc_process_setup+0x31e>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80fec:	2a01      	cmp	r2, #1
   80fee:	f040 80b9 	bne.w	81164 <udc_process_setup+0x1cc>
			switch (udd_g_ctrlreq.req.bRequest) {
   80ff2:	7862      	ldrb	r2, [r4, #1]
   80ff4:	2a0a      	cmp	r2, #10
   80ff6:	d124      	bne.n	81042 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80ff8:	2d01      	cmp	r5, #1
   80ffa:	d122      	bne.n	81042 <udc_process_setup+0xaa>
	if (!udc_num_configuration) {
   80ffc:	4a74      	ldr	r2, [pc, #464]	; (811d0 <udc_process_setup+0x238>)
   80ffe:	7812      	ldrb	r2, [r2, #0]
   81000:	b1fa      	cbz	r2, 81042 <udc_process_setup+0xaa>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   81002:	4a74      	ldr	r2, [pc, #464]	; (811d4 <udc_process_setup+0x23c>)
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   81004:	7926      	ldrb	r6, [r4, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   81006:	6817      	ldr	r7, [r2, #0]
   81008:	683a      	ldr	r2, [r7, #0]
   8100a:	7912      	ldrb	r2, [r2, #4]
   8100c:	42b2      	cmp	r2, r6
   8100e:	d918      	bls.n	81042 <udc_process_setup+0xaa>
	if (0 == udc_num_configuration) {
   81010:	2100      	movs	r1, #0
   81012:	4630      	mov	r0, r6
   81014:	4b70      	ldr	r3, [pc, #448]	; (811d8 <udc_process_setup+0x240>)
   81016:	4798      	blx	r3
	if (!udc_update_iface_desc(iface_num, 0)) {
   81018:	4605      	mov	r5, r0
   8101a:	2800      	cmp	r0, #0
   8101c:	f000 80c5 	beq.w	811aa <udc_process_setup+0x212>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   81020:	687b      	ldr	r3, [r7, #4]
	udc_iface_setting = udi_api->getsetting();
   81022:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
   81026:	68db      	ldr	r3, [r3, #12]
   81028:	4798      	blx	r3
   8102a:	4602      	mov	r2, r0
   8102c:	486b      	ldr	r0, [pc, #428]	; (811dc <udc_process_setup+0x244>)
	udd_set_setup_payload(&udc_iface_setting,1);
   8102e:	2101      	movs	r1, #1
   81030:	4b6b      	ldr	r3, [pc, #428]	; (811e0 <udc_process_setup+0x248>)
	udc_iface_setting = udi_api->getsetting();
   81032:	7002      	strb	r2, [r0, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
   81034:	4798      	blx	r3
	return true;
   81036:	e7cc      	b.n	80fd2 <udc_process_setup+0x3a>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   81038:	2a01      	cmp	r2, #1
   8103a:	f000 814d 	beq.w	812d8 <udc_process_setup+0x340>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   8103e:	2a02      	cmp	r2, #2
   81040:	d06c      	beq.n	8111c <udc_process_setup+0x184>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   81042:	f013 0f1e 	tst.w	r3, #30
   81046:	d1c3      	bne.n	80fd0 <udc_process_setup+0x38>
		if (udd_g_ctrlreq.req.wIndex == 2) {
   81048:	88a3      	ldrh	r3, [r4, #4]
	if (0 == udc_num_configuration) {
   8104a:	4e61      	ldr	r6, [pc, #388]	; (811d0 <udc_process_setup+0x238>)
		if (udd_g_ctrlreq.req.wIndex == 2) {
   8104c:	2b02      	cmp	r3, #2
			udd_g_ctrlreq.req.wIndex = 1;
   8104e:	bf04      	itt	eq
   81050:	2301      	moveq	r3, #1
   81052:	80a3      	strheq	r3, [r4, #4]
	if (0 == udc_num_configuration) {
   81054:	7833      	ldrb	r3, [r6, #0]
   81056:	2b00      	cmp	r3, #0
   81058:	d0ba      	beq.n	80fd0 <udc_process_setup+0x38>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   8105a:	4f5e      	ldr	r7, [pc, #376]	; (811d4 <udc_process_setup+0x23c>)
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   8105c:	f894 8004 	ldrb.w	r8, [r4, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   81060:	683d      	ldr	r5, [r7, #0]
   81062:	682b      	ldr	r3, [r5, #0]
   81064:	791b      	ldrb	r3, [r3, #4]
   81066:	4598      	cmp	r8, r3
   81068:	d340      	bcc.n	810ec <udc_process_setup+0x154>
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   8106a:	7822      	ldrb	r2, [r4, #0]
   8106c:	f002 021f 	and.w	r2, r2, #31
   81070:	2a02      	cmp	r2, #2
   81072:	d1ad      	bne.n	80fd0 <udc_process_setup+0x38>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81074:	2b00      	cmp	r3, #0
   81076:	d0ab      	beq.n	80fd0 <udc_process_setup+0x38>
   81078:	2400      	movs	r4, #0
   8107a:	46a0      	mov	r8, r4
   8107c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 811d8 <udc_process_setup+0x240>
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   81080:	686b      	ldr	r3, [r5, #4]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81082:	3401      	adds	r4, #1
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   81084:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   81088:	68eb      	ldr	r3, [r5, #12]
   8108a:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   8108c:	7833      	ldrb	r3, [r6, #0]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   8108e:	4601      	mov	r1, r0
	if (0 == udc_num_configuration) {
   81090:	2b00      	cmp	r3, #0
   81092:	d09d      	beq.n	80fd0 <udc_process_setup+0x38>
   81094:	4640      	mov	r0, r8
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81096:	fa5f f884 	uxtb.w	r8, r4
   8109a:	47c8      	blx	r9
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   8109c:	2800      	cmp	r0, #0
   8109e:	d097      	beq.n	80fd0 <udc_process_setup+0x38>
		if (udi_api->setup()) {
   810a0:	68ab      	ldr	r3, [r5, #8]
   810a2:	4798      	blx	r3
   810a4:	2800      	cmp	r0, #0
   810a6:	d137      	bne.n	81118 <udc_process_setup+0x180>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   810a8:	683d      	ldr	r5, [r7, #0]
   810aa:	682b      	ldr	r3, [r5, #0]
   810ac:	791b      	ldrb	r3, [r3, #4]
   810ae:	4543      	cmp	r3, r8
   810b0:	d8e6      	bhi.n	81080 <udc_process_setup+0xe8>
   810b2:	e78d      	b.n	80fd0 <udc_process_setup+0x38>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   810b4:	f013 021f 	ands.w	r2, r3, #31
   810b8:	d1be      	bne.n	81038 <udc_process_setup+0xa0>
			switch (udd_g_ctrlreq.req.bRequest) {
   810ba:	7862      	ldrb	r2, [r4, #1]
   810bc:	3a01      	subs	r2, #1
   810be:	2a08      	cmp	r2, #8
   810c0:	d8bf      	bhi.n	81042 <udc_process_setup+0xaa>
   810c2:	a101      	add	r1, pc, #4	; (adr r1, 810c8 <udc_process_setup+0x130>)
   810c4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
   810c8:	000811af 	.word	0x000811af
   810cc:	00081043 	.word	0x00081043
   810d0:	0008118b 	.word	0x0008118b
   810d4:	00081043 	.word	0x00081043
   810d8:	000812a7 	.word	0x000812a7
   810dc:	00081043 	.word	0x00081043
   810e0:	00081043 	.word	0x00081043
   810e4:	00081043 	.word	0x00081043
   810e8:	000811f9 	.word	0x000811f9
	if (0 == udc_num_configuration) {
   810ec:	2100      	movs	r1, #0
   810ee:	4640      	mov	r0, r8
   810f0:	4f39      	ldr	r7, [pc, #228]	; (811d8 <udc_process_setup+0x240>)
   810f2:	47b8      	blx	r7
	if (!udc_update_iface_desc(iface_num, 0)) {
   810f4:	2800      	cmp	r0, #0
   810f6:	d033      	beq.n	81160 <udc_process_setup+0x1c8>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   810f8:	686b      	ldr	r3, [r5, #4]
   810fa:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   810fe:	68eb      	ldr	r3, [r5, #12]
   81100:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   81102:	7833      	ldrb	r3, [r6, #0]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   81104:	4601      	mov	r1, r0
	if (0 == udc_num_configuration) {
   81106:	2b00      	cmp	r3, #0
   81108:	f43f af62 	beq.w	80fd0 <udc_process_setup+0x38>
   8110c:	4640      	mov	r0, r8
   8110e:	47b8      	blx	r7
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   81110:	b330      	cbz	r0, 81160 <udc_process_setup+0x1c8>
	return udi_api->setup();
   81112:	68ab      	ldr	r3, [r5, #8]
   81114:	4798      	blx	r3
		if (udc_req_iface()) {
   81116:	b318      	cbz	r0, 81160 <udc_process_setup+0x1c8>
			return true;
   81118:	2501      	movs	r5, #1
   8111a:	e75a      	b.n	80fd2 <udc_process_setup+0x3a>
			switch (udd_g_ctrlreq.req.bRequest) {
   8111c:	7862      	ldrb	r2, [r4, #1]
   8111e:	2a01      	cmp	r2, #1
   81120:	f000 80f7 	beq.w	81312 <udc_process_setup+0x37a>
   81124:	2a03      	cmp	r2, #3
   81126:	d106      	bne.n	81136 <udc_process_setup+0x19e>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   81128:	88e2      	ldrh	r2, [r4, #6]
   8112a:	8861      	ldrh	r1, [r4, #2]
   8112c:	430a      	orrs	r2, r1
   8112e:	b292      	uxth	r2, r2
   81130:	2a00      	cmp	r2, #0
   81132:	f000 81c1 	beq.w	814b8 <udc_process_setup+0x520>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   81136:	f013 0f1e 	tst.w	r3, #30
   8113a:	d085      	beq.n	81048 <udc_process_setup+0xb0>
	if (0 == udc_num_configuration) {
   8113c:	4e24      	ldr	r6, [pc, #144]	; (811d0 <udc_process_setup+0x238>)
   8113e:	7833      	ldrb	r3, [r6, #0]
   81140:	2b00      	cmp	r3, #0
   81142:	f43f af45 	beq.w	80fd0 <udc_process_setup+0x38>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81146:	4f23      	ldr	r7, [pc, #140]	; (811d4 <udc_process_setup+0x23c>)
   81148:	683d      	ldr	r5, [r7, #0]
   8114a:	682b      	ldr	r3, [r5, #0]
   8114c:	791b      	ldrb	r3, [r3, #4]
   8114e:	e791      	b.n	81074 <udc_process_setup+0xdc>
		return true;
   81150:	2501      	movs	r5, #1
		udd_set_setup_payload((uint8_t *)&MS_OS_DESC, sizeof(struct MS_OS_DESC_SET_HEADER));
   81152:	219e      	movs	r1, #158	; 0x9e
   81154:	4823      	ldr	r0, [pc, #140]	; (811e4 <udc_process_setup+0x24c>)
   81156:	4b22      	ldr	r3, [pc, #136]	; (811e0 <udc_process_setup+0x248>)
   81158:	4798      	blx	r3
}
   8115a:	4628      	mov	r0, r5
   8115c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   81160:	7823      	ldrb	r3, [r4, #0]
   81162:	e730      	b.n	80fc6 <udc_process_setup+0x2e>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   81164:	2a02      	cmp	r2, #2
   81166:	f47f af6c 	bne.w	81042 <udc_process_setup+0xaa>
			switch (udd_g_ctrlreq.req.bRequest) {
   8116a:	7862      	ldrb	r2, [r4, #1]
   8116c:	2a00      	cmp	r2, #0
   8116e:	d1e2      	bne.n	81136 <udc_process_setup+0x19e>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
   81170:	2d02      	cmp	r5, #2
   81172:	d1e0      	bne.n	81136 <udc_process_setup+0x19e>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
   81174:	7920      	ldrb	r0, [r4, #4]
   81176:	4b1c      	ldr	r3, [pc, #112]	; (811e8 <udc_process_setup+0x250>)
   81178:	4798      	blx	r3
   8117a:	4602      	mov	r2, r0
   8117c:	481b      	ldr	r0, [pc, #108]	; (811ec <udc_process_setup+0x254>)
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   8117e:	4629      	mov	r1, r5
   81180:	4b17      	ldr	r3, [pc, #92]	; (811e0 <udc_process_setup+0x248>)
			return true;
   81182:	2501      	movs	r5, #1
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
   81184:	8002      	strh	r2, [r0, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   81186:	4798      	blx	r3
	return true;
   81188:	e723      	b.n	80fd2 <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
   8118a:	88e2      	ldrh	r2, [r4, #6]
   8118c:	2a00      	cmp	r2, #0
   8118e:	f47f af58 	bne.w	81042 <udc_process_setup+0xaa>
	switch (udd_g_ctrlreq.req.wValue) {
   81192:	8862      	ldrh	r2, [r4, #2]
   81194:	2a02      	cmp	r2, #2
   81196:	f47f af54 	bne.w	81042 <udc_process_setup+0xaa>
		if (!udd_is_high_speed()) {
   8119a:	4b15      	ldr	r3, [pc, #84]	; (811f0 <udc_process_setup+0x258>)
   8119c:	4798      	blx	r3
   8119e:	4605      	mov	r5, r0
   811a0:	b118      	cbz	r0, 811aa <udc_process_setup+0x212>
		if (udd_g_ctrlreq.req.wIndex & 0xff) {
   811a2:	7923      	ldrb	r3, [r4, #4]
   811a4:	2b00      	cmp	r3, #0
   811a6:	f000 81bc 	beq.w	81522 <udc_process_setup+0x58a>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   811aa:	7823      	ldrb	r3, [r4, #0]
   811ac:	e708      	b.n	80fc0 <udc_process_setup+0x28>
	if (udd_g_ctrlreq.req.wLength) {
   811ae:	88e2      	ldrh	r2, [r4, #6]
   811b0:	2a00      	cmp	r2, #0
   811b2:	f47f af46 	bne.w	81042 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
   811b6:	8865      	ldrh	r5, [r4, #2]
   811b8:	2d01      	cmp	r5, #1
   811ba:	f47f af42 	bne.w	81042 <udc_process_setup+0xaa>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
   811be:	4a0d      	ldr	r2, [pc, #52]	; (811f4 <udc_process_setup+0x25c>)
   811c0:	8813      	ldrh	r3, [r2, #0]
   811c2:	f023 0302 	bic.w	r3, r3, #2
   811c6:	8013      	strh	r3, [r2, #0]
		return true;
   811c8:	e703      	b.n	80fd2 <udc_process_setup+0x3a>
   811ca:	bf00      	nop
   811cc:	2000133c 	.word	0x2000133c
   811d0:	20001285 	.word	0x20001285
   811d4:	20001288 	.word	0x20001288
   811d8:	00080da1 	.word	0x00080da1
   811dc:	20001284 	.word	0x20001284
   811e0:	0008252d 	.word	0x0008252d
   811e4:	200001e4 	.word	0x200001e4
   811e8:	00082589 	.word	0x00082589
   811ec:	20001282 	.word	0x20001282
   811f0:	000824d5 	.word	0x000824d5
   811f4:	20001280 	.word	0x20001280
	if (udd_g_ctrlreq.req.wLength) {
   811f8:	88e2      	ldrh	r2, [r4, #6]
   811fa:	2a00      	cmp	r2, #0
   811fc:	f47f af21 	bne.w	81042 <udc_process_setup+0xaa>
	if (!udd_getaddress()) {
   81200:	4b9c      	ldr	r3, [pc, #624]	; (81474 <udc_process_setup+0x4dc>)
   81202:	4798      	blx	r3
   81204:	2800      	cmp	r0, #0
   81206:	d0d0      	beq.n	811aa <udc_process_setup+0x212>
	if (udd_is_high_speed()) {
   81208:	f8df 926c 	ldr.w	r9, [pc, #620]	; 81478 <udc_process_setup+0x4e0>
   8120c:	47c8      	blx	r9
				udc_config.confdev_hs->bNumConfigurations) {
   8120e:	f8df a26c 	ldr.w	sl, [pc, #620]	; 8147c <udc_process_setup+0x4e4>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   81212:	78a3      	ldrb	r3, [r4, #2]
	if (udd_is_high_speed()) {
   81214:	2800      	cmp	r0, #0
   81216:	f000 8125 	beq.w	81464 <udc_process_setup+0x4cc>
				udc_config.confdev_hs->bNumConfigurations) {
   8121a:	f8da 2008 	ldr.w	r2, [sl, #8]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   8121e:	7c52      	ldrb	r2, [r2, #17]
   81220:	429a      	cmp	r2, r3
   81222:	d3c2      	bcc.n	811aa <udc_process_setup+0x212>
	if (udc_num_configuration) {
   81224:	4e96      	ldr	r6, [pc, #600]	; (81480 <udc_process_setup+0x4e8>)
   81226:	7833      	ldrb	r3, [r6, #0]
   81228:	b183      	cbz	r3, 8124c <udc_process_setup+0x2b4>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8122a:	4f96      	ldr	r7, [pc, #600]	; (81484 <udc_process_setup+0x4ec>)
   8122c:	683b      	ldr	r3, [r7, #0]
   8122e:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   81230:	791b      	ldrb	r3, [r3, #4]
   81232:	b15b      	cbz	r3, 8124c <udc_process_setup+0x2b4>
   81234:	2500      	movs	r5, #0
   81236:	4628      	mov	r0, r5
   81238:	f8df 824c 	ldr.w	r8, [pc, #588]	; 81488 <udc_process_setup+0x4f0>
			udc_iface_disable(iface_num);
   8123c:	47c0      	blx	r8
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8123e:	683b      	ldr	r3, [r7, #0]
		for (iface_num = 0;
   81240:	3501      	adds	r5, #1
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81242:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   81244:	b2e8      	uxtb	r0, r5
   81246:	791b      	ldrb	r3, [r3, #4]
   81248:	4283      	cmp	r3, r0
   8124a:	d8f7      	bhi.n	8123c <udc_process_setup+0x2a4>
	udc_device_status =
   8124c:	2200      	movs	r2, #0
   8124e:	4b8f      	ldr	r3, [pc, #572]	; (8148c <udc_process_setup+0x4f4>)
   81250:	801a      	strh	r2, [r3, #0]
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
   81252:	78a3      	ldrb	r3, [r4, #2]
   81254:	7033      	strb	r3, [r6, #0]
	if (udc_num_configuration == 0) {
   81256:	2b00      	cmp	r3, #0
   81258:	f43f af5e 	beq.w	81118 <udc_process_setup+0x180>
	if (udd_is_high_speed()) {
   8125c:	47c8      	blx	r9
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   8125e:	7832      	ldrb	r2, [r6, #0]
	if (udd_is_high_speed()) {
   81260:	2800      	cmp	r0, #0
   81262:	f000 8133 	beq.w	814cc <udc_process_setup+0x534>
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   81266:	f8da 3010 	ldr.w	r3, [sl, #16]
   8126a:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
   8126e:	3a01      	subs	r2, #1
   81270:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81274:	681a      	ldr	r2, [r3, #0]
   81276:	4f83      	ldr	r7, [pc, #524]	; (81484 <udc_process_setup+0x4ec>)
   81278:	7912      	ldrb	r2, [r2, #4]
   8127a:	603b      	str	r3, [r7, #0]
   8127c:	2a00      	cmp	r2, #0
   8127e:	f43f af4b 	beq.w	81118 <udc_process_setup+0x180>
   81282:	2500      	movs	r5, #0
   81284:	4e82      	ldr	r6, [pc, #520]	; (81490 <udc_process_setup+0x4f8>)
   81286:	462b      	mov	r3, r5
   81288:	e005      	b.n	81296 <udc_process_setup+0x2fe>
   8128a:	683a      	ldr	r2, [r7, #0]
   8128c:	6812      	ldr	r2, [r2, #0]
   8128e:	7912      	ldrb	r2, [r2, #4]
   81290:	429a      	cmp	r2, r3
   81292:	f67f af41 	bls.w	81118 <udc_process_setup+0x180>
		if (!udc_iface_enable(iface_num, 0)) {
   81296:	4618      	mov	r0, r3
   81298:	2100      	movs	r1, #0
   8129a:	47b0      	blx	r6
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8129c:	3501      	adds	r5, #1
   8129e:	b2eb      	uxtb	r3, r5
		if (!udc_iface_enable(iface_num, 0)) {
   812a0:	2800      	cmp	r0, #0
   812a2:	d1f2      	bne.n	8128a <udc_process_setup+0x2f2>
   812a4:	e781      	b.n	811aa <udc_process_setup+0x212>
	if (udd_g_ctrlreq.req.wLength) {
   812a6:	88e2      	ldrh	r2, [r4, #6]
   812a8:	2a00      	cmp	r2, #0
   812aa:	f47f aeca 	bne.w	81042 <udc_process_setup+0xaa>
	udd_g_ctrlreq.callback = udc_valid_address;
   812ae:	4b79      	ldr	r3, [pc, #484]	; (81494 <udc_process_setup+0x4fc>)
			return true;
   812b0:	2501      	movs	r5, #1
	udd_g_ctrlreq.callback = udc_valid_address;
   812b2:	6123      	str	r3, [r4, #16]
	return true;
   812b4:	e68d      	b.n	80fd2 <udc_process_setup+0x3a>
			switch (udd_g_ctrlreq.req.bRequest) {
   812b6:	7862      	ldrb	r2, [r4, #1]
   812b8:	2a06      	cmp	r2, #6
   812ba:	d040      	beq.n	8133e <udc_process_setup+0x3a6>
   812bc:	2a08      	cmp	r2, #8
   812be:	d036      	beq.n	8132e <udc_process_setup+0x396>
   812c0:	2a00      	cmp	r2, #0
   812c2:	f47f aebe 	bne.w	81042 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
   812c6:	2d02      	cmp	r5, #2
   812c8:	f47f aebb 	bne.w	81042 <udc_process_setup+0xaa>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
   812cc:	4629      	mov	r1, r5
   812ce:	486f      	ldr	r0, [pc, #444]	; (8148c <udc_process_setup+0x4f4>)
   812d0:	4b71      	ldr	r3, [pc, #452]	; (81498 <udc_process_setup+0x500>)
   812d2:	4798      	blx	r3
			return true;
   812d4:	2501      	movs	r5, #1
   812d6:	e67c      	b.n	80fd2 <udc_process_setup+0x3a>
			switch (udd_g_ctrlreq.req.bRequest) {
   812d8:	7862      	ldrb	r2, [r4, #1]
   812da:	2a0b      	cmp	r2, #11
   812dc:	f47f aeb1 	bne.w	81042 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wLength) {
   812e0:	88e2      	ldrh	r2, [r4, #6]
   812e2:	2a00      	cmp	r2, #0
   812e4:	f47f aead 	bne.w	81042 <udc_process_setup+0xaa>
	if (!udc_num_configuration) {
   812e8:	4a65      	ldr	r2, [pc, #404]	; (81480 <udc_process_setup+0x4e8>)
   812ea:	7812      	ldrb	r2, [r2, #0]
   812ec:	2a00      	cmp	r2, #0
   812ee:	f43f aea8 	beq.w	81042 <udc_process_setup+0xaa>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   812f2:	7925      	ldrb	r5, [r4, #4]
	if (!udc_iface_disable(iface_num)) {
   812f4:	4b64      	ldr	r3, [pc, #400]	; (81488 <udc_process_setup+0x4f0>)
   812f6:	4628      	mov	r0, r5
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
   812f8:	8866      	ldrh	r6, [r4, #2]
	if (!udc_iface_disable(iface_num)) {
   812fa:	4798      	blx	r3
   812fc:	2800      	cmp	r0, #0
   812fe:	f43f af54 	beq.w	811aa <udc_process_setup+0x212>
	return udc_iface_enable(iface_num, setting_num);
   81302:	4628      	mov	r0, r5
   81304:	4b62      	ldr	r3, [pc, #392]	; (81490 <udc_process_setup+0x4f8>)
   81306:	b2f1      	uxtb	r1, r6
   81308:	4798      	blx	r3
		if (udc_reqstd()) {
   8130a:	2800      	cmp	r0, #0
   8130c:	f47f af04 	bne.w	81118 <udc_process_setup+0x180>
   81310:	e74b      	b.n	811aa <udc_process_setup+0x212>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   81312:	88e2      	ldrh	r2, [r4, #6]
   81314:	8861      	ldrh	r1, [r4, #2]
   81316:	430a      	orrs	r2, r1
   81318:	b292      	uxth	r2, r2
   8131a:	2a00      	cmp	r2, #0
   8131c:	f47f af0b 	bne.w	81136 <udc_process_setup+0x19e>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   81320:	7920      	ldrb	r0, [r4, #4]
   81322:	4b5e      	ldr	r3, [pc, #376]	; (8149c <udc_process_setup+0x504>)
   81324:	4798      	blx	r3
		if (udc_reqstd()) {
   81326:	2800      	cmp	r0, #0
   81328:	f47f aef6 	bne.w	81118 <udc_process_setup+0x180>
   8132c:	e73d      	b.n	811aa <udc_process_setup+0x212>
	if (udd_g_ctrlreq.req.wLength != 1) {
   8132e:	2d01      	cmp	r5, #1
   81330:	f47f ae87 	bne.w	81042 <udc_process_setup+0xaa>
	udd_set_setup_payload(&udc_num_configuration,1);
   81334:	4629      	mov	r1, r5
   81336:	4852      	ldr	r0, [pc, #328]	; (81480 <udc_process_setup+0x4e8>)
   81338:	4b57      	ldr	r3, [pc, #348]	; (81498 <udc_process_setup+0x500>)
   8133a:	4798      	blx	r3
	return true;
   8133c:	e649      	b.n	80fd2 <udc_process_setup+0x3a>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   8133e:	8861      	ldrh	r1, [r4, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   81340:	0a0a      	lsrs	r2, r1, #8
   81342:	3a01      	subs	r2, #1
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   81344:	b2cd      	uxtb	r5, r1
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   81346:	2a0e      	cmp	r2, #14
   81348:	f63f ae3a 	bhi.w	80fc0 <udc_process_setup+0x28>
   8134c:	a101      	add	r1, pc, #4	; (adr r1, 81354 <udc_process_setup+0x3bc>)
   8134e:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
   81352:	bf00      	nop
   81354:	00081409 	.word	0x00081409
   81358:	000813df 	.word	0x000813df
   8135c:	0008141d 	.word	0x0008141d
   81360:	00080fc1 	.word	0x00080fc1
   81364:	00080fc1 	.word	0x00080fc1
   81368:	000813d3 	.word	0x000813d3
   8136c:	000813a9 	.word	0x000813a9
   81370:	00080fc1 	.word	0x00080fc1
   81374:	00080fc1 	.word	0x00080fc1
   81378:	00080fc1 	.word	0x00080fc1
   8137c:	00080fc1 	.word	0x00080fc1
   81380:	00080fc1 	.word	0x00080fc1
   81384:	00080fc1 	.word	0x00080fc1
   81388:	00080fc1 	.word	0x00080fc1
   8138c:	00081391 	.word	0x00081391
		udd_set_setup_payload( (uint8_t *) &MS_BOS_PACKET,
   81390:	2121      	movs	r1, #33	; 0x21
   81392:	4843      	ldr	r0, [pc, #268]	; (814a0 <udc_process_setup+0x508>)
   81394:	4b40      	ldr	r3, [pc, #256]	; (81498 <udc_process_setup+0x500>)
   81396:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
   81398:	88e3      	ldrh	r3, [r4, #6]
   8139a:	89a2      	ldrh	r2, [r4, #12]
   8139c:	429a      	cmp	r2, r3
   8139e:	f67f aebb 	bls.w	81118 <udc_process_setup+0x180>
			return true;
   813a2:	2501      	movs	r5, #1
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
   813a4:	81a3      	strh	r3, [r4, #12]
   813a6:	e614      	b.n	80fd2 <udc_process_setup+0x3a>
		if (!udd_is_high_speed()) {
   813a8:	4b33      	ldr	r3, [pc, #204]	; (81478 <udc_process_setup+0x4e0>)
   813aa:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   813ac:	4b33      	ldr	r3, [pc, #204]	; (8147c <udc_process_setup+0x4e4>)
		if (!udd_is_high_speed()) {
   813ae:	2800      	cmp	r0, #0
   813b0:	f040 8094 	bne.w	814dc <udc_process_setup+0x544>
			if (conf_num >= udc_config.confdev_hs->
   813b4:	689a      	ldr	r2, [r3, #8]
   813b6:	7c52      	ldrb	r2, [r2, #17]
   813b8:	42aa      	cmp	r2, r5
   813ba:	f67f aef6 	bls.w	811aa <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   813be:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   813c0:	4b35      	ldr	r3, [pc, #212]	; (81498 <udc_process_setup+0x500>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   813c2:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   813c6:	8841      	ldrh	r1, [r0, #2]
   813c8:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   813ca:	2207      	movs	r2, #7
   813cc:	68a3      	ldr	r3, [r4, #8]
   813ce:	705a      	strb	r2, [r3, #1]
		break;
   813d0:	e7e2      	b.n	81398 <udc_process_setup+0x400>
		udd_set_setup_payload( (uint8_t *) udc_config.qualifier,
   813d2:	4a2a      	ldr	r2, [pc, #168]	; (8147c <udc_process_setup+0x4e4>)
   813d4:	4b30      	ldr	r3, [pc, #192]	; (81498 <udc_process_setup+0x500>)
   813d6:	68d0      	ldr	r0, [r2, #12]
   813d8:	7801      	ldrb	r1, [r0, #0]
   813da:	4798      	blx	r3
		break;
   813dc:	e7dc      	b.n	81398 <udc_process_setup+0x400>
		if (udd_is_high_speed()) {
   813de:	4b26      	ldr	r3, [pc, #152]	; (81478 <udc_process_setup+0x4e0>)
   813e0:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   813e2:	4b26      	ldr	r3, [pc, #152]	; (8147c <udc_process_setup+0x4e4>)
		if (udd_is_high_speed()) {
   813e4:	2800      	cmp	r0, #0
   813e6:	f000 8090 	beq.w	8150a <udc_process_setup+0x572>
			if (conf_num >= udc_config.confdev_hs->
   813ea:	689a      	ldr	r2, [r3, #8]
   813ec:	7c52      	ldrb	r2, [r2, #17]
   813ee:	42aa      	cmp	r2, r5
   813f0:	f67f aedb 	bls.w	811aa <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   813f4:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   813f6:	4b28      	ldr	r3, [pc, #160]	; (81498 <udc_process_setup+0x500>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   813f8:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   813fc:	8841      	ldrh	r1, [r0, #2]
   813fe:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   81400:	2202      	movs	r2, #2
   81402:	68a3      	ldr	r3, [r4, #8]
   81404:	705a      	strb	r2, [r3, #1]
		break;
   81406:	e7c7      	b.n	81398 <udc_process_setup+0x400>
		if (!udd_is_high_speed()) {
   81408:	4b1b      	ldr	r3, [pc, #108]	; (81478 <udc_process_setup+0x4e0>)
   8140a:	4798      	blx	r3
   8140c:	2800      	cmp	r0, #0
   8140e:	d171      	bne.n	814f4 <udc_process_setup+0x55c>
				(uint8_t *) udc_config.confdev_hs,
   81410:	4a1a      	ldr	r2, [pc, #104]	; (8147c <udc_process_setup+0x4e4>)
			udd_set_setup_payload(
   81412:	4b21      	ldr	r3, [pc, #132]	; (81498 <udc_process_setup+0x500>)
				(uint8_t *) udc_config.confdev_hs,
   81414:	6890      	ldr	r0, [r2, #8]
			udd_set_setup_payload(
   81416:	7801      	ldrb	r1, [r0, #0]
   81418:	4798      	blx	r3
   8141a:	e7bd      	b.n	81398 <udc_process_setup+0x400>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   8141c:	2d03      	cmp	r5, #3
   8141e:	f63f adcf 	bhi.w	80fc0 <udc_process_setup+0x28>
   81422:	e8df f005 	tbb	[pc, r5]
   81426:	171a      	.short	0x171a
   81428:	0214      	.short	0x0214
   8142a:	2120      	movs	r1, #32
   8142c:	4b1d      	ldr	r3, [pc, #116]	; (814a4 <udc_process_setup+0x50c>)
		for(i = 0; i < str_length; i++) {
   8142e:	4e1e      	ldr	r6, [pc, #120]	; (814a8 <udc_process_setup+0x510>)
   81430:	185d      	adds	r5, r3, r1
   81432:	4632      	mov	r2, r6
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   81434:	f813 0b01 	ldrb.w	r0, [r3], #1
		for(i = 0; i < str_length; i++) {
   81438:	42ab      	cmp	r3, r5
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   8143a:	f822 0f02 	strh.w	r0, [r2, #2]!
		for(i = 0; i < str_length; i++) {
   8143e:	d1f9      	bne.n	81434 <udc_process_setup+0x49c>
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
   81440:	0049      	lsls	r1, r1, #1
   81442:	3102      	adds	r1, #2
		udd_set_setup_payload(
   81444:	4818      	ldr	r0, [pc, #96]	; (814a8 <udc_process_setup+0x510>)
   81446:	4b14      	ldr	r3, [pc, #80]	; (81498 <udc_process_setup+0x500>)
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
   81448:	7031      	strb	r1, [r6, #0]
		udd_set_setup_payload(
   8144a:	4798      	blx	r3
   8144c:	e7a4      	b.n	81398 <udc_process_setup+0x400>
		str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
   8144e:	2110      	movs	r1, #16
		str = udc_string_product_name;
   81450:	4b16      	ldr	r3, [pc, #88]	; (814ac <udc_process_setup+0x514>)
   81452:	e7ec      	b.n	8142e <udc_process_setup+0x496>
		str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
   81454:	2115      	movs	r1, #21
		str = udc_string_manufacturer_name;
   81456:	4b16      	ldr	r3, [pc, #88]	; (814b0 <udc_process_setup+0x518>)
   81458:	e7e9      	b.n	8142e <udc_process_setup+0x496>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
   8145a:	2104      	movs	r1, #4
   8145c:	4815      	ldr	r0, [pc, #84]	; (814b4 <udc_process_setup+0x51c>)
   8145e:	4b0e      	ldr	r3, [pc, #56]	; (81498 <udc_process_setup+0x500>)
   81460:	4798      	blx	r3
	if (str_length) {
   81462:	e799      	b.n	81398 <udc_process_setup+0x400>
				udc_config.confdev_lsfs->bNumConfigurations) {
   81464:	f8da 2000 	ldr.w	r2, [sl]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   81468:	7c52      	ldrb	r2, [r2, #17]
   8146a:	429a      	cmp	r2, r3
   8146c:	f4bf aeda 	bcs.w	81224 <udc_process_setup+0x28c>
   81470:	e69b      	b.n	811aa <udc_process_setup+0x212>
   81472:	bf00      	nop
   81474:	0008250d 	.word	0x0008250d
   81478:	000824d5 	.word	0x000824d5
   8147c:	20000314 	.word	0x20000314
   81480:	20001285 	.word	0x20001285
   81484:	20001288 	.word	0x20001288
   81488:	00080e01 	.word	0x00080e01
   8148c:	20001280 	.word	0x20001280
   81490:	00080e8d 	.word	0x00080e8d
   81494:	00080d8d 	.word	0x00080d8d
   81498:	0008252d 	.word	0x0008252d
   8149c:	00082665 	.word	0x00082665
   814a0:	200001c0 	.word	0x200001c0
   814a4:	20000194 	.word	0x20000194
   814a8:	20000284 	.word	0x20000284
   814ac:	200002e4 	.word	0x200002e4
   814b0:	200002cc 	.word	0x200002cc
   814b4:	200002c8 	.word	0x200002c8
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
   814b8:	7920      	ldrb	r0, [r4, #4]
   814ba:	4b32      	ldr	r3, [pc, #200]	; (81584 <udc_process_setup+0x5ec>)
   814bc:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   814be:	7920      	ldrb	r0, [r4, #4]
   814c0:	4b31      	ldr	r3, [pc, #196]	; (81588 <udc_process_setup+0x5f0>)
   814c2:	4798      	blx	r3
		if (udc_reqstd()) {
   814c4:	2800      	cmp	r0, #0
   814c6:	f47f ae27 	bne.w	81118 <udc_process_setup+0x180>
   814ca:	e66e      	b.n	811aa <udc_process_setup+0x212>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
   814cc:	f8da 3004 	ldr.w	r3, [sl, #4]
   814d0:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
   814d4:	3a01      	subs	r2, #1
   814d6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   814da:	e6cb      	b.n	81274 <udc_process_setup+0x2dc>
			if (conf_num >= udc_config.confdev_lsfs->
   814dc:	681a      	ldr	r2, [r3, #0]
   814de:	7c52      	ldrb	r2, [r2, #17]
   814e0:	42aa      	cmp	r2, r5
   814e2:	f67f ae62 	bls.w	811aa <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   814e6:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   814e8:	4b28      	ldr	r3, [pc, #160]	; (8158c <udc_process_setup+0x5f4>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   814ea:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   814ee:	8841      	ldrh	r1, [r0, #2]
   814f0:	4798      	blx	r3
   814f2:	e76a      	b.n	813ca <udc_process_setup+0x432>
			(udc_config.confdev_lsfs)->bcdUSB = 0x0210;
   814f4:	2010      	movs	r0, #16
   814f6:	2102      	movs	r1, #2
   814f8:	4b25      	ldr	r3, [pc, #148]	; (81590 <udc_process_setup+0x5f8>)
			udd_set_setup_payload(
   814fa:	4d24      	ldr	r5, [pc, #144]	; (8158c <udc_process_setup+0x5f4>)
			(udc_config.confdev_lsfs)->bcdUSB = 0x0210;
   814fc:	681a      	ldr	r2, [r3, #0]
   814fe:	7090      	strb	r0, [r2, #2]
   81500:	70d1      	strb	r1, [r2, #3]
				(uint8_t *) udc_config.confdev_lsfs,
   81502:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
   81504:	7801      	ldrb	r1, [r0, #0]
   81506:	47a8      	blx	r5
   81508:	e746      	b.n	81398 <udc_process_setup+0x400>
			if (conf_num >= udc_config.confdev_lsfs->
   8150a:	681a      	ldr	r2, [r3, #0]
   8150c:	7c52      	ldrb	r2, [r2, #17]
   8150e:	42aa      	cmp	r2, r5
   81510:	f67f ae4b 	bls.w	811aa <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   81514:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   81516:	4b1d      	ldr	r3, [pc, #116]	; (8158c <udc_process_setup+0x5f4>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   81518:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   8151c:	8841      	ldrh	r1, [r0, #2]
   8151e:	4798      	blx	r3
   81520:	e76e      	b.n	81400 <udc_process_setup+0x468>
	if (udc_num_configuration) {
   81522:	4e1c      	ldr	r6, [pc, #112]	; (81594 <udc_process_setup+0x5fc>)
   81524:	7832      	ldrb	r2, [r6, #0]
   81526:	b192      	cbz	r2, 8154e <udc_process_setup+0x5b6>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81528:	4f1b      	ldr	r7, [pc, #108]	; (81598 <udc_process_setup+0x600>)
   8152a:	683a      	ldr	r2, [r7, #0]
   8152c:	6812      	ldr	r2, [r2, #0]
		for (iface_num = 0;
   8152e:	7912      	ldrb	r2, [r2, #4]
   81530:	b16a      	cbz	r2, 8154e <udc_process_setup+0x5b6>
   81532:	4699      	mov	r9, r3
   81534:	4618      	mov	r0, r3
   81536:	f8df 8064 	ldr.w	r8, [pc, #100]	; 8159c <udc_process_setup+0x604>
			udc_iface_disable(iface_num);
   8153a:	47c0      	blx	r8
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8153c:	683b      	ldr	r3, [r7, #0]
		for (iface_num = 0;
   8153e:	f109 0901 	add.w	r9, r9, #1
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81542:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   81544:	fa5f f089 	uxtb.w	r0, r9
   81548:	791b      	ldrb	r3, [r3, #4]
   8154a:	4283      	cmp	r3, r0
   8154c:	d8f5      	bhi.n	8153a <udc_process_setup+0x5a2>
	udc_num_configuration = 0;
   8154e:	2200      	movs	r2, #0
		switch ((udd_g_ctrlreq.req.wIndex >> 8) & 0xFF) {
   81550:	88a3      	ldrh	r3, [r4, #4]
	udc_device_status =
   81552:	4913      	ldr	r1, [pc, #76]	; (815a0 <udc_process_setup+0x608>)
   81554:	0a1b      	lsrs	r3, r3, #8
   81556:	3b01      	subs	r3, #1
   81558:	800a      	strh	r2, [r1, #0]
	udc_num_configuration = 0;
   8155a:	7032      	strb	r2, [r6, #0]
		switch ((udd_g_ctrlreq.req.wIndex >> 8) & 0xFF) {
   8155c:	2b03      	cmp	r3, #3
   8155e:	f63f ae24 	bhi.w	811aa <udc_process_setup+0x212>
   81562:	e8df f003 	tbb	[pc, r3]
   81566:	080b      	.short	0x080b
   81568:	0205      	.short	0x0205
			udd_g_ctrlreq.callback = udd_test_mode_packet;
   8156a:	4b0e      	ldr	r3, [pc, #56]	; (815a4 <udc_process_setup+0x60c>)
   8156c:	6123      	str	r3, [r4, #16]
			return true;
   8156e:	e530      	b.n	80fd2 <udc_process_setup+0x3a>
			udd_g_ctrlreq.callback = udd_test_mode_se0_nak;
   81570:	4b0d      	ldr	r3, [pc, #52]	; (815a8 <udc_process_setup+0x610>)
   81572:	6123      	str	r3, [r4, #16]
			return true;
   81574:	e52d      	b.n	80fd2 <udc_process_setup+0x3a>
			udd_g_ctrlreq.callback = udd_test_mode_k;
   81576:	4b0d      	ldr	r3, [pc, #52]	; (815ac <udc_process_setup+0x614>)
   81578:	6123      	str	r3, [r4, #16]
			return true;
   8157a:	e52a      	b.n	80fd2 <udc_process_setup+0x3a>
			udd_g_ctrlreq.callback = udd_test_mode_j;
   8157c:	4b0c      	ldr	r3, [pc, #48]	; (815b0 <udc_process_setup+0x618>)
   8157e:	6123      	str	r3, [r4, #16]
			return true;
   81580:	e527      	b.n	80fd2 <udc_process_setup+0x3a>
   81582:	bf00      	nop
   81584:	00082a35 	.word	0x00082a35
   81588:	000825bd 	.word	0x000825bd
   8158c:	0008252d 	.word	0x0008252d
   81590:	20000314 	.word	0x20000314
   81594:	20001285 	.word	0x20001285
   81598:	20001288 	.word	0x20001288
   8159c:	00080e01 	.word	0x00080e01
   815a0:	20001280 	.word	0x20001280
   815a4:	00082b01 	.word	0x00082b01
   815a8:	00082ae9 	.word	0x00082ae9
   815ac:	00082ac5 	.word	0x00082ac5
   815b0:	00082aa1 	.word	0x00082aa1

000815b4 <flash_read_unique_id>:
 * \param ul_size Data buffer size in DWORD.
 *
 * \return 0 if successful; otherwise returns an error code.
 */
uint32_t flash_read_unique_id(uint32_t *pul_data, uint32_t ul_size)
{
   815b4:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint32_t uid_buf[4];
	uint32_t ul_idx;

	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   815b6:	2604      	movs	r6, #4
{
   815b8:	b087      	sub	sp, #28
   815ba:	4604      	mov	r4, r0
   815bc:	460d      	mov	r5, r1
	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   815be:	220f      	movs	r2, #15
   815c0:	210e      	movs	r1, #14
   815c2:	480c      	ldr	r0, [pc, #48]	; (815f4 <flash_read_unique_id+0x40>)
   815c4:	4f0c      	ldr	r7, [pc, #48]	; (815f8 <flash_read_unique_id+0x44>)
   815c6:	ab02      	add	r3, sp, #8
   815c8:	9600      	str	r6, [sp, #0]
   815ca:	47b8      	blx	r7
   815cc:	b970      	cbnz	r0, 815ec <flash_read_unique_id+0x38>
			EFC_FCMD_SPUI, uid_buf, 4)) {
		return FLASH_RC_ERROR;
	}

	if (ul_size > 4) {
   815ce:	2d04      	cmp	r5, #4
   815d0:	4626      	mov	r6, r4
   815d2:	462a      	mov	r2, r5
   815d4:	4604      	mov	r4, r0
   815d6:	bf28      	it	cs
   815d8:	2204      	movcs	r2, #4
		/* Only 4 dword to store unique ID */
		ul_size = 4;
	}

	for (ul_idx = 0; ul_idx < ul_size; ul_idx++) {
   815da:	b125      	cbz	r5, 815e6 <flash_read_unique_id+0x32>
		pul_data[ul_idx] = uid_buf[ul_idx];
   815dc:	4630      	mov	r0, r6
   815de:	4b07      	ldr	r3, [pc, #28]	; (815fc <flash_read_unique_id+0x48>)
   815e0:	a902      	add	r1, sp, #8
   815e2:	0092      	lsls	r2, r2, #2
   815e4:	4798      	blx	r3
	}

	return FLASH_RC_OK;
}
   815e6:	4620      	mov	r0, r4
   815e8:	b007      	add	sp, #28
   815ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return FLASH_RC_ERROR;
   815ec:	2410      	movs	r4, #16
}
   815ee:	4620      	mov	r0, r4
   815f0:	b007      	add	sp, #28
   815f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   815f4:	400e0800 	.word	0x400e0800
   815f8:	20000001 	.word	0x20000001
   815fc:	000838ad 	.word	0x000838ad

00081600 <usart_init_spi_master>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_spi_master(Usart *p_usart,
		const usart_spi_opt_t *p_usart_opt, uint32_t ul_mck)
{
   81600:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_status(Usart *p_usart)
{
	p_usart->US_CR = US_CR_RSTSTA;
   81604:	f44f 7c80 	mov.w	ip, #256	; 0x100
	p_usart->US_MR = 0;
   81608:	2400      	movs	r4, #0
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
   8160a:	f04f 0888 	mov.w	r8, #136	; 0x88
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
   8160e:	f04f 0e24 	mov.w	lr, #36	; 0x24
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_RTS_pin_high(Usart *p_usart)
{
	p_usart->US_CR = US_CR_RTSDIS;
   81612:	f44f 2700 	mov.w	r7, #524288	; 0x80000
	p_usart->US_CR = US_CR_DTRDIS;
   81616:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
   8161a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 816cc <usart_init_spi_master+0xcc>
	ul_reg_val = 0;
   8161e:	4d2c      	ldr	r5, [pc, #176]	; (816d0 <usart_init_spi_master+0xd0>)
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
   81620:	f8c0 90e4 	str.w	r9, [r0, #228]	; 0xe4
	ul_reg_val = 0;
   81624:	602c      	str	r4, [r5, #0]
	p_usart->US_MR = 0;
   81626:	6044      	str	r4, [r0, #4]
	p_usart->US_RTOR = 0;
   81628:	6244      	str	r4, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
   8162a:	6284      	str	r4, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
   8162c:	f8c0 8000 	str.w	r8, [r0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
   81630:	f8c0 e000 	str.w	lr, [r0]
	p_usart->US_CR = US_CR_RSTSTA;
   81634:	f8c0 c000 	str.w	ip, [r0]
	p_usart->US_CR = US_CR_RTSDIS;
   81638:	6007      	str	r7, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
   8163a:	6006      	str	r6, [r0, #0]
	if (!p_usart_opt || (p_usart_opt->spi_mode > SPI_MODE_3) ||
   8163c:	b1f1      	cbz	r1, 8167c <usart_init_spi_master+0x7c>
   8163e:	4603      	mov	r3, r0
   81640:	6888      	ldr	r0, [r1, #8]
   81642:	2803      	cmp	r0, #3
   81644:	d81a      	bhi.n	8167c <usart_init_spi_master+0x7c>
			usart_set_spi_master_baudrate(p_usart, p_usart_opt->baudrate,
   81646:	6808      	ldr	r0, [r1, #0]
	cd = (ul_mck + baudrate / 2) / baudrate;
   81648:	eb02 0250 	add.w	r2, r2, r0, lsr #1
   8164c:	fbb2 f2f0 	udiv	r2, r2, r0
	if (cd < MIN_CD_VALUE_SPI || cd > MAX_CD_VALUE) {
   81650:	f64f 70fb 	movw	r0, #65531	; 0xfffb
   81654:	1f14      	subs	r4, r2, #4
   81656:	4284      	cmp	r4, r0
   81658:	d810      	bhi.n	8167c <usart_init_spi_master+0x7c>
	p_usart->US_BRGR = cd << US_BRGR_CD_Pos;
   8165a:	621a      	str	r2, [r3, #32]
	ul_reg_val |= US_MR_USART_MODE_SPI_MASTER | US_MR_CLKO |
   8165c:	684a      	ldr	r2, [r1, #4]
	switch (p_usart_opt->spi_mode) {
   8165e:	e9d1 0402 	ldrd	r0, r4, [r1, #8]
	ul_reg_val |= US_MR_USART_MODE_SPI_MASTER | US_MR_CLKO |
   81662:	ea42 0104 	orr.w	r1, r2, r4
   81666:	f441 2280 	orr.w	r2, r1, #262144	; 0x40000
   8166a:	f042 020e 	orr.w	r2, r2, #14
   8166e:	602a      	str	r2, [r5, #0]
	switch (p_usart_opt->spi_mode) {
   81670:	2803      	cmp	r0, #3
   81672:	d80d      	bhi.n	81690 <usart_init_spi_master+0x90>
   81674:	e8df f000 	tbb	[pc, r0]
   81678:	121a2005 	.word	0x121a2005
		return 1;
   8167c:	2001      	movs	r0, #1
}
   8167e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		ul_reg_val &= ~US_MR_CPOL;
   81682:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
   81686:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
   8168a:	f442 7287 	orr.w	r2, r2, #270	; 0x10e
   8168e:	602a      	str	r2, [r5, #0]
	p_usart->US_MR |= ul_reg_val;
   81690:	6859      	ldr	r1, [r3, #4]
	return 0;
   81692:	2000      	movs	r0, #0
	p_usart->US_MR |= ul_reg_val;
   81694:	430a      	orrs	r2, r1
   81696:	605a      	str	r2, [r3, #4]
}
   81698:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		ul_reg_val |= US_MR_CPOL;
   8169c:	f421 7280 	bic.w	r2, r1, #256	; 0x100
   816a0:	f442 22a0 	orr.w	r2, r2, #327680	; 0x50000
   816a4:	f042 020e 	orr.w	r2, r2, #14
   816a8:	602a      	str	r2, [r5, #0]
		break;
   816aa:	e7f1      	b.n	81690 <usart_init_spi_master+0x90>
		ul_reg_val |= US_MR_CPOL;
   816ac:	f441 22a0 	orr.w	r2, r1, #327680	; 0x50000
   816b0:	f442 7287 	orr.w	r2, r2, #270	; 0x10e
   816b4:	602a      	str	r2, [r5, #0]
		break;
   816b6:	e7eb      	b.n	81690 <usart_init_spi_master+0x90>
		ul_reg_val &= ~US_MR_CPOL;
   816b8:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
   816bc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   816c0:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
   816c4:	f042 020e 	orr.w	r2, r2, #14
   816c8:	602a      	str	r2, [r5, #0]
		break;
   816ca:	e7e1      	b.n	81690 <usart_init_spi_master+0x90>
   816cc:	55534100 	.word	0x55534100
   816d0:	20001290 	.word	0x20001290

000816d4 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
   816d4:	2340      	movs	r3, #64	; 0x40
   816d6:	6003      	str	r3, [r0, #0]
}
   816d8:	4770      	bx	lr
   816da:	bf00      	nop

000816dc <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   816dc:	6943      	ldr	r3, [r0, #20]
   816de:	079b      	lsls	r3, r3, #30
   816e0:	d5fc      	bpl.n	816dc <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
   816e2:	f3c1 0108 	ubfx	r1, r1, #0, #9
   816e6:	61c1      	str	r1, [r0, #28]
}
   816e8:	2000      	movs	r0, #0
   816ea:	4770      	bx	lr

000816ec <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
   816ec:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   816f0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   816f4:	670a      	str	r2, [r1, #112]	; 0x70
}
   816f6:	4770      	bx	lr

000816f8 <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
   816f8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   816fc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   81700:	674a      	str	r2, [r1, #116]	; 0x74
}
   81702:	4770      	bx	lr

00081704 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
   81704:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81708:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   8170c:	678a      	str	r2, [r1, #120]	; 0x78
}
   8170e:	4770      	bx	lr

00081710 <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
   81710:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81714:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   81718:	f8c1 2080 	str.w	r2, [r1, #128]	; 0x80
}
   8171c:	4770      	bx	lr
   8171e:	bf00      	nop

00081720 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   81720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   81722:	4b12      	ldr	r3, [pc, #72]	; (8176c <pio_handler_process+0x4c>)
{
   81724:	4604      	mov	r4, r0
   81726:	460e      	mov	r6, r1
	status = pio_get_interrupt_status(p_pio);
   81728:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   8172a:	4b11      	ldr	r3, [pc, #68]	; (81770 <pio_handler_process+0x50>)
	status = pio_get_interrupt_status(p_pio);
   8172c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   8172e:	4620      	mov	r0, r4
   81730:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   81732:	4005      	ands	r5, r0
   81734:	d019      	beq.n	8176a <pio_handler_process+0x4a>
   81736:	4c0f      	ldr	r4, [pc, #60]	; (81774 <pio_handler_process+0x54>)
   81738:	f104 0760 	add.w	r7, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   8173c:	6823      	ldr	r3, [r4, #0]
   8173e:	42b3      	cmp	r3, r6
   81740:	d005      	beq.n	8174e <pio_handler_process+0x2e>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   81742:	42bc      	cmp	r4, r7
   81744:	d011      	beq.n	8176a <pio_handler_process+0x4a>
			if (gs_interrupt_sources[i].id == ul_id) {
   81746:	6923      	ldr	r3, [r4, #16]
		while (status != 0) {
   81748:	3410      	adds	r4, #16
			if (gs_interrupt_sources[i].id == ul_id) {
   8174a:	42b3      	cmp	r3, r6
   8174c:	d1f9      	bne.n	81742 <pio_handler_process+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8174e:	6861      	ldr	r1, [r4, #4]
   81750:	4229      	tst	r1, r5
   81752:	d0f6      	beq.n	81742 <pio_handler_process+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81754:	68e3      	ldr	r3, [r4, #12]
   81756:	4630      	mov	r0, r6
   81758:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8175a:	6863      	ldr	r3, [r4, #4]
			if (i >= MAX_INTERRUPT_SOURCES) {
   8175c:	42bc      	cmp	r4, r7
					status &= ~(gs_interrupt_sources[i].mask);
   8175e:	ea25 0503 	bic.w	r5, r5, r3
			if (i >= MAX_INTERRUPT_SOURCES) {
   81762:	d002      	beq.n	8176a <pio_handler_process+0x4a>
		while (status != 0) {
   81764:	3410      	adds	r4, #16
   81766:	2d00      	cmp	r5, #0
   81768:	d1e8      	bne.n	8173c <pio_handler_process+0x1c>
		if (pio_capture_handler) {
			pio_capture_handler(p_pio);
		}
	}
#endif
}
   8176a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8176c:	00083109 	.word	0x00083109
   81770:	0008310d 	.word	0x0008310d
   81774:	20001294 	.word	0x20001294

00081778 <PIOA_Handler>:
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
	pio_handler_process(PIOA, ID_PIOA);
   81778:	210a      	movs	r1, #10
   8177a:	4801      	ldr	r0, [pc, #4]	; (81780 <PIOA_Handler+0x8>)
   8177c:	4b01      	ldr	r3, [pc, #4]	; (81784 <PIOA_Handler+0xc>)
   8177e:	4718      	bx	r3
   81780:	400e0c00 	.word	0x400e0c00
   81784:	00081721 	.word	0x00081721

00081788 <PIOB_Handler>:
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
    pio_handler_process(PIOB, ID_PIOB);
   81788:	210b      	movs	r1, #11
   8178a:	4801      	ldr	r0, [pc, #4]	; (81790 <PIOB_Handler+0x8>)
   8178c:	4b01      	ldr	r3, [pc, #4]	; (81794 <PIOB_Handler+0xc>)
   8178e:	4718      	bx	r3
   81790:	400e0e00 	.word	0x400e0e00
   81794:	00081721 	.word	0x00081721

00081798 <PIOC_Handler>:
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
	pio_handler_process(PIOC, ID_PIOC);
   81798:	210c      	movs	r1, #12
   8179a:	4801      	ldr	r0, [pc, #4]	; (817a0 <PIOC_Handler+0x8>)
   8179c:	4b01      	ldr	r3, [pc, #4]	; (817a4 <PIOC_Handler+0xc>)
   8179e:	4718      	bx	r3
   817a0:	400e1000 	.word	0x400e1000
   817a4:	00081721 	.word	0x00081721

000817a8 <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, bool b_abort, uint8_t ep_num)
{
	if (ptr_job->busy == false) {
   817a8:	f890 c014 	ldrb.w	ip, [r0, #20]
{
   817ac:	4603      	mov	r3, r0
	if (ptr_job->busy == false) {
   817ae:	f01c 0f01 	tst.w	ip, #1
   817b2:	d016      	beq.n	817e2 <udd_ep_finish_job+0x3a>
{
   817b4:	b430      	push	{r4, r5}
		return; // No on-going job
	}
	ptr_job->busy = false;
	dbg_print("JobE%d ", b_abort);
	if (NULL == ptr_job->call_trans) {
   817b6:	6804      	ldr	r4, [r0, #0]
	ptr_job->busy = false;
   817b8:	f36f 0c00 	bfc	ip, #0, #1
   817bc:	f880 c014 	strb.w	ip, [r0, #20]
	if (NULL == ptr_job->call_trans) {
   817c0:	b16c      	cbz	r4, 817de <udd_ep_finish_job+0x36>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_in(ep_num)) {
   817c2:	4d08      	ldr	r5, [pc, #32]	; (817e4 <udd_ep_finish_job+0x3c>)
   817c4:	4608      	mov	r0, r1
   817c6:	f102 0108 	add.w	r1, r2, #8
   817ca:	0149      	lsls	r1, r1, #5
   817cc:	5869      	ldr	r1, [r5, r1]
   817ce:	0709      	lsls	r1, r1, #28
		ep_num |= USB_EP_DIR_IN;
   817d0:	bf48      	it	mi
   817d2:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   817d6:	6899      	ldr	r1, [r3, #8]
   817d8:	4623      	mov	r3, r4
			UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}
   817da:	bc30      	pop	{r4, r5}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   817dc:	4718      	bx	r3
}
   817de:	bc30      	pop	{r4, r5}
   817e0:	4770      	bx	lr
   817e2:	4770      	bx	lr
   817e4:	400a4000 	.word	0x400a4000

000817e8 <udd_ep_trans_done>:

static void udd_ep_trans_done(udd_ep_id_t ep)
{
   817e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	udd_ep_job_t *ptr_job;
	iram_size_t next_trans;
	irqflags_t flags;

	// Get job corresponding at endpoint
	ptr_job = &udd_ep_job[ep - 1];
   817ec:	1e43      	subs	r3, r0, #1

	if (!ptr_job->busy) {
   817ee:	4c66      	ldr	r4, [pc, #408]	; (81988 <udd_ep_trans_done+0x1a0>)
   817f0:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   817f4:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
   817f8:	f891 c014 	ldrb.w	ip, [r1, #20]
   817fc:	f01c 0f01 	tst.w	ip, #1
   81800:	d039      	beq.n	81876 <udd_ep_trans_done+0x8e>
   81802:	4602      	mov	r2, r0
		return; // No job is running, then ignore it (system error)
	}

	if (ptr_job->buf_cnt != ptr_job->buf_size) {
   81804:	e9d1 5002 	ldrd	r5, r0, [r1, #8]
   81808:	42a8      	cmp	r0, r5
   8180a:	ea4f 0643 	mov.w	r6, r3, lsl #1
   8180e:	d034      	beq.n	8187a <udd_ep_trans_done+0x92>
		// Need to send or receive other data
		next_trans = ptr_job->buf_size - ptr_job->buf_cnt;
   81810:	1a2d      	subs	r5, r5, r0

		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
   81812:	f5b5 3f80 	cmp.w	r5, #65536	; 0x10000
   81816:	ea4f 1c42 	mov.w	ip, r2, lsl #5
   8181a:	d847      	bhi.n	818ac <udd_ep_trans_done+0xc4>
			next_trans = UDD_ENDPOINT_MAX_TRANS;

			// Set 0 to transfer the maximum
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(0);
		} else {
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
   8181c:	f10c 2e40 	add.w	lr, ip, #1073758208	; 0x40004000
   81820:	f50e 2e20 	add.w	lr, lr, #655360	; 0xa0000
		}
		if (Is_udd_endpoint_in(ep)) {
   81824:	f8de 8100 	ldr.w	r8, [lr, #256]	; 0x100
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
   81828:	042f      	lsls	r7, r5, #16
		if (Is_udd_endpoint_in(ep)) {
   8182a:	f018 0f08 	tst.w	r8, #8
   8182e:	d072      	beq.n	81916 <udd_ep_trans_done+0x12e>
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   81830:	f8de 8100 	ldr.w	r8, [lr, #256]	; 0x100
   81834:	f04f 0e08 	mov.w	lr, #8
   81838:	f008 0807 	and.w	r8, r8, #7
   8183c:	fa0e fe08 	lsl.w	lr, lr, r8
   81840:	f10e 3eff 	add.w	lr, lr, #4294967295
   81844:	ea1e 0f05 	tst.w	lr, r5
   81848:	f000 809a 	beq.w	81980 <udd_ep_trans_done+0x198>
				// Enable short packet option
				// else the DMA transfer is accepted
				// and interrupt DMA valid but nothing is sent.
				udd_dma_ctrl |= UDPHS_DMACONTROL_END_B_EN;
				// No need to request another ZLP
				ptr_job->b_shortpacket = false;
   8184c:	f891 e014 	ldrb.w	lr, [r1, #20]
			}
		}

		// Start USB DMA to fill or read fifo of the selected endpoint
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   81850:	f047 0729 	orr.w	r7, r7, #41	; 0x29
				ptr_job->b_shortpacket = false;
   81854:	f36f 0e41 	bfc	lr, #1, #1
   81858:	f881 e014 	strb.w	lr, [r1, #20]
   8185c:	e033      	b.n	818c6 <udd_ep_trans_done+0xde>
	if (Is_udd_endpoint_in(ep)) {
		if (ptr_job->b_shortpacket) {
			dbg_print("zlp ");
			// Need to send a ZLP (No possible with USB DMA)
			// enable interrupt to wait a free bank to sent ZLP
			udd_enable_tx_pkt_ready_interrupt(ep);
   8185e:	f44f 6400 	mov.w	r4, #2048	; 0x800
			udd_enable_endpoint_interrupt(ep);
   81862:	f44f 7380 	mov.w	r3, #256	; 0x100
   81866:	4849      	ldr	r0, [pc, #292]	; (8198c <udd_ep_trans_done+0x1a4>)
			udd_enable_tx_pkt_ready_interrupt(ep);
   81868:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
			udd_enable_endpoint_interrupt(ep);
   8186c:	fa03 f202 	lsl.w	r2, r3, r2
   81870:	6903      	ldr	r3, [r0, #16]
   81872:	431a      	orrs	r2, r3
   81874:	6102      	str	r2, [r0, #16]
			return;
		}
	}
	// Call callback to signal end of transfer
	udd_ep_finish_job(ptr_job, false, ep);
}
   81876:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8187a:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	if (Is_udd_endpoint_in(ep)) {
   8187e:	f10c 2140 	add.w	r1, ip, #1073758208	; 0x40004000
   81882:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   81886:	f8d1 0100 	ldr.w	r0, [r1, #256]	; 0x100
   8188a:	0700      	lsls	r0, r0, #28
   8188c:	d505      	bpl.n	8189a <udd_ep_trans_done+0xb2>
		if (ptr_job->b_shortpacket) {
   8188e:	18f0      	adds	r0, r6, r3
   81890:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
   81894:	7d00      	ldrb	r0, [r0, #20]
   81896:	0787      	lsls	r7, r0, #30
   81898:	d4e1      	bmi.n	8185e <udd_ep_trans_done+0x76>
	udd_ep_finish_job(ptr_job, false, ep);
   8189a:	4d3d      	ldr	r5, [pc, #244]	; (81990 <udd_ep_trans_done+0x1a8>)
	ptr_job = &udd_ep_job[ep - 1];
   8189c:	18f0      	adds	r0, r6, r3
	udd_ep_finish_job(ptr_job, false, ep);
   8189e:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
   818a2:	462b      	mov	r3, r5
}
   818a4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
	udd_ep_finish_job(ptr_job, false, ep);
   818a8:	2100      	movs	r1, #0
   818aa:	4718      	bx	r3
		if (Is_udd_endpoint_in(ep)) {
   818ac:	f10c 2140 	add.w	r1, ip, #1073758208	; 0x40004000
   818b0:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   818b4:	f8d1 5100 	ldr.w	r5, [r1, #256]	; 0x100
   818b8:	072d      	lsls	r5, r5, #28
   818ba:	d535      	bpl.n	81928 <udd_ep_trans_done+0x140>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   818bc:	2721      	movs	r7, #33	; 0x21
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   818be:	f44f 3580 	mov.w	r5, #65536	; 0x10000
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   818c2:	f8d1 1100 	ldr.w	r1, [r1, #256]	; 0x100
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
   818c6:	eb06 0e03 	add.w	lr, r6, r3
   818ca:	eb04 0ece 	add.w	lr, r4, lr, lsl #3
   818ce:	f8de 1004 	ldr.w	r1, [lr, #4]
   818d2:	4408      	add	r0, r1
   818d4:	492f      	ldr	r1, [pc, #188]	; (81994 <udd_ep_trans_done+0x1ac>)
   818d6:	eb01 1102 	add.w	r1, r1, r2, lsl #4
   818da:	6048      	str	r0, [r1, #4]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   818dc:	f3ef 8810 	mrs	r8, PRIMASK
  __ASM volatile ("cpsid i");
   818e0:	b672      	cpsid	i
   818e2:	f3bf 8f5f 	dmb	sy
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = cpu_irq_is_enabled();
	cpu_irq_disable();
   818e6:	f04f 0900 	mov.w	r9, #0
   818ea:	482b      	ldr	r0, [pc, #172]	; (81998 <udd_ep_trans_done+0x1b0>)
   818ec:	f880 9000 	strb.w	r9, [r0]
		if (!(udd_endpoint_dma_get_status(ep)
   818f0:	f8d1 900c 	ldr.w	r9, [r1, #12]
   818f4:	f019 0f10 	tst.w	r9, #16
   818f8:	d020      	beq.n	8193c <udd_ep_trans_done+0x154>
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
   818fa:	f1b8 0f00 	cmp.w	r8, #0
   818fe:	d104      	bne.n	8190a <udd_ep_trans_done+0x122>
		cpu_irq_enable();
   81900:	2101      	movs	r1, #1
   81902:	7001      	strb	r1, [r0, #0]
   81904:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81908:	b662      	cpsie	i
		ptr_job->buf_size = ptr_job->buf_cnt;
   8190a:	18f1      	adds	r1, r6, r3
   8190c:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
   81910:	68c8      	ldr	r0, [r1, #12]
   81912:	6088      	str	r0, [r1, #8]
   81914:	e7b3      	b.n	8187e <udd_ep_trans_done+0x96>
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   81916:	f8de 1100 	ldr.w	r1, [lr, #256]	; 0x100
   8191a:	f3c1 1101 	ubfx	r1, r1, #4, #2
   8191e:	2901      	cmp	r1, #1
   81920:	d025      	beq.n	8196e <udd_ep_trans_done+0x186>
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   81922:	f047 0735 	orr.w	r7, r7, #53	; 0x35
   81926:	e7ce      	b.n	818c6 <udd_ep_trans_done+0xde>
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   81928:	f8d1 5100 	ldr.w	r5, [r1, #256]	; 0x100
   8192c:	f3c5 1501 	ubfx	r5, r5, #4, #2
   81930:	2d01      	cmp	r5, #1
   81932:	d0c3      	beq.n	818bc <udd_ep_trans_done+0xd4>
   81934:	2735      	movs	r7, #53	; 0x35
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   81936:	f44f 3580 	mov.w	r5, #65536	; 0x10000
				udd_dma_ctrl |= UDPHS_DMACONTROL_END_TR_IT
   8193a:	e7c4      	b.n	818c6 <udd_ep_trans_done+0xde>
			udd_enable_endpoint_dma_interrupt(ep);
   8193c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
			udd_endpoint_dma_set_control(ep, udd_dma_ctrl);
   81940:	608f      	str	r7, [r1, #8]
			udd_enable_endpoint_dma_interrupt(ep);
   81942:	fa02 f303 	lsl.w	r3, r2, r3
			ptr_job->buf_cnt += next_trans;
   81946:	f8de 200c 	ldr.w	r2, [lr, #12]
			ptr_job->buf_load = next_trans;
   8194a:	f8ce 5010 	str.w	r5, [lr, #16]
			ptr_job->buf_cnt += next_trans;
   8194e:	4415      	add	r5, r2
			udd_enable_endpoint_dma_interrupt(ep);
   81950:	4a0e      	ldr	r2, [pc, #56]	; (8198c <udd_ep_trans_done+0x1a4>)
			ptr_job->buf_cnt += next_trans;
   81952:	f8ce 500c 	str.w	r5, [lr, #12]
			udd_enable_endpoint_dma_interrupt(ep);
   81956:	6911      	ldr	r1, [r2, #16]
   81958:	430b      	orrs	r3, r1
   8195a:	6113      	str	r3, [r2, #16]
	if (cpu_irq_is_enabled_flags(flags))
   8195c:	f1b8 0f00 	cmp.w	r8, #0
   81960:	d189      	bne.n	81876 <udd_ep_trans_done+0x8e>
		cpu_irq_enable();
   81962:	2301      	movs	r3, #1
   81964:	7003      	strb	r3, [r0, #0]
   81966:	f3bf 8f5f 	dmb	sy
   8196a:	b662      	cpsie	i
}
   8196c:	e783      	b.n	81876 <udd_ep_trans_done+0x8e>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   8196e:	f8de 1100 	ldr.w	r1, [lr, #256]	; 0x100
   81972:	f001 0e07 	and.w	lr, r1, #7
   81976:	2108      	movs	r1, #8
   81978:	fa01 f10e 	lsl.w	r1, r1, lr
   8197c:	42a9      	cmp	r1, r5
   8197e:	d2d0      	bcs.n	81922 <udd_ep_trans_done+0x13a>
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   81980:	f047 0721 	orr.w	r7, r7, #33	; 0x21
   81984:	e79f      	b.n	818c6 <udd_ep_trans_done+0xde>
   81986:	bf00      	nop
   81988:	2000130c 	.word	0x2000130c
   8198c:	400a4000 	.word	0x400a4000
   81990:	000817a9 	.word	0x000817a9
   81994:	400a4300 	.word	0x400a4300
   81998:	2000030c 	.word	0x2000030c

0008199c <udd_ctrl_in_sent>:
{
   8199c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   819a0:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   819a4:	b672      	cpsid	i
   819a6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   819aa:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   819ac:	f44f 6180 	mov.w	r1, #1024	; 0x400
   819b0:	4d59      	ldr	r5, [pc, #356]	; (81b18 <udd_ctrl_in_sent+0x17c>)
   819b2:	4a5a      	ldr	r2, [pc, #360]	; (81b1c <udd_ctrl_in_sent+0x180>)
   819b4:	7028      	strb	r0, [r5, #0]
   819b6:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   819ba:	b923      	cbnz	r3, 819c6 <udd_ctrl_in_sent+0x2a>
		cpu_irq_enable();
   819bc:	2301      	movs	r3, #1
   819be:	702b      	strb	r3, [r5, #0]
   819c0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   819c4:	b662      	cpsie	i
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   819c6:	f8df 8158 	ldr.w	r8, [pc, #344]	; 81b20 <udd_ctrl_in_sent+0x184>
   819ca:	f898 3000 	ldrb.w	r3, [r8]
   819ce:	2b03      	cmp	r3, #3
   819d0:	d063      	beq.n	81a9a <udd_ctrl_in_sent+0xfe>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   819d2:	4f54      	ldr	r7, [pc, #336]	; (81b24 <udd_ctrl_in_sent+0x188>)
   819d4:	4e54      	ldr	r6, [pc, #336]	; (81b28 <udd_ctrl_in_sent+0x18c>)
   819d6:	883a      	ldrh	r2, [r7, #0]
   819d8:	89b4      	ldrh	r4, [r6, #12]
   819da:	1aa4      	subs	r4, r4, r2
   819dc:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
   819de:	2c00      	cmp	r4, #0
   819e0:	d038      	beq.n	81a54 <udd_ctrl_in_sent+0xb8>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   819e2:	4613      	mov	r3, r2
   819e4:	f8df 9144 	ldr.w	r9, [pc, #324]	; 81b2c <udd_ctrl_in_sent+0x190>
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
   819e8:	2c3f      	cmp	r4, #63	; 0x3f
		b_shortpacket = false;
   819ea:	bf86      	itte	hi
   819ec:	2200      	movhi	r2, #0
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
   819ee:	2440      	movhi	r4, #64	; 0x40
		b_shortpacket = true;
   819f0:	2201      	movls	r2, #1
   819f2:	f889 2000 	strb.w	r2, [r9]
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   819f6:	68b2      	ldr	r2, [r6, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   819f8:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   819fc:	b672      	cpsid	i
   819fe:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81a02:	2100      	movs	r1, #0
   81a04:	7029      	strb	r1, [r5, #0]
	if (Is_udd_out_received(0)) {
   81a06:	4945      	ldr	r1, [pc, #276]	; (81b1c <udd_ctrl_in_sent+0x180>)
   81a08:	f8d1 111c 	ldr.w	r1, [r1, #284]	; 0x11c
   81a0c:	0589      	lsls	r1, r1, #22
   81a0e:	d439      	bmi.n	81a84 <udd_ctrl_in_sent+0xe8>
	for (i = 0; i < nb_remain; i++) {
   81a10:	b154      	cbz	r4, 81a28 <udd_ctrl_in_sent+0x8c>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81a12:	441a      	add	r2, r3
	ptr_dest = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   81a14:	4b46      	ldr	r3, [pc, #280]	; (81b30 <udd_ctrl_in_sent+0x194>)
		*ptr_dest++ = *ptr_src++;
   81a16:	4618      	mov	r0, r3
   81a18:	3301      	adds	r3, #1
   81a1a:	f812 cb01 	ldrb.w	ip, [r2], #1
	for (i = 0; i < nb_remain; i++) {
   81a1e:	b2d9      	uxtb	r1, r3
   81a20:	42a1      	cmp	r1, r4
		*ptr_dest++ = *ptr_src++;
   81a22:	f880 c000 	strb.w	ip, [r0]
	for (i = 0; i < nb_remain; i++) {
   81a26:	d3f6      	bcc.n	81a16 <udd_ctrl_in_sent+0x7a>
	udd_ack_in_send(0);
   81a28:	f44f 6280 	mov.w	r2, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   81a2c:	f44f 6100 	mov.w	r1, #2048	; 0x800
	udd_ctrl_payload_buf_cnt += nb_remain;
   81a30:	883b      	ldrh	r3, [r7, #0]
   81a32:	441c      	add	r4, r3
	udd_ack_in_send(0);
   81a34:	4b39      	ldr	r3, [pc, #228]	; (81b1c <udd_ctrl_in_sent+0x180>)
	udd_ctrl_payload_buf_cnt += nb_remain;
   81a36:	803c      	strh	r4, [r7, #0]
	udd_ack_in_send(0);
   81a38:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   81a3c:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   81a40:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   81a44:	b926      	cbnz	r6, 81a50 <udd_ctrl_in_sent+0xb4>
		cpu_irq_enable();
   81a46:	2301      	movs	r3, #1
   81a48:	702b      	strb	r3, [r5, #0]
   81a4a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81a4e:	b662      	cpsie	i
}
   81a50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   81a54:	4937      	ldr	r1, [pc, #220]	; (81b34 <udd_ctrl_in_sent+0x198>)
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   81a56:	88f0      	ldrh	r0, [r6, #6]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   81a58:	880b      	ldrh	r3, [r1, #0]
   81a5a:	4413      	add	r3, r2
   81a5c:	b29b      	uxth	r3, r3
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   81a5e:	4298      	cmp	r0, r3
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   81a60:	800b      	strh	r3, [r1, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   81a62:	d040      	beq.n	81ae6 <udd_ctrl_in_sent+0x14a>
				|| b_shortpacket) {
   81a64:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 81b2c <udd_ctrl_in_sent+0x190>
   81a68:	f899 a000 	ldrb.w	sl, [r9]
   81a6c:	f1ba 0f00 	cmp.w	sl, #0
   81a70:	d139      	bne.n	81ae6 <udd_ctrl_in_sent+0x14a>
		if ((!udd_g_ctrlreq.over_under_run)
   81a72:	6973      	ldr	r3, [r6, #20]
   81a74:	2b00      	cmp	r3, #0
   81a76:	d033      	beq.n	81ae0 <udd_ctrl_in_sent+0x144>
				|| (!udd_g_ctrlreq.over_under_run())) {
   81a78:	4798      	blx	r3
   81a7a:	2800      	cmp	r0, #0
   81a7c:	d147      	bne.n	81b0e <udd_ctrl_in_sent+0x172>
		b_shortpacket = true;
   81a7e:	2201      	movs	r2, #1
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81a80:	883b      	ldrh	r3, [r7, #0]
   81a82:	e7b6      	b.n	819f2 <udd_ctrl_in_sent+0x56>
	if (cpu_irq_is_enabled_flags(flags))
   81a84:	b926      	cbnz	r6, 81a90 <udd_ctrl_in_sent+0xf4>
		cpu_irq_enable();
   81a86:	2301      	movs	r3, #1
   81a88:	702b      	strb	r3, [r5, #0]
   81a8a:	f3bf 8f5f 	dmb	sy
   81a8e:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   81a90:	2304      	movs	r3, #4
   81a92:	f888 3000 	strb.w	r3, [r8]
}
   81a96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	if (udd_g_ctrlreq.callback) {
   81a9a:	4e23      	ldr	r6, [pc, #140]	; (81b28 <udd_ctrl_in_sent+0x18c>)
   81a9c:	6933      	ldr	r3, [r6, #16]
   81a9e:	b103      	cbz	r3, 81aa2 <udd_ctrl_in_sent+0x106>
		udd_g_ctrlreq.callback();
   81aa0:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81aa2:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81aa6:	b672      	cpsid	i
   81aa8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81aac:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   81aae:	f44f 6180 	mov.w	r1, #1024	; 0x400
   81ab2:	4a1a      	ldr	r2, [pc, #104]	; (81b1c <udd_ctrl_in_sent+0x180>)
   81ab4:	7028      	strb	r0, [r5, #0]
   81ab6:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81aba:	b923      	cbnz	r3, 81ac6 <udd_ctrl_in_sent+0x12a>
		cpu_irq_enable();
   81abc:	2301      	movs	r3, #1
   81abe:	702b      	strb	r3, [r5, #0]
   81ac0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81ac4:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   81ac6:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   81ac8:	f44f 7100 	mov.w	r1, #512	; 0x200
   81acc:	4a13      	ldr	r2, [pc, #76]	; (81b1c <udd_ctrl_in_sent+0x180>)
   81ace:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.over_under_run = NULL;
   81ad2:	e9c6 3304 	strd	r3, r3, [r6, #16]
	udd_g_ctrlreq.payload_size = 0;
   81ad6:	81b3      	strh	r3, [r6, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81ad8:	f888 3000 	strb.w	r3, [r8]
}
   81adc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81ae0:	4613      	mov	r3, r2
		b_shortpacket = true;
   81ae2:	2201      	movs	r2, #1
   81ae4:	e785      	b.n	819f2 <udd_ctrl_in_sent+0x56>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   81ae6:	2304      	movs	r3, #4
   81ae8:	f888 3000 	strb.w	r3, [r8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81aec:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   81af0:	b672      	cpsid	i
   81af2:	f3bf 8f5f 	dmb	sy
	udd_ack_nak_in(0);
   81af6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	cpu_irq_disable();
   81afa:	2000      	movs	r0, #0
   81afc:	4b07      	ldr	r3, [pc, #28]	; (81b1c <udd_ctrl_in_sent+0x180>)
   81afe:	7028      	strb	r0, [r5, #0]
   81b00:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_enable_nak_in_interrupt(0);
   81b04:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   81b08:	2900      	cmp	r1, #0
   81b0a:	d1a1      	bne.n	81a50 <udd_ctrl_in_sent+0xb4>
   81b0c:	e79b      	b.n	81a46 <udd_ctrl_in_sent+0xaa>
			udd_ctrl_payload_buf_cnt = 0;
   81b0e:	803c      	strh	r4, [r7, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
   81b10:	4653      	mov	r3, sl
   81b12:	89b4      	ldrh	r4, [r6, #12]
   81b14:	e768      	b.n	819e8 <udd_ctrl_in_sent+0x4c>
   81b16:	bf00      	nop
   81b18:	2000030c 	.word	0x2000030c
   81b1c:	400a4000 	.word	0x400a4000
   81b20:	2000130a 	.word	0x2000130a
   81b24:	20001306 	.word	0x20001306
   81b28:	2000133c 	.word	0x2000133c
   81b2c:	20001304 	.word	0x20001304
   81b30:	20180000 	.word	0x20180000
   81b34:	20001308 	.word	0x20001308

00081b38 <UDPHS_Handler>:
{
   81b38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udd_enable_periph_ck();
   81b3c:	4b9b      	ldr	r3, [pc, #620]	; (81dac <UDPHS_Handler+0x274>)
   81b3e:	201d      	movs	r0, #29
   81b40:	4798      	blx	r3
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
   81b42:	4b9b      	ldr	r3, [pc, #620]	; (81db0 <UDPHS_Handler+0x278>)
   81b44:	4798      	blx	r3
   81b46:	b928      	cbnz	r0, 81b54 <UDPHS_Handler+0x1c>
   81b48:	4b9a      	ldr	r3, [pc, #616]	; (81db4 <UDPHS_Handler+0x27c>)
   81b4a:	695b      	ldr	r3, [r3, #20]
   81b4c:	f013 0302 	ands.w	r3, r3, #2
   81b50:	f000 8096 	beq.w	81c80 <UDPHS_Handler+0x148>
	if (Is_udd_sof()) {
   81b54:	4b97      	ldr	r3, [pc, #604]	; (81db4 <UDPHS_Handler+0x27c>)
   81b56:	695a      	ldr	r2, [r3, #20]
   81b58:	0712      	lsls	r2, r2, #28
   81b5a:	f100 8082 	bmi.w	81c62 <UDPHS_Handler+0x12a>
	if (Is_udd_msof()) {
   81b5e:	695a      	ldr	r2, [r3, #20]
   81b60:	0756      	lsls	r6, r2, #29
   81b62:	f100 8087 	bmi.w	81c74 <UDPHS_Handler+0x13c>
	uint32_t status = udd_get_endpoint_status(0);
   81b66:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
	if (!Is_udd_endpoint_interrupt(0)) {
   81b6a:	6959      	ldr	r1, [r3, #20]
   81b6c:	05cd      	lsls	r5, r1, #23
   81b6e:	d521      	bpl.n	81bb4 <UDPHS_Handler+0x7c>
	udd_disable_nak_in_interrupt(0);
   81b70:	f44f 4080 	mov.w	r0, #16384	; 0x4000
	udd_disable_nak_out_interrupt(0);
   81b74:	f44f 4100 	mov.w	r1, #32768	; 0x8000
	if (Is_udd_endpoint_status_setup_received(status)) {
   81b78:	04d4      	lsls	r4, r2, #19
	udd_disable_nak_in_interrupt(0);
   81b7a:	f8c3 0108 	str.w	r0, [r3, #264]	; 0x108
	udd_disable_nak_out_interrupt(0);
   81b7e:	f8c3 1108 	str.w	r1, [r3, #264]	; 0x108
	if (Is_udd_endpoint_status_setup_received(status)) {
   81b82:	f100 80ac 	bmi.w	81cde <UDPHS_Handler+0x1a6>
	if (Is_udd_endpoint_status_in_sent(status)
   81b86:	0550      	lsls	r0, r2, #21
   81b88:	d504      	bpl.n	81b94 <UDPHS_Handler+0x5c>
			&& Is_udd_in_send_interrupt_enabled(0)) {
   81b8a:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   81b8e:	0559      	lsls	r1, r3, #21
   81b90:	f100 824d 	bmi.w	8202e <UDPHS_Handler+0x4f6>
	if (Is_udd_endpoint_status_out_received(status)) {
   81b94:	0593      	lsls	r3, r2, #22
   81b96:	f100 8147 	bmi.w	81e28 <UDPHS_Handler+0x2f0>
	if (Is_udd_endpoint_status_stall(status)) {
   81b9a:	0497      	lsls	r7, r2, #18
   81b9c:	d504      	bpl.n	81ba8 <UDPHS_Handler+0x70>
		udd_ack_stall(0);
   81b9e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   81ba2:	4b84      	ldr	r3, [pc, #528]	; (81db4 <UDPHS_Handler+0x27c>)
   81ba4:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	if (Is_udd_endpoint_status_nak_out(status)) {
   81ba8:	0416      	lsls	r6, r2, #16
   81baa:	f100 816d 	bmi.w	81e88 <UDPHS_Handler+0x350>
	if (Is_udd_endpoint_status_nak_in(status)) {
   81bae:	0454      	lsls	r4, r2, #17
   81bb0:	f100 80cb 	bmi.w	81d4a <UDPHS_Handler+0x212>
	uint8_t *ptr_src = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   81bb4:	2301      	movs	r3, #1
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Get job corresponding at endpoint
		ptr_job = &udd_ep_job[ep - 1];

		// Check DMA event
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81bb6:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
			}
			udd_ep_trans_done(ep);
			return true;
		}
		// Check empty bank interrupt event
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81bba:	f44f 7680 	mov.w	r6, #256	; 0x100
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81bbe:	4a7d      	ldr	r2, [pc, #500]	; (81db4 <UDPHS_Handler+0x27c>)
   81bc0:	6910      	ldr	r0, [r2, #16]
   81bc2:	f103 3eff 	add.w	lr, r3, #4294967295
   81bc6:	fa05 f10e 	lsl.w	r1, r5, lr
   81bca:	4208      	tst	r0, r1
   81bcc:	b2df      	uxtb	r7, r3
   81bce:	d003      	beq.n	81bd8 <UDPHS_Handler+0xa0>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   81bd0:	6950      	ldr	r0, [r2, #20]
   81bd2:	4201      	tst	r1, r0
   81bd4:	f040 80ce 	bne.w	81d74 <UDPHS_Handler+0x23c>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81bd8:	6911      	ldr	r1, [r2, #16]
   81bda:	fa06 f003 	lsl.w	r0, r6, r3
   81bde:	4201      	tst	r1, r0
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   81be0:	eb02 1443 	add.w	r4, r2, r3, lsl #5
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81be4:	d017      	beq.n	81c16 <UDPHS_Handler+0xde>
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   81be6:	f8d4 110c 	ldr.w	r1, [r4, #268]	; 0x10c
				// One bank is free then send a ZLP
				udd_raise_tx_pkt_ready(ep);
				udd_ep_finish_job(ptr_job, false, ep);
				return true;
			}
			if (Is_udd_bank_interrupt_enabled(ep)
   81bea:	46a4      	mov	ip, r4
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   81bec:	f411 6f00 	tst.w	r1, #2048	; 0x800
   81bf0:	d005      	beq.n	81bfe <UDPHS_Handler+0xc6>
					&& !Is_udd_tx_pkt_ready(ep)) {
   81bf2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
   81bf6:	f411 6100 	ands.w	r1, r1, #2048	; 0x800
   81bfa:	f000 8335 	beq.w	82268 <UDPHS_Handler+0x730>
			if (Is_udd_bank_interrupt_enabled(ep)
   81bfe:	f8dc 110c 	ldr.w	r1, [ip, #268]	; 0x10c
   81c02:	034f      	lsls	r7, r1, #13
   81c04:	d507      	bpl.n	81c16 <UDPHS_Handler+0xde>
					&& (0 == udd_nb_busy_bank(ep))) {
   81c06:	f8dc 111c 	ldr.w	r1, [ip, #284]	; 0x11c
   81c0a:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   81c0e:	f3c1 4481 	ubfx	r4, r1, #18, #2
   81c12:	f000 80e9 	beq.w	81de8 <UDPHS_Handler+0x2b0>
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   81c16:	2b02      	cmp	r3, #2
   81c18:	d139      	bne.n	81c8e <UDPHS_Handler+0x156>
	if (Is_udd_reset()) {
   81c1a:	4966      	ldr	r1, [pc, #408]	; (81db4 <UDPHS_Handler+0x27c>)
   81c1c:	694c      	ldr	r4, [r1, #20]
   81c1e:	f014 0410 	ands.w	r4, r4, #16
   81c22:	f040 817e 	bne.w	81f22 <UDPHS_Handler+0x3ea>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
   81c26:	690a      	ldr	r2, [r1, #16]
   81c28:	0790      	lsls	r0, r2, #30
   81c2a:	d535      	bpl.n	81c98 <UDPHS_Handler+0x160>
   81c2c:	694a      	ldr	r2, [r1, #20]
   81c2e:	0792      	lsls	r2, r2, #30
   81c30:	d532      	bpl.n	81c98 <UDPHS_Handler+0x160>
		udd_ack_wake_up();
   81c32:	2220      	movs	r2, #32
   81c34:	618a      	str	r2, [r1, #24]
		udd_disable_suspend_interrupt();
   81c36:	690a      	ldr	r2, [r1, #16]
		udd_disable_periph_ck();
   81c38:	201d      	movs	r0, #29
		udd_disable_suspend_interrupt();
   81c3a:	f022 0202 	bic.w	r2, r2, #2
   81c3e:	610a      	str	r2, [r1, #16]
		udd_enable_wake_up_interrupt();
   81c40:	690a      	ldr	r2, [r1, #16]
		udd_disable_periph_ck();
   81c42:	4d5d      	ldr	r5, [pc, #372]	; (81db8 <UDPHS_Handler+0x280>)
		udd_enable_wake_up_interrupt();
   81c44:	f042 0220 	orr.w	r2, r2, #32
   81c48:	610a      	str	r2, [r1, #16]
		udd_ack_suspend();
   81c4a:	618b      	str	r3, [r1, #24]
		udd_disable_periph_ck();
   81c4c:	47a8      	blx	r5
		UDC_SUSPEND_EVENT();
   81c4e:	4b5b      	ldr	r3, [pc, #364]	; (81dbc <UDPHS_Handler+0x284>)
   81c50:	4798      	blx	r3
	if (!b_idle && udd_b_idle) {
   81c52:	4a5b      	ldr	r2, [pc, #364]	; (81dc0 <UDPHS_Handler+0x288>)
   81c54:	7813      	ldrb	r3, [r2, #0]
   81c56:	2b00      	cmp	r3, #0
   81c58:	f040 82bf 	bne.w	821da <UDPHS_Handler+0x6a2>
	udd_b_idle = b_idle;
   81c5c:	2300      	movs	r3, #0
   81c5e:	7013      	strb	r3, [r2, #0]
		goto udd_interrupt_end;
   81c60:	e013      	b.n	81c8a <UDPHS_Handler+0x152>
		udd_ack_sof();
   81c62:	2208      	movs	r2, #8
   81c64:	619a      	str	r2, [r3, #24]
		if (Is_udd_full_speed_mode()) {
   81c66:	695b      	ldr	r3, [r3, #20]
   81c68:	07df      	lsls	r7, r3, #31
   81c6a:	d512      	bpl.n	81c92 <UDPHS_Handler+0x15a>
}
   81c6c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_SOF_EVENT();
   81c70:	4b54      	ldr	r3, [pc, #336]	; (81dc4 <UDPHS_Handler+0x28c>)
   81c72:	4718      	bx	r3
		udd_ack_msof();
   81c74:	2104      	movs	r1, #4
   81c76:	6199      	str	r1, [r3, #24]
		udc_sof_notify();
   81c78:	4a53      	ldr	r2, [pc, #332]	; (81dc8 <UDPHS_Handler+0x290>)
}
   81c7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udc_sof_notify();
   81c7e:	4710      	bx	r2
   81c80:	b672      	cpsid	i
   81c82:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   81c86:	4a51      	ldr	r2, [pc, #324]	; (81dcc <UDPHS_Handler+0x294>)
   81c88:	7013      	strb	r3, [r2, #0]
}
   81c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81c8e:	2302      	movs	r3, #2
   81c90:	e796      	b.n	81bc0 <UDPHS_Handler+0x88>
			udc_sof_notify();
   81c92:	4b4d      	ldr	r3, [pc, #308]	; (81dc8 <UDPHS_Handler+0x290>)
   81c94:	4798      	blx	r3
   81c96:	e7e9      	b.n	81c6c <UDPHS_Handler+0x134>
	if (Is_udd_wake_up()) {
   81c98:	4b46      	ldr	r3, [pc, #280]	; (81db4 <UDPHS_Handler+0x27c>)
   81c9a:	695b      	ldr	r3, [r3, #20]
   81c9c:	069b      	lsls	r3, r3, #26
   81c9e:	d5f4      	bpl.n	81c8a <UDPHS_Handler+0x152>
	if (b_idle && !udd_b_idle) {
   81ca0:	4a47      	ldr	r2, [pc, #284]	; (81dc0 <UDPHS_Handler+0x288>)
   81ca2:	7813      	ldrb	r3, [r2, #0]
   81ca4:	2b00      	cmp	r3, #0
   81ca6:	f000 8279 	beq.w	8219c <UDPHS_Handler+0x664>
		udd_ack_suspend();
   81caa:	2402      	movs	r4, #2
	udd_b_idle = b_idle;
   81cac:	2501      	movs	r5, #1
		udd_ack_wake_up();
   81cae:	2020      	movs	r0, #32
		udd_ack_suspend();
   81cb0:	4b40      	ldr	r3, [pc, #256]	; (81db4 <UDPHS_Handler+0x27c>)
	udd_b_idle = b_idle;
   81cb2:	7015      	strb	r5, [r2, #0]
		udd_ack_suspend();
   81cb4:	619c      	str	r4, [r3, #24]
		udd_ack_wake_up();
   81cb6:	6198      	str	r0, [r3, #24]
		udd_disable_wake_up_interrupt();
   81cb8:	691a      	ldr	r2, [r3, #16]
		UDC_RESUME_EVENT();
   81cba:	4945      	ldr	r1, [pc, #276]	; (81dd0 <UDPHS_Handler+0x298>)
		udd_disable_wake_up_interrupt();
   81cbc:	f022 0220 	bic.w	r2, r2, #32
   81cc0:	611a      	str	r2, [r3, #16]
		udd_enable_suspend_interrupt();
   81cc2:	691a      	ldr	r2, [r3, #16]
   81cc4:	4322      	orrs	r2, r4
   81cc6:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
   81cc8:	691a      	ldr	r2, [r3, #16]
   81cca:	f042 0208 	orr.w	r2, r2, #8
   81cce:	611a      	str	r2, [r3, #16]
		udd_enable_msof_interrupt();
   81cd0:	691a      	ldr	r2, [r3, #16]
   81cd2:	f042 0204 	orr.w	r2, r2, #4
   81cd6:	611a      	str	r2, [r3, #16]
}
   81cd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_RESUME_EVENT();
   81cdc:	4708      	bx	r1
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
   81cde:	4d3d      	ldr	r5, [pc, #244]	; (81dd4 <UDPHS_Handler+0x29c>)
   81ce0:	782b      	ldrb	r3, [r5, #0]
   81ce2:	b303      	cbz	r3, 81d26 <UDPHS_Handler+0x1ee>
	if (udd_g_ctrlreq.callback) {
   81ce4:	4c3c      	ldr	r4, [pc, #240]	; (81dd8 <UDPHS_Handler+0x2a0>)
   81ce6:	6923      	ldr	r3, [r4, #16]
   81ce8:	b103      	cbz	r3, 81cec <UDPHS_Handler+0x1b4>
		udd_g_ctrlreq.callback();
   81cea:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81cec:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   81cf0:	b672      	cpsid	i
   81cf2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81cf6:	2100      	movs	r1, #0
	udd_disable_in_send_interrupt(0);
   81cf8:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81cfc:	4b33      	ldr	r3, [pc, #204]	; (81dcc <UDPHS_Handler+0x294>)
   81cfe:	7019      	strb	r1, [r3, #0]
   81d00:	492c      	ldr	r1, [pc, #176]	; (81db4 <UDPHS_Handler+0x27c>)
   81d02:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81d06:	b922      	cbnz	r2, 81d12 <UDPHS_Handler+0x1da>
		cpu_irq_enable();
   81d08:	2201      	movs	r2, #1
   81d0a:	701a      	strb	r2, [r3, #0]
   81d0c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81d10:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   81d12:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   81d14:	f44f 7100 	mov.w	r1, #512	; 0x200
   81d18:	4a26      	ldr	r2, [pc, #152]	; (81db4 <UDPHS_Handler+0x27c>)
   81d1a:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.over_under_run = NULL;
   81d1e:	e9c4 3304 	strd	r3, r3, [r4, #16]
	udd_g_ctrlreq.payload_size = 0;
   81d22:	81a3      	strh	r3, [r4, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81d24:	702b      	strb	r3, [r5, #0]
	if (8 != udd_byte_count(0)) {
   81d26:	4a23      	ldr	r2, [pc, #140]	; (81db4 <UDPHS_Handler+0x27c>)
   81d28:	f8d2 311c 	ldr.w	r3, [r2, #284]	; 0x11c
   81d2c:	f3c3 530a 	ubfx	r3, r3, #20, #11
   81d30:	2b08      	cmp	r3, #8
   81d32:	f000 80bc 	beq.w	81eae <UDPHS_Handler+0x376>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81d36:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   81d38:	2120      	movs	r1, #32
		udd_ack_setup_received(0);
   81d3a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81d3e:	7028      	strb	r0, [r5, #0]
	udd_enable_stall_handshake(0);
   81d40:	f8c2 1114 	str.w	r1, [r2, #276]	; 0x114
		udd_ack_setup_received(0);
   81d44:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
		return; // Error data number doesn't correspond to SETUP packet
   81d48:	e79f      	b.n	81c8a <UDPHS_Handler+0x152>
		udd_ack_nak_in(0);
   81d4a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   81d4e:	4a19      	ldr	r2, [pc, #100]	; (81db4 <UDPHS_Handler+0x27c>)
   81d50:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
	if (Is_udd_out_received(0))
   81d54:	f8d2 311c 	ldr.w	r3, [r2, #284]	; 0x11c
   81d58:	f413 7300 	ands.w	r3, r3, #512	; 0x200
   81d5c:	d195      	bne.n	81c8a <UDPHS_Handler+0x152>
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
   81d5e:	481d      	ldr	r0, [pc, #116]	; (81dd4 <UDPHS_Handler+0x29c>)
   81d60:	7801      	ldrb	r1, [r0, #0]
   81d62:	2901      	cmp	r1, #1
   81d64:	f000 824d 	beq.w	82202 <UDPHS_Handler+0x6ca>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
   81d68:	2904      	cmp	r1, #4
   81d6a:	d18e      	bne.n	81c8a <UDPHS_Handler+0x152>
		udd_enable_stall_handshake(0);
   81d6c:	2320      	movs	r3, #32
   81d6e:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
   81d72:	e78a      	b.n	81c8a <UDPHS_Handler+0x152>
			if (udd_endpoint_dma_get_status(ep)
   81d74:	4819      	ldr	r0, [pc, #100]	; (81ddc <UDPHS_Handler+0x2a4>)
   81d76:	eb00 1303 	add.w	r3, r0, r3, lsl #4
   81d7a:	68d8      	ldr	r0, [r3, #12]
   81d7c:	07c0      	lsls	r0, r0, #31
   81d7e:	d484      	bmi.n	81c8a <UDPHS_Handler+0x152>
			udd_disable_endpoint_dma_interrupt(ep);
   81d80:	6910      	ldr	r0, [r2, #16]
   81d82:	ea20 0101 	bic.w	r1, r0, r1
   81d86:	6111      	str	r1, [r2, #16]
			nb_remaining = (udd_endpoint_dma_get_status(ep) &
   81d88:	68db      	ldr	r3, [r3, #12]
			if (nb_remaining) {
   81d8a:	0c1b      	lsrs	r3, r3, #16
   81d8c:	d008      	beq.n	81da0 <UDPHS_Handler+0x268>
				ptr_job->buf_cnt -= nb_remaining;
   81d8e:	4a14      	ldr	r2, [pc, #80]	; (81de0 <UDPHS_Handler+0x2a8>)
   81d90:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
   81d94:	eb02 02ce 	add.w	r2, r2, lr, lsl #3
   81d98:	68d1      	ldr	r1, [r2, #12]
   81d9a:	1acb      	subs	r3, r1, r3
				ptr_job->buf_size = ptr_job->buf_cnt;
   81d9c:	e9c2 3302 	strd	r3, r3, [r2, #8]
			udd_ep_trans_done(ep);
   81da0:	4638      	mov	r0, r7
}
   81da2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			udd_ep_trans_done(ep);
   81da6:	4b0f      	ldr	r3, [pc, #60]	; (81de4 <UDPHS_Handler+0x2ac>)
   81da8:	4718      	bx	r3
   81daa:	bf00      	nop
   81dac:	00082f5d 	.word	0x00082f5d
   81db0:	00083585 	.word	0x00083585
   81db4:	400a4000 	.word	0x400a4000
   81db8:	00082f81 	.word	0x00082f81
   81dbc:	000806e9 	.word	0x000806e9
   81dc0:	20001305 	.word	0x20001305
   81dc4:	000806f9 	.word	0x000806f9
   81dc8:	00080f5d 	.word	0x00080f5d
   81dcc:	2000030c 	.word	0x2000030c
   81dd0:	000806f1 	.word	0x000806f1
   81dd4:	2000130a 	.word	0x2000130a
   81dd8:	2000133c 	.word	0x2000133c
   81ddc:	400a4300 	.word	0x400a4300
   81de0:	2000130c 	.word	0x2000130c
   81de4:	000817e9 	.word	0x000817e9
				// End of background transfer on IN endpoint
				udd_disable_bank_interrupt(ep);
   81de8:	f44f 2380 	mov.w	r3, #262144	; 0x40000

				Assert(ptr_job->stall_requested);
				// A stall has been requested during background transfer
				ptr_job->stall_requested = false;
				udd_disable_endpoint_bank_autoswitch(ep);
				udd_enable_stall_handshake(ep);
   81dec:	2520      	movs	r5, #32
				udd_reset_data_toggle(ep);
   81dee:	2140      	movs	r1, #64	; 0x40
				udd_disable_bank_interrupt(ep);
   81df0:	f8cc 3108 	str.w	r3, [ip, #264]	; 0x108
				udd_disable_endpoint_interrupt(ep);
   81df4:	6913      	ldr	r3, [r2, #16]
				ptr_job->stall_requested = false;
   81df6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
				udd_disable_endpoint_interrupt(ep);
   81dfa:	ea23 0000 	bic.w	r0, r3, r0
				ptr_job->stall_requested = false;
   81dfe:	4bb3      	ldr	r3, [pc, #716]	; (820cc <UDPHS_Handler+0x594>)
				udd_disable_endpoint_interrupt(ep);
   81e00:	6110      	str	r0, [r2, #16]
				ptr_job->stall_requested = false;
   81e02:	eb03 0ece 	add.w	lr, r3, lr, lsl #3
   81e06:	f89e 3014 	ldrb.w	r3, [lr, #20]
   81e0a:	f364 0382 	bfi	r3, r4, #2, #1
   81e0e:	f88e 3014 	strb.w	r3, [lr, #20]
				udd_disable_endpoint_bank_autoswitch(ep);
   81e12:	f8dc 3108 	ldr.w	r3, [ip, #264]	; 0x108
   81e16:	f023 0302 	bic.w	r3, r3, #2
   81e1a:	f8cc 3108 	str.w	r3, [ip, #264]	; 0x108
				udd_enable_stall_handshake(ep);
   81e1e:	f8cc 5114 	str.w	r5, [ip, #276]	; 0x114
				udd_reset_data_toggle(ep);
   81e22:	f8cc 1118 	str.w	r1, [ip, #280]	; 0x118
				//dbg_print("exHalt%x ", ep);
				return true;
   81e26:	e730      	b.n	81c8a <UDPHS_Handler+0x152>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
   81e28:	4da9      	ldr	r5, [pc, #676]	; (820d0 <UDPHS_Handler+0x598>)
   81e2a:	782b      	ldrb	r3, [r5, #0]
   81e2c:	2b01      	cmp	r3, #1
   81e2e:	f000 8102 	beq.w	82036 <UDPHS_Handler+0x4fe>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
   81e32:	2b02      	cmp	r3, #2
   81e34:	f000 8137 	beq.w	820a6 <UDPHS_Handler+0x56e>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
   81e38:	2b04      	cmp	r3, #4
   81e3a:	f000 8134 	beq.w	820a6 <UDPHS_Handler+0x56e>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81e3e:	2105      	movs	r1, #5
	udd_enable_stall_handshake(0);
   81e40:	2220      	movs	r2, #32
   81e42:	4ba4      	ldr	r3, [pc, #656]	; (820d4 <UDPHS_Handler+0x59c>)
   81e44:	4ca4      	ldr	r4, [pc, #656]	; (820d8 <UDPHS_Handler+0x5a0>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81e46:	7029      	strb	r1, [r5, #0]
	udd_enable_stall_handshake(0);
   81e48:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81e4c:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   81e50:	b672      	cpsid	i
   81e52:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81e56:	2100      	movs	r1, #0
	udd_disable_in_send_interrupt(0);
   81e58:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81e5c:	4b9f      	ldr	r3, [pc, #636]	; (820dc <UDPHS_Handler+0x5a4>)
   81e5e:	7019      	strb	r1, [r3, #0]
   81e60:	499c      	ldr	r1, [pc, #624]	; (820d4 <UDPHS_Handler+0x59c>)
   81e62:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81e66:	b922      	cbnz	r2, 81e72 <UDPHS_Handler+0x33a>
		cpu_irq_enable();
   81e68:	2201      	movs	r2, #1
   81e6a:	701a      	strb	r2, [r3, #0]
   81e6c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81e70:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   81e72:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   81e74:	f44f 7100 	mov.w	r1, #512	; 0x200
   81e78:	4a96      	ldr	r2, [pc, #600]	; (820d4 <UDPHS_Handler+0x59c>)
   81e7a:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.over_under_run = NULL;
   81e7e:	e9c4 3304 	strd	r3, r3, [r4, #16]
	udd_g_ctrlreq.payload_size = 0;
   81e82:	81a3      	strh	r3, [r4, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81e84:	702b      	strb	r3, [r5, #0]
   81e86:	e700      	b.n	81c8a <UDPHS_Handler+0x152>
		udd_ack_nak_out(0);
   81e88:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   81e8c:	4b91      	ldr	r3, [pc, #580]	; (820d4 <UDPHS_Handler+0x59c>)
   81e8e:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	if (Is_udd_in_send(0))
   81e92:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
   81e96:	0555      	lsls	r5, r2, #21
   81e98:	f53f aef7 	bmi.w	81c8a <UDPHS_Handler+0x152>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   81e9c:	4a8c      	ldr	r2, [pc, #560]	; (820d0 <UDPHS_Handler+0x598>)
   81e9e:	7812      	ldrb	r2, [r2, #0]
   81ea0:	2a03      	cmp	r2, #3
   81ea2:	f47f aef2 	bne.w	81c8a <UDPHS_Handler+0x152>
		udd_enable_stall_handshake(0);
   81ea6:	2220      	movs	r2, #32
   81ea8:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
   81eac:	e6ed      	b.n	81c8a <UDPHS_Handler+0x152>
   81eae:	4a8c      	ldr	r2, [pc, #560]	; (820e0 <UDPHS_Handler+0x5a8>)
	uint8_t *ptr = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   81eb0:	4b8c      	ldr	r3, [pc, #560]	; (820e4 <UDPHS_Handler+0x5ac>)
	for (i = 0; i < 8; i++) {
   81eb2:	488d      	ldr	r0, [pc, #564]	; (820e8 <UDPHS_Handler+0x5b0>)
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   81eb4:	4619      	mov	r1, r3
   81eb6:	3301      	adds	r3, #1
   81eb8:	7809      	ldrb	r1, [r1, #0]
	for (i = 0; i < 8; i++) {
   81eba:	4283      	cmp	r3, r0
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   81ebc:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < 8; i++) {
   81ec0:	d1f8      	bne.n	81eb4 <UDPHS_Handler+0x37c>
	if (udc_process_setup() == false) {
   81ec2:	4b8a      	ldr	r3, [pc, #552]	; (820ec <UDPHS_Handler+0x5b4>)
   81ec4:	4798      	blx	r3
   81ec6:	2800      	cmp	r0, #0
   81ec8:	f000 80f4 	beq.w	820b4 <UDPHS_Handler+0x57c>
	udd_ack_setup_received(0);
   81ecc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81ed0:	4b80      	ldr	r3, [pc, #512]	; (820d4 <UDPHS_Handler+0x59c>)
	if (Udd_setup_is_in()) {
   81ed2:	4a81      	ldr	r2, [pc, #516]	; (820d8 <UDPHS_Handler+0x5a0>)
	udd_ack_setup_received(0);
   81ed4:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	if (Udd_setup_is_in()) {
   81ed8:	f992 1000 	ldrsb.w	r1, [r2]
   81edc:	2900      	cmp	r1, #0
   81ede:	f2c0 8171 	blt.w	821c4 <UDPHS_Handler+0x68c>
		if (0 == udd_g_ctrlreq.req.wLength) {
   81ee2:	88d2      	ldrh	r2, [r2, #6]
   81ee4:	2a00      	cmp	r2, #0
   81ee6:	f000 81ad 	beq.w	82244 <UDPHS_Handler+0x70c>
		udd_ctrl_prev_payload_buf_cnt = 0;
   81eea:	2200      	movs	r2, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   81eec:	2401      	movs	r4, #1
		udd_ack_nak_in(0);
   81eee:	f44f 4180 	mov.w	r1, #16384	; 0x4000
		udd_ctrl_prev_payload_buf_cnt = 0;
   81ef2:	487f      	ldr	r0, [pc, #508]	; (820f0 <UDPHS_Handler+0x5b8>)
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   81ef4:	702c      	strb	r4, [r5, #0]
		udd_ctrl_prev_payload_buf_cnt = 0;
   81ef6:	8002      	strh	r2, [r0, #0]
		udd_ctrl_payload_buf_cnt = 0;
   81ef8:	487e      	ldr	r0, [pc, #504]	; (820f4 <UDPHS_Handler+0x5bc>)
   81efa:	8002      	strh	r2, [r0, #0]
		udd_ack_nak_in(0);
   81efc:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81f00:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   81f04:	b672      	cpsid	i
   81f06:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81f0a:	4874      	ldr	r0, [pc, #464]	; (820dc <UDPHS_Handler+0x5a4>)
   81f0c:	7002      	strb	r2, [r0, #0]
		udd_enable_nak_in_interrupt(0);
   81f0e:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   81f12:	2d00      	cmp	r5, #0
   81f14:	f47f aeb9 	bne.w	81c8a <UDPHS_Handler+0x152>
		cpu_irq_enable();
   81f18:	7004      	strb	r4, [r0, #0]
   81f1a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81f1e:	b662      	cpsie	i
   81f20:	e6b3      	b.n	81c8a <UDPHS_Handler+0x152>
		udd_ack_reset();
   81f22:	2210      	movs	r2, #16
	if (ptr_job->busy == false) {
   81f24:	4c69      	ldr	r4, [pc, #420]	; (820cc <UDPHS_Handler+0x594>)
   81f26:	7d23      	ldrb	r3, [r4, #20]
		udd_ack_reset();
   81f28:	618a      	str	r2, [r1, #24]
	if (ptr_job->busy == false) {
   81f2a:	f013 0201 	ands.w	r2, r3, #1
   81f2e:	d00d      	beq.n	81f4c <UDPHS_Handler+0x414>
	if (NULL == ptr_job->call_trans) {
   81f30:	6825      	ldr	r5, [r4, #0]
	ptr_job->busy = false;
   81f32:	f36f 0300 	bfc	r3, #0, #1
   81f36:	7523      	strb	r3, [r4, #20]
	if (NULL == ptr_job->call_trans) {
   81f38:	b145      	cbz	r5, 81f4c <UDPHS_Handler+0x414>
	if (Is_udd_endpoint_in(ep_num)) {
   81f3a:	f8d1 3120 	ldr.w	r3, [r1, #288]	; 0x120
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81f3e:	2001      	movs	r0, #1
		ep_num |= USB_EP_DIR_IN;
   81f40:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81f44:	bf18      	it	ne
   81f46:	2281      	movne	r2, #129	; 0x81
   81f48:	68a1      	ldr	r1, [r4, #8]
   81f4a:	47a8      	blx	r5
	if (ptr_job->busy == false) {
   81f4c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
   81f50:	07dd      	lsls	r5, r3, #31
   81f52:	d510      	bpl.n	81f76 <UDPHS_Handler+0x43e>
	if (NULL == ptr_job->call_trans) {
   81f54:	69a5      	ldr	r5, [r4, #24]
	ptr_job->busy = false;
   81f56:	f36f 0300 	bfc	r3, #0, #1
   81f5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
	if (NULL == ptr_job->call_trans) {
   81f5e:	b155      	cbz	r5, 81f76 <UDPHS_Handler+0x43e>
	if (Is_udd_endpoint_in(ep_num)) {
   81f60:	4b5c      	ldr	r3, [pc, #368]	; (820d4 <UDPHS_Handler+0x59c>)
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81f62:	2001      	movs	r0, #1
	if (Is_udd_endpoint_in(ep_num)) {
   81f64:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81f68:	6a21      	ldr	r1, [r4, #32]
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   81f6a:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81f6e:	bf14      	ite	ne
   81f70:	2282      	movne	r2, #130	; 0x82
   81f72:	2202      	moveq	r2, #2
   81f74:	47a8      	blx	r5
		udc_reset();
   81f76:	4b60      	ldr	r3, [pc, #384]	; (820f8 <UDPHS_Handler+0x5c0>)
   81f78:	4798      	blx	r3
	udd_enable_endpoint(0);
   81f7a:	2001      	movs	r0, #1
	udd_configure_address(0);
   81f7c:	4b55      	ldr	r3, [pc, #340]	; (820d4 <UDPHS_Handler+0x59c>)
   81f7e:	681a      	ldr	r2, [r3, #0]
   81f80:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81f84:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   81f86:	681a      	ldr	r2, [r3, #0]
   81f88:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   81f8c:	601a      	str	r2, [r3, #0]
	udd_configure_endpoint(0,
   81f8e:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   81f92:	f422 727f 	bic.w	r2, r2, #1020	; 0x3fc
   81f96:	f022 0203 	bic.w	r2, r2, #3
   81f9a:	f042 0243 	orr.w	r2, r2, #67	; 0x43
   81f9e:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	udd_enable_endpoint(0);
   81fa2:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81fa6:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   81faa:	b672      	cpsid	i
   81fac:	f3bf 8f5f 	dmb	sy
	udd_enable_setup_received_interrupt(0);
   81fb0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
	cpu_irq_disable();
   81fb4:	2500      	movs	r5, #0
   81fb6:	4949      	ldr	r1, [pc, #292]	; (820dc <UDPHS_Handler+0x5a4>)
   81fb8:	700d      	strb	r5, [r1, #0]
   81fba:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	udd_enable_out_received_interrupt(0);
   81fbe:	f44f 7200 	mov.w	r2, #512	; 0x200
   81fc2:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	udd_enable_endpoint_interrupt(0);
   81fc6:	691a      	ldr	r2, [r3, #16]
   81fc8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   81fcc:	611a      	str	r2, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
   81fce:	b91c      	cbnz	r4, 81fd8 <UDPHS_Handler+0x4a0>
		cpu_irq_enable();
   81fd0:	7008      	strb	r0, [r1, #0]
   81fd2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81fd6:	b662      	cpsie	i
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81fd8:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81fdc:	b672      	cpsid	i
   81fde:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81fe2:	2400      	movs	r4, #0
	udd_disable_in_send_interrupt(0);
   81fe4:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81fe8:	4a3a      	ldr	r2, [pc, #232]	; (820d4 <UDPHS_Handler+0x59c>)
   81fea:	700c      	strb	r4, [r1, #0]
   81fec:	f8c2 0108 	str.w	r0, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81ff0:	b923      	cbnz	r3, 81ffc <UDPHS_Handler+0x4c4>
		cpu_irq_enable();
   81ff2:	2301      	movs	r3, #1
   81ff4:	700b      	strb	r3, [r1, #0]
   81ff6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81ffa:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   81ffc:	2200      	movs	r2, #0
	udd_ack_out_received(0);
   81ffe:	f44f 7400 	mov.w	r4, #512	; 0x200
   82002:	4b34      	ldr	r3, [pc, #208]	; (820d4 <UDPHS_Handler+0x59c>)
	udd_g_ctrlreq.callback = NULL;
   82004:	4834      	ldr	r0, [pc, #208]	; (820d8 <UDPHS_Handler+0x5a0>)
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   82006:	4932      	ldr	r1, [pc, #200]	; (820d0 <UDPHS_Handler+0x598>)
	udd_g_ctrlreq.callback = NULL;
   82008:	6102      	str	r2, [r0, #16]
	udd_ack_out_received(0);
   8200a:	f8c3 4118 	str.w	r4, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   8200e:	700a      	strb	r2, [r1, #0]
		udd_enable_sof_interrupt();
   82010:	6919      	ldr	r1, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   82012:	6142      	str	r2, [r0, #20]
		udd_enable_sof_interrupt();
   82014:	f041 0108 	orr.w	r1, r1, #8
   82018:	6119      	str	r1, [r3, #16]
		udd_enable_msof_interrupt();
   8201a:	6919      	ldr	r1, [r3, #16]
	udd_g_ctrlreq.payload_size = 0;
   8201c:	8182      	strh	r2, [r0, #12]
		udd_enable_msof_interrupt();
   8201e:	f041 0104 	orr.w	r1, r1, #4
   82022:	6119      	str	r1, [r3, #16]
		udd_enable_suspend_interrupt();
   82024:	691a      	ldr	r2, [r3, #16]
   82026:	f042 0202 	orr.w	r2, r2, #2
   8202a:	611a      	str	r2, [r3, #16]
		goto udd_interrupt_end;
   8202c:	e62d      	b.n	81c8a <UDPHS_Handler+0x152>
		udd_ctrl_in_sent();
   8202e:	4b33      	ldr	r3, [pc, #204]	; (820fc <UDPHS_Handler+0x5c4>)
}
   82030:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent();
   82034:	4718      	bx	r3
	nb_data = udd_byte_count(0);
   82036:	4b27      	ldr	r3, [pc, #156]	; (820d4 <UDPHS_Handler+0x59c>)
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   82038:	4f2e      	ldr	r7, [pc, #184]	; (820f4 <UDPHS_Handler+0x5bc>)
	nb_data = udd_byte_count(0);
   8203a:	f8d3 611c 	ldr.w	r6, [r3, #284]	; 0x11c
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8203e:	4c26      	ldr	r4, [pc, #152]	; (820d8 <UDPHS_Handler+0x5a0>)
   82040:	883b      	ldrh	r3, [r7, #0]
   82042:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
	nb_data = udd_byte_count(0);
   82046:	f3c6 560a 	ubfx	r6, r6, #20, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8204a:	199a      	adds	r2, r3, r6
   8204c:	4594      	cmp	ip, r2
	udd_ctrl_payload_buf_cnt += nb_data;
   8204e:	bfac      	ite	ge
   82050:	fa1f fc82 	uxthge.w	ip, r2
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   82054:	ebac 0603 	sublt.w	r6, ip, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   82058:	68a2      	ldr	r2, [r4, #8]
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   8205a:	bfb8      	it	lt
   8205c:	b2b6      	uxthlt	r6, r6
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   8205e:	441a      	add	r2, r3
	for (i = 0; i < nb_data; i++) {
   82060:	2e00      	cmp	r6, #0
   82062:	f000 8112 	beq.w	8228a <UDPHS_Handler+0x752>
	uint8_t *ptr_src = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   82066:	4b1f      	ldr	r3, [pc, #124]	; (820e4 <UDPHS_Handler+0x5ac>)
		*ptr_dest++ = *ptr_src++;
   82068:	4618      	mov	r0, r3
   8206a:	3301      	adds	r3, #1
   8206c:	7800      	ldrb	r0, [r0, #0]
	for (i = 0; i < nb_data; i++) {
   8206e:	b2d9      	uxtb	r1, r3
   82070:	42b1      	cmp	r1, r6
		*ptr_dest++ = *ptr_src++;
   82072:	f802 0b01 	strb.w	r0, [r2], #1
	for (i = 0; i < nb_data; i++) {
   82076:	d3f7      	bcc.n	82068 <UDPHS_Handler+0x530>
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   82078:	2e40      	cmp	r6, #64	; 0x40
	udd_ctrl_payload_buf_cnt += nb_data;
   8207a:	f8a7 c000 	strh.w	ip, [r7]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   8207e:	d067      	beq.n	82150 <UDPHS_Handler+0x618>
		if (NULL != udd_g_ctrlreq.over_under_run) {
   82080:	6963      	ldr	r3, [r4, #20]
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_buf_cnt;
   82082:	f8a4 c00c 	strh.w	ip, [r4, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
   82086:	2b00      	cmp	r3, #0
   82088:	d03a      	beq.n	82100 <UDPHS_Handler+0x5c8>
			if (!udd_g_ctrlreq.over_under_run()) {
   8208a:	4798      	blx	r3
   8208c:	2800      	cmp	r0, #0
   8208e:	d137      	bne.n	82100 <UDPHS_Handler+0x5c8>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   82090:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   82092:	2120      	movs	r1, #32
			udd_ack_out_received(0);
   82094:	f44f 7200 	mov.w	r2, #512	; 0x200
	udd_enable_stall_handshake(0);
   82098:	4b0e      	ldr	r3, [pc, #56]	; (820d4 <UDPHS_Handler+0x59c>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   8209a:	7028      	strb	r0, [r5, #0]
	udd_enable_stall_handshake(0);
   8209c:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
			udd_ack_out_received(0);
   820a0:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
			return;
   820a4:	e5f1      	b.n	81c8a <UDPHS_Handler+0x152>
	if (udd_g_ctrlreq.callback) {
   820a6:	4c0c      	ldr	r4, [pc, #48]	; (820d8 <UDPHS_Handler+0x5a0>)
   820a8:	6923      	ldr	r3, [r4, #16]
   820aa:	2b00      	cmp	r3, #0
   820ac:	f43f aece 	beq.w	81e4c <UDPHS_Handler+0x314>
		udd_g_ctrlreq.callback();
   820b0:	4798      	blx	r3
   820b2:	e6cb      	b.n	81e4c <UDPHS_Handler+0x314>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   820b4:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   820b6:	2120      	movs	r1, #32
		udd_ack_setup_received(0);
   820b8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
	udd_enable_stall_handshake(0);
   820bc:	4b05      	ldr	r3, [pc, #20]	; (820d4 <UDPHS_Handler+0x59c>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   820be:	7028      	strb	r0, [r5, #0]
	udd_enable_stall_handshake(0);
   820c0:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
		udd_ack_setup_received(0);
   820c4:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
		return;
   820c8:	e5df      	b.n	81c8a <UDPHS_Handler+0x152>
   820ca:	bf00      	nop
   820cc:	2000130c 	.word	0x2000130c
   820d0:	2000130a 	.word	0x2000130a
   820d4:	400a4000 	.word	0x400a4000
   820d8:	2000133c 	.word	0x2000133c
   820dc:	2000030c 	.word	0x2000030c
   820e0:	2000133b 	.word	0x2000133b
   820e4:	20180000 	.word	0x20180000
   820e8:	20180008 	.word	0x20180008
   820ec:	00080f99 	.word	0x00080f99
   820f0:	20001308 	.word	0x20001308
   820f4:	20001306 	.word	0x20001306
   820f8:	00080f19 	.word	0x00080f19
   820fc:	0008199d 	.word	0x0008199d
		udd_ack_out_received(0);
   82100:	f44f 7100 	mov.w	r1, #512	; 0x200
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82104:	2203      	movs	r2, #3
		udd_ack_out_received(0);
   82106:	4b6a      	ldr	r3, [pc, #424]	; (822b0 <UDPHS_Handler+0x778>)
   82108:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   8210c:	702a      	strb	r2, [r5, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8210e:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   82112:	b672      	cpsid	i
   82114:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82118:	2500      	movs	r5, #0
   8211a:	4866      	ldr	r0, [pc, #408]	; (822b4 <UDPHS_Handler+0x77c>)
	udd_ack_in_send(0);
   8211c:	f44f 6180 	mov.w	r1, #1024	; 0x400
   82120:	7005      	strb	r5, [r0, #0]
	udd_ack_nak_out(0);
   82122:	f44f 4200 	mov.w	r2, #32768	; 0x8000
	udd_raise_tx_pkt_ready(0);
   82126:	f44f 6500 	mov.w	r5, #2048	; 0x800
	udd_ack_in_send(0);
   8212a:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   8212e:	f8c3 5114 	str.w	r5, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   82132:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	udd_ack_nak_out(0);
   82136:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   8213a:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   8213e:	2c00      	cmp	r4, #0
   82140:	f47f ada3 	bne.w	81c8a <UDPHS_Handler+0x152>
		cpu_irq_enable();
   82144:	2301      	movs	r3, #1
   82146:	7003      	strb	r3, [r0, #0]
   82148:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8214c:	b662      	cpsie	i
   8214e:	e59c      	b.n	81c8a <UDPHS_Handler+0x152>
			(udd_ctrl_prev_payload_buf_cnt +
   82150:	4e59      	ldr	r6, [pc, #356]	; (822b8 <UDPHS_Handler+0x780>)
			|| (udd_g_ctrlreq.req.wLength <=
   82152:	88e2      	ldrh	r2, [r4, #6]
			(udd_ctrl_prev_payload_buf_cnt +
   82154:	8833      	ldrh	r3, [r6, #0]
   82156:	4463      	add	r3, ip
			|| (udd_g_ctrlreq.req.wLength <=
   82158:	429a      	cmp	r2, r3
   8215a:	dd91      	ble.n	82080 <UDPHS_Handler+0x548>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_buf_cnt) {
   8215c:	89a3      	ldrh	r3, [r4, #12]
   8215e:	4563      	cmp	r3, ip
   82160:	f000 8096 	beq.w	82290 <UDPHS_Handler+0x758>
	udd_ack_out_received(0);
   82164:	f44f 7100 	mov.w	r1, #512	; 0x200
	udd_ack_nak_in(0);
   82168:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	udd_ack_out_received(0);
   8216c:	4b50      	ldr	r3, [pc, #320]	; (822b0 <UDPHS_Handler+0x778>)
   8216e:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_ack_nak_in(0);
   82172:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82176:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i");
   8217a:	b672      	cpsid	i
   8217c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82180:	2400      	movs	r4, #0
   82182:	494c      	ldr	r1, [pc, #304]	; (822b4 <UDPHS_Handler+0x77c>)
   82184:	700c      	strb	r4, [r1, #0]
	udd_enable_nak_in_interrupt(0);
   82186:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   8218a:	2800      	cmp	r0, #0
   8218c:	f47f ad7d 	bne.w	81c8a <UDPHS_Handler+0x152>
		cpu_irq_enable();
   82190:	2301      	movs	r3, #1
   82192:	700b      	strb	r3, [r1, #0]
   82194:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82198:	b662      	cpsie	i
   8219a:	e576      	b.n	81c8a <UDPHS_Handler+0x152>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8219c:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   821a0:	b672      	cpsid	i
   821a2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   821a6:	4843      	ldr	r0, [pc, #268]	; (822b4 <UDPHS_Handler+0x77c>)
	++sleepmgr_locks[mode];
   821a8:	4944      	ldr	r1, [pc, #272]	; (822bc <UDPHS_Handler+0x784>)
   821aa:	7003      	strb	r3, [r0, #0]
   821ac:	788b      	ldrb	r3, [r1, #2]
   821ae:	3301      	adds	r3, #1
   821b0:	708b      	strb	r3, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   821b2:	2c00      	cmp	r4, #0
   821b4:	f47f ad79 	bne.w	81caa <UDPHS_Handler+0x172>
		cpu_irq_enable();
   821b8:	2301      	movs	r3, #1
   821ba:	7003      	strb	r3, [r0, #0]
   821bc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   821c0:	b662      	cpsie	i
}
   821c2:	e572      	b.n	81caa <UDPHS_Handler+0x172>
		udd_ctrl_prev_payload_buf_cnt = 0;
   821c4:	2300      	movs	r3, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   821c6:	2102      	movs	r1, #2
		udd_ctrl_prev_payload_buf_cnt = 0;
   821c8:	4c3b      	ldr	r4, [pc, #236]	; (822b8 <UDPHS_Handler+0x780>)
		udd_ctrl_payload_buf_cnt = 0;
   821ca:	483d      	ldr	r0, [pc, #244]	; (822c0 <UDPHS_Handler+0x788>)
		udd_ctrl_prev_payload_buf_cnt = 0;
   821cc:	8023      	strh	r3, [r4, #0]
		udd_ctrl_payload_buf_cnt = 0;
   821ce:	8003      	strh	r3, [r0, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   821d0:	7029      	strb	r1, [r5, #0]
		udd_ctrl_in_sent(); // Send first data transfer
   821d2:	4a3c      	ldr	r2, [pc, #240]	; (822c4 <UDPHS_Handler+0x78c>)
}
   821d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent(); // Send first data transfer
   821d8:	4710      	bx	r2
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   821da:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   821de:	b672      	cpsid	i
   821e0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   821e4:	4833      	ldr	r0, [pc, #204]	; (822b4 <UDPHS_Handler+0x77c>)
	--sleepmgr_locks[mode];
   821e6:	4935      	ldr	r1, [pc, #212]	; (822bc <UDPHS_Handler+0x784>)
   821e8:	7004      	strb	r4, [r0, #0]
   821ea:	788b      	ldrb	r3, [r1, #2]
   821ec:	3b01      	subs	r3, #1
   821ee:	708b      	strb	r3, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   821f0:	2d00      	cmp	r5, #0
   821f2:	f47f ad33 	bne.w	81c5c <UDPHS_Handler+0x124>
		cpu_irq_enable();
   821f6:	2301      	movs	r3, #1
   821f8:	7003      	strb	r3, [r0, #0]
   821fa:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   821fe:	b662      	cpsie	i
}
   82200:	e52c      	b.n	81c5c <UDPHS_Handler+0x124>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82202:	2403      	movs	r4, #3
   82204:	7004      	strb	r4, [r0, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82206:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   8220a:	b672      	cpsid	i
   8220c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82210:	4c28      	ldr	r4, [pc, #160]	; (822b4 <UDPHS_Handler+0x77c>)
	udd_ack_in_send(0);
   82212:	f44f 6080 	mov.w	r0, #1024	; 0x400
   82216:	7023      	strb	r3, [r4, #0]
	udd_raise_tx_pkt_ready(0);
   82218:	f44f 6600 	mov.w	r6, #2048	; 0x800
	udd_ack_nak_out(0);
   8221c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
	udd_ack_in_send(0);
   82220:	f8c2 0118 	str.w	r0, [r2, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82224:	f8c2 6114 	str.w	r6, [r2, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   82228:	f8c2 0104 	str.w	r0, [r2, #260]	; 0x104
	udd_ack_nak_out(0);
   8222c:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   82230:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   82234:	2d00      	cmp	r5, #0
   82236:	f47f ad28 	bne.w	81c8a <UDPHS_Handler+0x152>
		cpu_irq_enable();
   8223a:	7021      	strb	r1, [r4, #0]
   8223c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82240:	b662      	cpsie	i
   82242:	e522      	b.n	81c8a <UDPHS_Handler+0x152>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82244:	2103      	movs	r1, #3
   82246:	7029      	strb	r1, [r5, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82248:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   8224c:	b672      	cpsid	i
   8224e:	f3bf 8f5f 	dmb	sy
	udd_ack_in_send(0);
   82252:	f44f 6180 	mov.w	r1, #1024	; 0x400
	cpu_irq_disable();
   82256:	4817      	ldr	r0, [pc, #92]	; (822b4 <UDPHS_Handler+0x77c>)
	udd_raise_tx_pkt_ready(0);
   82258:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8225c:	7002      	strb	r2, [r0, #0]
	udd_ack_nak_out(0);
   8225e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
	udd_ack_in_send(0);
   82262:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82266:	e762      	b.n	8212e <UDPHS_Handler+0x5f6>
				udd_disable_tx_pkt_ready_interrupt(ep);
   82268:	f44f 6300 	mov.w	r3, #2048	; 0x800
				udd_ep_finish_job(ptr_job, false, ep);
   8226c:	4d16      	ldr	r5, [pc, #88]	; (822c8 <UDPHS_Handler+0x790>)
		ptr_job = &udd_ep_job[ep - 1];
   8226e:	4817      	ldr	r0, [pc, #92]	; (822cc <UDPHS_Handler+0x794>)
				udd_disable_tx_pkt_ready_interrupt(ep);
   82270:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
		ptr_job = &udd_ep_job[ep - 1];
   82274:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
				udd_raise_tx_pkt_ready(ep);
   82278:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
				udd_ep_finish_job(ptr_job, false, ep);
   8227c:	463a      	mov	r2, r7
   8227e:	462b      	mov	r3, r5
   82280:	eb00 00ce 	add.w	r0, r0, lr, lsl #3
}
   82284:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
				udd_ep_finish_job(ptr_job, false, ep);
   82288:	4718      	bx	r3
	udd_ctrl_payload_buf_cnt += nb_data;
   8228a:	f8a7 c000 	strh.w	ip, [r7]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   8228e:	e6f7      	b.n	82080 <UDPHS_Handler+0x548>
		if (!udd_g_ctrlreq.over_under_run) {
   82290:	6963      	ldr	r3, [r4, #20]
   82292:	2b00      	cmp	r3, #0
   82294:	f43f aefc 	beq.w	82090 <UDPHS_Handler+0x558>
		if (!udd_g_ctrlreq.over_under_run()) {
   82298:	4798      	blx	r3
   8229a:	2800      	cmp	r0, #0
   8229c:	f43f aef8 	beq.w	82090 <UDPHS_Handler+0x558>
		udd_ctrl_payload_buf_cnt = 0;
   822a0:	2200      	movs	r2, #0
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   822a2:	8833      	ldrh	r3, [r6, #0]
   822a4:	8839      	ldrh	r1, [r7, #0]
		udd_ctrl_payload_buf_cnt = 0;
   822a6:	803a      	strh	r2, [r7, #0]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   822a8:	440b      	add	r3, r1
   822aa:	8033      	strh	r3, [r6, #0]
		udd_ctrl_payload_buf_cnt = 0;
   822ac:	e75a      	b.n	82164 <UDPHS_Handler+0x62c>
   822ae:	bf00      	nop
   822b0:	400a4000 	.word	0x400a4000
   822b4:	2000030c 	.word	0x2000030c
   822b8:	20001308 	.word	0x20001308
   822bc:	20001374 	.word	0x20001374
   822c0:	20001306 	.word	0x20001306
   822c4:	0008199d 	.word	0x0008199d
   822c8:	000817a9 	.word	0x000817a9
   822cc:	2000130c 	.word	0x2000130c

000822d0 <udd_attach>:
{
   822d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   822d4:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   822d8:	b672      	cpsid	i
   822da:	f3bf 8f5f 	dmb	sy
   822de:	2100      	movs	r1, #0
	if (b_idle && !udd_b_idle) {
   822e0:	4b29      	ldr	r3, [pc, #164]	; (82388 <udd_attach+0xb8>)
   822e2:	4c2a      	ldr	r4, [pc, #168]	; (8238c <udd_attach+0xbc>)
   822e4:	781a      	ldrb	r2, [r3, #0]
   822e6:	7021      	strb	r1, [r4, #0]
   822e8:	2a00      	cmp	r2, #0
   822ea:	d03b      	beq.n	82364 <udd_attach+0x94>
	udd_b_idle = b_idle;
   822ec:	2501      	movs	r5, #1
	udd_enable_periph_ck();
   822ee:	4a28      	ldr	r2, [pc, #160]	; (82390 <udd_attach+0xc0>)
   822f0:	201d      	movs	r0, #29
	udd_b_idle = b_idle;
   822f2:	701d      	strb	r5, [r3, #0]
	udd_ack_sof();
   822f4:	f04f 0808 	mov.w	r8, #8
	udd_enable_periph_ck();
   822f8:	4790      	blx	r2
	udd_ack_suspend();
   822fa:	2702      	movs	r7, #2
	udd_ack_msof();
   822fc:	f04f 0e04 	mov.w	lr, #4
	udd_ack_reset();
   82300:	f04f 0c10 	mov.w	ip, #16
	udd_ack_wake_up();
   82304:	2120      	movs	r1, #32
	udd_attach_device();
   82306:	4b23      	ldr	r3, [pc, #140]	; (82394 <udd_attach+0xc4>)
	udd_disable_periph_ck();
   82308:	201d      	movs	r0, #29
	udd_attach_device();
   8230a:	681a      	ldr	r2, [r3, #0]
   8230c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   82310:	601a      	str	r2, [r3, #0]
   82312:	681a      	ldr	r2, [r3, #0]
   82314:	f422 7200 	bic.w	r2, r2, #512	; 0x200
   82318:	601a      	str	r2, [r3, #0]
	udd_enable_reset_interrupt();
   8231a:	691a      	ldr	r2, [r3, #16]
   8231c:	f042 0210 	orr.w	r2, r2, #16
   82320:	611a      	str	r2, [r3, #16]
	udd_enable_suspend_interrupt();
   82322:	691a      	ldr	r2, [r3, #16]
   82324:	f042 0202 	orr.w	r2, r2, #2
   82328:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
   8232a:	691a      	ldr	r2, [r3, #16]
   8232c:	f042 0220 	orr.w	r2, r2, #32
   82330:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
   82332:	691a      	ldr	r2, [r3, #16]
   82334:	f042 0208 	orr.w	r2, r2, #8
   82338:	611a      	str	r2, [r3, #16]
	udd_enable_msof_interrupt();
   8233a:	691a      	ldr	r2, [r3, #16]
   8233c:	f042 0204 	orr.w	r2, r2, #4
   82340:	611a      	str	r2, [r3, #16]
	udd_ack_sof();
   82342:	f8c3 8018 	str.w	r8, [r3, #24]
	udd_disable_periph_ck();
   82346:	4a14      	ldr	r2, [pc, #80]	; (82398 <udd_attach+0xc8>)
	udd_ack_msof();
   82348:	f8c3 e018 	str.w	lr, [r3, #24]
	udd_ack_reset();
   8234c:	f8c3 c018 	str.w	ip, [r3, #24]
	udd_ack_suspend();
   82350:	619f      	str	r7, [r3, #24]
	udd_ack_wake_up();
   82352:	6199      	str	r1, [r3, #24]
	udd_disable_periph_ck();
   82354:	4790      	blx	r2
	if (cpu_irq_is_enabled_flags(flags))
   82356:	b91e      	cbnz	r6, 82360 <udd_attach+0x90>
		cpu_irq_enable();
   82358:	7025      	strb	r5, [r4, #0]
   8235a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8235e:	b662      	cpsie	i
}
   82360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82364:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i");
   82368:	b672      	cpsid	i
   8236a:	f3bf 8f5f 	dmb	sy
	++sleepmgr_locks[mode];
   8236e:	490b      	ldr	r1, [pc, #44]	; (8239c <udd_attach+0xcc>)
	cpu_irq_disable();
   82370:	7022      	strb	r2, [r4, #0]
   82372:	788a      	ldrb	r2, [r1, #2]
   82374:	3201      	adds	r2, #1
   82376:	708a      	strb	r2, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   82378:	2800      	cmp	r0, #0
   8237a:	d1b7      	bne.n	822ec <udd_attach+0x1c>
		cpu_irq_enable();
   8237c:	2201      	movs	r2, #1
   8237e:	7022      	strb	r2, [r4, #0]
   82380:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82384:	b662      	cpsie	i
}
   82386:	e7b1      	b.n	822ec <udd_attach+0x1c>
   82388:	20001305 	.word	0x20001305
   8238c:	2000030c 	.word	0x2000030c
   82390:	00082f5d 	.word	0x00082f5d
   82394:	400a4000 	.word	0x400a4000
   82398:	00082f81 	.word	0x00082f81
   8239c:	20001374 	.word	0x20001374

000823a0 <udd_enable>:
{
   823a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	sysclk_enable_usb();
   823a2:	4b25      	ldr	r3, [pc, #148]	; (82438 <udd_enable+0x98>)
   823a4:	4798      	blx	r3
	udd_enable_periph_ck();
   823a6:	4b25      	ldr	r3, [pc, #148]	; (8243c <udd_enable+0x9c>)
   823a8:	201d      	movs	r0, #29
   823aa:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   823ac:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   823b0:	b672      	cpsid	i
   823b2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   823b6:	2400      	movs	r4, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   823b8:	f04f 0e50 	mov.w	lr, #80	; 0x50
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   823bc:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
		udd_ep_job[i].busy = false;
   823c0:	4a1f      	ldr	r2, [pc, #124]	; (82440 <udd_enable+0xa0>)
   823c2:	4d20      	ldr	r5, [pc, #128]	; (82444 <udd_enable+0xa4>)
   823c4:	7d11      	ldrb	r1, [r2, #20]
	udd_enable_periph();
   823c6:	4b20      	ldr	r3, [pc, #128]	; (82448 <udd_enable+0xa8>)
		udd_ep_job[i].busy = false;
   823c8:	f021 0105 	bic.w	r1, r1, #5
   823cc:	7511      	strb	r1, [r2, #20]
   823ce:	f892 102c 	ldrb.w	r1, [r2, #44]	; 0x2c
   823d2:	702c      	strb	r4, [r5, #0]
   823d4:	f021 0105 	bic.w	r1, r1, #5
   823d8:	f882 102c 	strb.w	r1, [r2, #44]	; 0x2c
	udd_enable_periph();
   823dc:	681a      	ldr	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   823de:	4f1b      	ldr	r7, [pc, #108]	; (8244c <udd_enable+0xac>)
   823e0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   823e4:	601a      	str	r2, [r3, #0]
   823e6:	f887 e31d 	strb.w	lr, [r7, #797]	; 0x31d
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   823ea:	f8c7 c000 	str.w	ip, [r7]
	udd_high_speed_enable();
   823ee:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   823f2:	f44f 2080 	mov.w	r0, #262144	; 0x40000
	udd_high_speed_enable();
   823f6:	f022 0203 	bic.w	r2, r2, #3
   823fa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   823fe:	4b14      	ldr	r3, [pc, #80]	; (82450 <udd_enable+0xb0>)
   82400:	4798      	blx	r3
	udd_b_idle = false;
   82402:	4b14      	ldr	r3, [pc, #80]	; (82454 <udd_enable+0xb4>)
   82404:	701c      	strb	r4, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82406:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   8240a:	b672      	cpsid	i
   8240c:	f3bf 8f5f 	dmb	sy
   82410:	4a11      	ldr	r2, [pc, #68]	; (82458 <udd_enable+0xb8>)
   82412:	702c      	strb	r4, [r5, #0]
   82414:	78d3      	ldrb	r3, [r2, #3]
   82416:	3301      	adds	r3, #1
   82418:	70d3      	strb	r3, [r2, #3]
	if (cpu_irq_is_enabled_flags(flags))
   8241a:	b921      	cbnz	r1, 82426 <udd_enable+0x86>
		cpu_irq_enable();
   8241c:	2301      	movs	r3, #1
   8241e:	702b      	strb	r3, [r5, #0]
   82420:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82424:	b662      	cpsie	i
	udd_attach();
   82426:	4b0d      	ldr	r3, [pc, #52]	; (8245c <udd_enable+0xbc>)
   82428:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   8242a:	b926      	cbnz	r6, 82436 <udd_enable+0x96>
		cpu_irq_enable();
   8242c:	2301      	movs	r3, #1
   8242e:	702b      	strb	r3, [r5, #0]
   82430:	f3bf 8f5f 	dmb	sy
   82434:	b662      	cpsie	i
}
   82436:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82438:	00082d49 	.word	0x00082d49
   8243c:	00082f5d 	.word	0x00082f5d
   82440:	2000130c 	.word	0x2000130c
   82444:	2000030c 	.word	0x2000030c
   82448:	400a4000 	.word	0x400a4000
   8244c:	e000e100 	.word	0xe000e100
   82450:	00082fb5 	.word	0x00082fb5
   82454:	20001305 	.word	0x20001305
   82458:	20001374 	.word	0x20001374
   8245c:	000822d1 	.word	0x000822d1

00082460 <udd_detach>:
{
   82460:	b510      	push	{r4, lr}
	udd_enable_periph_ck();
   82462:	4b16      	ldr	r3, [pc, #88]	; (824bc <udd_detach+0x5c>)
   82464:	201d      	movs	r0, #29
   82466:	4798      	blx	r3
	udd_detach_device();
   82468:	4b15      	ldr	r3, [pc, #84]	; (824c0 <udd_detach+0x60>)
	udd_disable_periph_ck();
   8246a:	201d      	movs	r0, #29
	udd_detach_device();
   8246c:	681a      	ldr	r2, [r3, #0]
	udd_disable_periph_ck();
   8246e:	4915      	ldr	r1, [pc, #84]	; (824c4 <udd_detach+0x64>)
	udd_detach_device();
   82470:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   82474:	601a      	str	r2, [r3, #0]
   82476:	681a      	ldr	r2, [r3, #0]
   82478:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   8247c:	601a      	str	r2, [r3, #0]
	udd_disable_periph_ck();
   8247e:	4788      	blx	r1
	if (!b_idle && udd_b_idle) {
   82480:	4b11      	ldr	r3, [pc, #68]	; (824c8 <udd_detach+0x68>)
   82482:	781a      	ldrb	r2, [r3, #0]
   82484:	b912      	cbnz	r2, 8248c <udd_detach+0x2c>
	udd_b_idle = b_idle;
   82486:	2200      	movs	r2, #0
   82488:	701a      	strb	r2, [r3, #0]
}
   8248a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8248c:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   82490:	b672      	cpsid	i
   82492:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82496:	f04f 0c00 	mov.w	ip, #0
	--sleepmgr_locks[mode];
   8249a:	490c      	ldr	r1, [pc, #48]	; (824cc <udd_detach+0x6c>)
   8249c:	480c      	ldr	r0, [pc, #48]	; (824d0 <udd_detach+0x70>)
   8249e:	788a      	ldrb	r2, [r1, #2]
   824a0:	3a01      	subs	r2, #1
   824a2:	708a      	strb	r2, [r1, #2]
   824a4:	f880 c000 	strb.w	ip, [r0]
	if (cpu_irq_is_enabled_flags(flags))
   824a8:	2c00      	cmp	r4, #0
   824aa:	d1ec      	bne.n	82486 <udd_detach+0x26>
		cpu_irq_enable();
   824ac:	2201      	movs	r2, #1
   824ae:	7002      	strb	r2, [r0, #0]
   824b0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   824b4:	b662      	cpsie	i
	udd_b_idle = b_idle;
   824b6:	2200      	movs	r2, #0
   824b8:	701a      	strb	r2, [r3, #0]
}
   824ba:	bd10      	pop	{r4, pc}
   824bc:	00082f5d 	.word	0x00082f5d
   824c0:	400a4000 	.word	0x400a4000
   824c4:	00082f81 	.word	0x00082f81
   824c8:	20001305 	.word	0x20001305
   824cc:	20001374 	.word	0x20001374
   824d0:	2000030c 	.word	0x2000030c

000824d4 <udd_is_high_speed>:
	return !Is_udd_full_speed_mode();
   824d4:	4b02      	ldr	r3, [pc, #8]	; (824e0 <udd_is_high_speed+0xc>)
   824d6:	6958      	ldr	r0, [r3, #20]
}
   824d8:	f000 0001 	and.w	r0, r0, #1
   824dc:	4770      	bx	lr
   824de:	bf00      	nop
   824e0:	400a4000 	.word	0x400a4000

000824e4 <udd_set_address>:
	udd_disable_address();
   824e4:	4b08      	ldr	r3, [pc, #32]	; (82508 <udd_set_address+0x24>)
	udd_configure_address(address);
   824e6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
	udd_disable_address();
   824ea:	681a      	ldr	r2, [r3, #0]
   824ec:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   824f0:	601a      	str	r2, [r3, #0]
	udd_configure_address(address);
   824f2:	681a      	ldr	r2, [r3, #0]
   824f4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   824f8:	4302      	orrs	r2, r0
   824fa:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   824fc:	681a      	ldr	r2, [r3, #0]
   824fe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   82502:	601a      	str	r2, [r3, #0]
}
   82504:	4770      	bx	lr
   82506:	bf00      	nop
   82508:	400a4000 	.word	0x400a4000

0008250c <udd_getaddress>:
	return udd_get_configured_address();
   8250c:	4b02      	ldr	r3, [pc, #8]	; (82518 <udd_getaddress+0xc>)
   8250e:	6818      	ldr	r0, [r3, #0]
}
   82510:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   82514:	4770      	bx	lr
   82516:	bf00      	nop
   82518:	400a4000 	.word	0x400a4000

0008251c <udd_get_frame_number>:
	return udd_frame_number();
   8251c:	4b02      	ldr	r3, [pc, #8]	; (82528 <udd_get_frame_number+0xc>)
   8251e:	6858      	ldr	r0, [r3, #4]
}
   82520:	f3c0 00ca 	ubfx	r0, r0, #3, #11
   82524:	4770      	bx	lr
   82526:	bf00      	nop
   82528:	400a4000 	.word	0x400a4000

0008252c <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
   8252c:	4b01      	ldr	r3, [pc, #4]	; (82534 <udd_set_setup_payload+0x8>)
   8252e:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
   82530:	8199      	strh	r1, [r3, #12]
}
   82532:	4770      	bx	lr
   82534:	2000133c 	.word	0x2000133c

00082538 <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   82538:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   8253c:	2a02      	cmp	r2, #2
   8253e:	d900      	bls.n	82542 <udd_ep_free+0xa>
   82540:	4770      	bx	lr
	udd_disable_endpoint(ep_index);
   82542:	2101      	movs	r1, #1
{
   82544:	b538      	push	{r3, r4, r5, lr}
	udd_disable_endpoint(ep_index);
   82546:	0153      	lsls	r3, r2, #5
   82548:	f103 2540 	add.w	r5, r3, #1073758208	; 0x40004000
   8254c:	f505 2520 	add.w	r5, r5, #655360	; 0xa0000
   82550:	462b      	mov	r3, r5
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82552:	1e54      	subs	r4, r2, #1
	udd_disable_endpoint(ep_index);
   82554:	f8c5 1108 	str.w	r1, [r5, #264]	; 0x108
	udd_configure_endpoint_bank(ep_index, 0);
   82558:	f8d5 5100 	ldr.w	r5, [r5, #256]	; 0x100
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   8255c:	eb04 0044 	add.w	r0, r4, r4, lsl #1
   82560:	4c07      	ldr	r4, [pc, #28]	; (82580 <udd_ep_free+0x48>)
	udd_configure_endpoint_bank(ep_index, 0);
   82562:	f025 05c0 	bic.w	r5, r5, #192	; 0xc0
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82566:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
	udd_configure_endpoint_bank(ep_index, 0);
   8256a:	f8c3 5100 	str.w	r5, [r3, #256]	; 0x100
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   8256e:	4620      	mov	r0, r4
   82570:	4b04      	ldr	r3, [pc, #16]	; (82584 <udd_ep_free+0x4c>)
   82572:	4798      	blx	r3
	udd_ep_job[ep_index - 1].stall_requested = false;
   82574:	7d23      	ldrb	r3, [r4, #20]
   82576:	f36f 0382 	bfc	r3, #2, #1
   8257a:	7523      	strb	r3, [r4, #20]
}
   8257c:	bd38      	pop	{r3, r4, r5, pc}
   8257e:	bf00      	nop
   82580:	2000130c 	.word	0x2000130c
   82584:	000817a9 	.word	0x000817a9

00082588 <udd_ep_is_halted>:
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   82588:	f000 000f 	and.w	r0, r0, #15
	return (Is_udd_endpoint_stall_requested(ep_index)
   8258c:	0143      	lsls	r3, r0, #5
   8258e:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   82592:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   82596:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
			|| ptr_job->stall_requested);
   8259a:	069b      	lsls	r3, r3, #26
   8259c:	d409      	bmi.n	825b2 <udd_ep_is_halted+0x2a>
   8259e:	4b06      	ldr	r3, [pc, #24]	; (825b8 <udd_ep_is_halted+0x30>)
   825a0:	3801      	subs	r0, #1
   825a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
   825a6:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
   825aa:	7d00      	ldrb	r0, [r0, #20]
   825ac:	f3c0 0080 	ubfx	r0, r0, #2, #1
   825b0:	4770      	bx	lr
   825b2:	2001      	movs	r0, #1
}
   825b4:	4770      	bx	lr
   825b6:	bf00      	nop
   825b8:	2000130c 	.word	0x2000130c

000825bc <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   825bc:	f000 030f 	and.w	r3, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   825c0:	2b02      	cmp	r3, #2
   825c2:	d82c      	bhi.n	8261e <udd_ep_set_halt+0x62>
{
   825c4:	b530      	push	{r4, r5, lr}
	if (Is_udd_endpoint_stall_requested(ep_index) // Endpoint stalled
   825c6:	4d25      	ldr	r5, [pc, #148]	; (8265c <udd_ep_set_halt+0xa0>)
   825c8:	0159      	lsls	r1, r3, #5
   825ca:	eb05 1e43 	add.w	lr, r5, r3, lsl #5
   825ce:	f8de 211c 	ldr.w	r2, [lr, #284]	; 0x11c
   825d2:	0692      	lsls	r2, r2, #26
   825d4:	d421      	bmi.n	8261a <udd_ep_set_halt+0x5e>
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   825d6:	4c22      	ldr	r4, [pc, #136]	; (82660 <udd_ep_set_halt+0xa4>)
	ptr_job = &udd_ep_job[ep_index - 1];
   825d8:	1e5a      	subs	r2, r3, #1
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   825da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   825de:	eb04 0cc2 	add.w	ip, r4, r2, lsl #3
   825e2:	f89c 4014 	ldrb.w	r4, [ip, #20]
   825e6:	f014 0204 	ands.w	r2, r4, #4
   825ea:	d116      	bne.n	8261a <udd_ep_set_halt+0x5e>
	if (ptr_job->busy == true) {
   825ec:	07e4      	lsls	r4, r4, #31
   825ee:	d418      	bmi.n	82622 <udd_ep_set_halt+0x66>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   825f0:	0602      	lsls	r2, r0, #24
   825f2:	d418      	bmi.n	82626 <udd_ep_set_halt+0x6a>
	udd_ack_stall(ep_index);
   825f4:	f44f 5500 	mov.w	r5, #8192	; 0x2000
	udd_enable_stall_handshake(ep_index);
   825f8:	2420      	movs	r4, #32
	udd_disable_endpoint_bank_autoswitch(ep_index);
   825fa:	f101 2340 	add.w	r3, r1, #1073758208	; 0x40004000
   825fe:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   82602:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
	return true;
   82606:	2001      	movs	r0, #1
	udd_disable_endpoint_bank_autoswitch(ep_index);
   82608:	f022 0202 	bic.w	r2, r2, #2
   8260c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
	udd_ack_stall(ep_index);
   82610:	f8c3 5118 	str.w	r5, [r3, #280]	; 0x118
	udd_enable_stall_handshake(ep_index);
   82614:	f8c3 4114 	str.w	r4, [r3, #276]	; 0x114
}
   82618:	bd30      	pop	{r4, r5, pc}
		return true; // Already STALL
   8261a:	2001      	movs	r0, #1
}
   8261c:	bd30      	pop	{r4, r5, pc}
		return false;
   8261e:	2000      	movs	r0, #0
}
   82620:	4770      	bx	lr
		return false;
   82622:	4610      	mov	r0, r2
}
   82624:	bd30      	pop	{r4, r5, pc}
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   82626:	f8de 211c 	ldr.w	r2, [lr, #284]	; 0x11c
   8262a:	f412 2f40 	tst.w	r2, #786432	; 0xc0000
   8262e:	d0e1      	beq.n	825f4 <udd_ep_set_halt+0x38>
			udd_enable_bank_interrupt(ep_index);
   82630:	f44f 2480 	mov.w	r4, #262144	; 0x40000
			udd_enable_endpoint_interrupt(ep_index);
   82634:	f44f 7280 	mov.w	r2, #256	; 0x100
			ptr_job->stall_requested = true;
   82638:	f89c 1014 	ldrb.w	r1, [ip, #20]
			return true;
   8263c:	2001      	movs	r0, #1
			ptr_job->stall_requested = true;
   8263e:	f041 0104 	orr.w	r1, r1, #4
   82642:	f88c 1014 	strb.w	r1, [ip, #20]
			udd_enable_bank_interrupt(ep_index);
   82646:	f103 0108 	add.w	r1, r3, #8
   8264a:	eb05 1141 	add.w	r1, r5, r1, lsl #5
   8264e:	604c      	str	r4, [r1, #4]
			udd_enable_endpoint_interrupt(ep_index);
   82650:	6929      	ldr	r1, [r5, #16]
   82652:	fa02 f303 	lsl.w	r3, r2, r3
   82656:	430b      	orrs	r3, r1
   82658:	612b      	str	r3, [r5, #16]
}
   8265a:	bd30      	pop	{r4, r5, pc}
   8265c:	400a4000 	.word	0x400a4000
   82660:	2000130c 	.word	0x2000130c

00082664 <udd_ep_clear_halt>:
	ep &= USB_EP_ADDR_MASK;
   82664:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
   82668:	2802      	cmp	r0, #2
   8266a:	d85a      	bhi.n	82722 <udd_ep_clear_halt+0xbe>
{
   8266c:	b570      	push	{r4, r5, r6, lr}
	ptr_job = &udd_ep_job[ep - 1];
   8266e:	f100 3cff 	add.w	ip, r0, #4294967295
	if (ptr_job->stall_requested) {
   82672:	4c2d      	ldr	r4, [pc, #180]	; (82728 <udd_ep_clear_halt+0xc4>)
   82674:	eb0c 014c 	add.w	r1, ip, ip, lsl #1
   82678:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
   8267c:	7d0b      	ldrb	r3, [r1, #20]
   8267e:	ea4f 024c 	mov.w	r2, ip, lsl #1
   82682:	075d      	lsls	r5, r3, #29
   82684:	d526      	bpl.n	826d4 <udd_ep_clear_halt+0x70>
		udd_disable_bank_interrupt(ep);
   82686:	f44f 2680 	mov.w	r6, #262144	; 0x40000
		udd_disable_endpoint_interrupt(ep);
   8268a:	f44f 7e80 	mov.w	lr, #256	; 0x100
		ptr_job->stall_requested = false;
   8268e:	7d0b      	ldrb	r3, [r1, #20]
		udd_disable_endpoint_interrupt(ep);
   82690:	fa0e fe00 	lsl.w	lr, lr, r0
		ptr_job->stall_requested = false;
   82694:	f36f 0382 	bfc	r3, #2, #1
   82698:	750b      	strb	r3, [r1, #20]
		udd_disable_bank_interrupt(ep);
   8269a:	4924      	ldr	r1, [pc, #144]	; (8272c <udd_ep_clear_halt+0xc8>)
   8269c:	0143      	lsls	r3, r0, #5
   8269e:	eb01 1540 	add.w	r5, r1, r0, lsl #5
   826a2:	f8c5 6108 	str.w	r6, [r5, #264]	; 0x108
		udd_disable_endpoint_interrupt(ep);
   826a6:	6908      	ldr	r0, [r1, #16]
   826a8:	ea20 000e 	bic.w	r0, r0, lr
   826ac:	6108      	str	r0, [r1, #16]
	if (Is_udd_endpoint_stall_requested(ep)) {
   826ae:	f8d5 111c 	ldr.w	r1, [r5, #284]	; 0x11c
   826b2:	068d      	lsls	r5, r1, #26
   826b4:	d417      	bmi.n	826e6 <udd_ep_clear_halt+0x82>
		if (ptr_job->busy == true) {
   826b6:	eb02 030c 	add.w	r3, r2, ip
   826ba:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
   826be:	7d11      	ldrb	r1, [r2, #20]
   826c0:	00db      	lsls	r3, r3, #3
   826c2:	07c8      	lsls	r0, r1, #31
   826c4:	d504      	bpl.n	826d0 <udd_ep_clear_halt+0x6c>
			ptr_job->busy = false;
   826c6:	f36f 0100 	bfc	r1, #0, #1
			ptr_job->call_nohalt();
   826ca:	58e3      	ldr	r3, [r4, r3]
			ptr_job->busy = false;
   826cc:	7511      	strb	r1, [r2, #20]
			ptr_job->call_nohalt();
   826ce:	4798      	blx	r3
	return true;
   826d0:	2001      	movs	r0, #1
}
   826d2:	bd70      	pop	{r4, r5, r6, pc}
	if (Is_udd_endpoint_stall_requested(ep)) {
   826d4:	0143      	lsls	r3, r0, #5
   826d6:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   826da:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   826de:	f8d1 111c 	ldr.w	r1, [r1, #284]	; 0x11c
   826e2:	0689      	lsls	r1, r1, #26
   826e4:	d5f4      	bpl.n	826d0 <udd_ep_clear_halt+0x6c>
		if (Is_udd_stall(ep)) {
   826e6:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   826ea:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   826ee:	f8d1 011c 	ldr.w	r0, [r1, #284]	; 0x11c
   826f2:	0486      	lsls	r6, r0, #18
   826f4:	d506      	bpl.n	82704 <udd_ep_clear_halt+0xa0>
			udd_ack_stall(ep);
   826f6:	f44f 5000 	mov.w	r0, #8192	; 0x2000
   826fa:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
			udd_reset_data_toggle(ep);
   826fe:	2040      	movs	r0, #64	; 0x40
   82700:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
		udd_disable_stall_handshake(ep);
   82704:	2020      	movs	r0, #32
   82706:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   8270a:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   8270e:	460b      	mov	r3, r1
   82710:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
		udd_enable_endpoint_bank_autoswitch(ep);
   82714:	f8d1 1104 	ldr.w	r1, [r1, #260]	; 0x104
   82718:	f041 0102 	orr.w	r1, r1, #2
   8271c:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	if (b_stall_cleared) {
   82720:	e7c9      	b.n	826b6 <udd_ep_clear_halt+0x52>
		return false;
   82722:	2000      	movs	r0, #0
}
   82724:	4770      	bx	lr
   82726:	bf00      	nop
   82728:	2000130c 	.word	0x2000130c
   8272c:	400a4000 	.word	0x400a4000

00082730 <udd_ep_run>:
	ep &= USB_EP_ADDR_MASK;
   82730:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
   82734:	2802      	cmp	r0, #2
   82736:	d857      	bhi.n	827e8 <udd_ep_run+0xb8>
{
   82738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if ((!Is_udd_endpoint_enabled(ep))
   8273c:	ea4f 1c40 	mov.w	ip, r0, lsl #5
   82740:	f10c 2c40 	add.w	ip, ip, #1073758208	; 0x40004000
   82744:	f50c 2c20 	add.w	ip, ip, #655360	; 0xa0000
   82748:	f8dc 410c 	ldr.w	r4, [ip, #268]	; 0x10c
   8274c:	07e5      	lsls	r5, r4, #31
   8274e:	d548      	bpl.n	827e2 <udd_ep_run+0xb2>
			|| Is_udd_endpoint_stall_requested(ep)
   82750:	f8dc 411c 	ldr.w	r4, [ip, #284]	; 0x11c
   82754:	06a4      	lsls	r4, r4, #26
   82756:	d444      	bmi.n	827e2 <udd_ep_run+0xb2>
	ptr_job = &udd_ep_job[ep - 1];
   82758:	1e45      	subs	r5, r0, #1
			|| ptr_job->stall_requested) {
   8275a:	4e28      	ldr	r6, [pc, #160]	; (827fc <udd_ep_run+0xcc>)
   8275c:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
   82760:	eb06 0ccc 	add.w	ip, r6, ip, lsl #3
   82764:	f89c 4014 	ldrb.w	r4, [ip, #20]
   82768:	006f      	lsls	r7, r5, #1
   8276a:	f014 0e04 	ands.w	lr, r4, #4
   8276e:	d138      	bne.n	827e2 <udd_ep_run+0xb2>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82770:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   82774:	b672      	cpsid	i
   82776:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8277a:	f8df 8084 	ldr.w	r8, [pc, #132]	; 82800 <udd_ep_run+0xd0>
   8277e:	f888 e000 	strb.w	lr, [r8]
	if (ptr_job->busy == true) {
   82782:	f89c e014 	ldrb.w	lr, [ip, #20]
   82786:	f01e 0f01 	tst.w	lr, #1
   8278a:	d129      	bne.n	827e0 <udd_ep_run+0xb0>
	ptr_job->busy = true;
   8278c:	f89c e014 	ldrb.w	lr, [ip, #20]
   82790:	f04e 0e01 	orr.w	lr, lr, #1
   82794:	f88c e014 	strb.w	lr, [ip, #20]
	if (cpu_irq_is_enabled_flags(flags))
   82798:	b92c      	cbnz	r4, 827a6 <udd_ep_run+0x76>
		cpu_irq_enable();
   8279a:	2401      	movs	r4, #1
   8279c:	f888 4000 	strb.w	r4, [r8]
   827a0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   827a4:	b662      	cpsie	i
	ptr_job->buf_cnt = 0;
   827a6:	f04f 0c00 	mov.w	ip, #0
	ptr_job->call_trans = callback;
   827aa:	f8dd e018 	ldr.w	lr, [sp, #24]
	ptr_job->buf = buf;
   827ae:	197c      	adds	r4, r7, r5
	ptr_job->call_trans = callback;
   827b0:	f846 e034 	str.w	lr, [r6, r4, lsl #3]
	ptr_job->buf = buf;
   827b4:	eb06 04c4 	add.w	r4, r6, r4, lsl #3
	ptr_job->buf_size = buf_size;
   827b8:	e9c4 2301 	strd	r2, r3, [r4, #4]
	ptr_job->buf_load = 0;
   827bc:	e9c4 cc03 	strd	ip, ip, [r4, #12]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   827c0:	b911      	cbnz	r1, 827c8 <udd_ep_run+0x98>
   827c2:	fab3 f183 	clz	r1, r3
   827c6:	0949      	lsrs	r1, r1, #5
   827c8:	197b      	adds	r3, r7, r5
   827ca:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
   827ce:	7d1a      	ldrb	r2, [r3, #20]
   827d0:	f361 0241 	bfi	r2, r1, #1, #1
   827d4:	751a      	strb	r2, [r3, #20]
	udd_ep_trans_done(ep);
   827d6:	490b      	ldr	r1, [pc, #44]	; (82804 <udd_ep_run+0xd4>)
   827d8:	4788      	blx	r1
	return true;
   827da:	2001      	movs	r0, #1
}
   827dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (cpu_irq_is_enabled_flags(flags))
   827e0:	b124      	cbz	r4, 827ec <udd_ep_run+0xbc>
		return false;
   827e2:	2000      	movs	r0, #0
}
   827e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return false;
   827e8:	2000      	movs	r0, #0
}
   827ea:	4770      	bx	lr
		cpu_irq_enable();
   827ec:	2301      	movs	r3, #1
   827ee:	f888 3000 	strb.w	r3, [r8]
   827f2:	f3bf 8f5f 	dmb	sy
   827f6:	b662      	cpsie	i
		return false; // Job already on going
   827f8:	4620      	mov	r0, r4
}
   827fa:	e7f3      	b.n	827e4 <udd_ep_run+0xb4>
   827fc:	2000130c 	.word	0x2000130c
   82800:	2000030c 	.word	0x2000030c
   82804:	000817e9 	.word	0x000817e9

00082808 <udd_ep_alloc>:
{
   82808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ep = ep & USB_EP_ADDR_MASK;
   8280c:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
   82810:	2c02      	cmp	r4, #2
{
   82812:	b085      	sub	sp, #20
	if (ep > USB_DEVICE_MAX_EP) {
   82814:	f200 80d4 	bhi.w	829c0 <udd_ep_alloc+0x1b8>
	if (Is_udd_endpoint_enabled(ep)) {
   82818:	0165      	lsls	r5, r4, #5
   8281a:	f105 2640 	add.w	r6, r5, #1073758208	; 0x40004000
   8281e:	f506 2620 	add.w	r6, r6, #655360	; 0xa0000
   82822:	f8d6 710c 	ldr.w	r7, [r6, #268]	; 0x10c
   82826:	f017 0701 	ands.w	r7, r7, #1
   8282a:	f040 80c9 	bne.w	829c0 <udd_ep_alloc+0x1b8>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   8282e:	f001 0c03 	and.w	ip, r1, #3
   82832:	f1bc 0f01 	cmp.w	ip, #1
   82836:	f000 80c7 	beq.w	829c8 <udd_ep_alloc+0x1c0>
   8283a:	f1ac 0c02 	sub.w	ip, ip, #2
   8283e:	f1bc 0f01 	cmp.w	ip, #1
   82842:	f200 80bd 	bhi.w	829c0 <udd_ep_alloc+0x1b8>
	} else if (MaxEndpointSize & (0x3u << 11)) {
   82846:	f412 5ec0 	ands.w	lr, r2, #6144	; 0x1800
   8284a:	f040 80b9 	bne.w	829c0 <udd_ep_alloc+0x1b8>
	uint8_t nb_bank, bank, nb_tran = 0, i;
   8284e:	46f4      	mov	ip, lr
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   82850:	f105 2640 	add.w	r6, r5, #1073758208	; 0x40004000
   82854:	f506 2620 	add.w	r6, r6, #655360	; 0xa0000
   82858:	f8d6 3100 	ldr.w	r3, [r6, #256]	; 0x100
   8285c:	f010 0f80 	tst.w	r0, #128	; 0x80
   82860:	bf18      	it	ne
   82862:	2708      	movne	r7, #8
   82864:	0109      	lsls	r1, r1, #4
   82866:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
   8286a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
   8286e:	f001 0030 	and.w	r0, r1, #48	; 0x30
   82872:	f023 0303 	bic.w	r3, r3, #3
   82876:	f080 80ba 	bcs.w	829ee <udd_ep_alloc+0x1e6>
   8287a:	2a08      	cmp	r2, #8
   8287c:	bf38      	it	cc
   8287e:	2208      	movcc	r2, #8
   82880:	0052      	lsls	r2, r2, #1
   82882:	3a01      	subs	r2, #1
   82884:	fab2 f282 	clz	r2, r2
   82888:	f1c2 021c 	rsb	r2, r2, #28
   8288c:	f1be 0f00 	cmp.w	lr, #0
   82890:	d001      	beq.n	82896 <udd_ep_alloc+0x8e>
   82892:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
   82896:	4303      	orrs	r3, r0
   82898:	433b      	orrs	r3, r7
   8289a:	4313      	orrs	r3, r2
   8289c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   828a0:	f8c6 3100 	str.w	r3, [r6, #256]	; 0x100
	if (!Is_udd_endpoint_mapped(ep)) {
   828a4:	f8d6 3100 	ldr.w	r3, [r6, #256]	; 0x100
   828a8:	2b00      	cmp	r3, #0
   828aa:	f280 8089 	bge.w	829c0 <udd_ep_alloc+0x1b8>
	udd_enable_endpoint(ep);
   828ae:	f04f 0c01 	mov.w	ip, #1
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   828b2:	2302      	movs	r3, #2
	ep_allocated = 0;
   828b4:	2500      	movs	r5, #0
		if (Is_udd_endpoint_enabled(i)) {
   828b6:	4f5c      	ldr	r7, [pc, #368]	; (82a28 <udd_ep_alloc+0x220>)
	udd_enable_endpoint(ep);
   828b8:	f8c6 c104 	str.w	ip, [r6, #260]	; 0x104
		if (Is_udd_endpoint_enabled(i)) {
   828bc:	eb07 1043 	add.w	r0, r7, r3, lsl #5
   828c0:	f8d0 110c 	ldr.w	r1, [r0, #268]	; 0x10c
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   828c4:	1e5e      	subs	r6, r3, #1
		if (Is_udd_endpoint_enabled(i)) {
   828c6:	07c9      	lsls	r1, r1, #31
   828c8:	ea4f 1243 	mov.w	r2, r3, lsl #5
   828cc:	d514      	bpl.n	828f8 <udd_ep_alloc+0xf0>
   828ce:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
   828d2:	f502 2220 	add.w	r2, r2, #655360	; 0xa0000
			bank = udd_get_endpoint_bank(i);
   828d6:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
			ep_allocated |=  bank << (i * 2);
   828da:	005b      	lsls	r3, r3, #1
			udd_disable_endpoint(i);
   828dc:	f8c0 c108 	str.w	ip, [r0, #264]	; 0x108
			ep_allocated |=  bank << (i * 2);
   828e0:	f3c1 1181 	ubfx	r1, r1, #6, #2
   828e4:	fa01 f303 	lsl.w	r3, r1, r3
			udd_configure_endpoint_bank(i, 0);
   828e8:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
			ep_allocated |=  bank << (i * 2);
   828ec:	432b      	orrs	r3, r5
			udd_configure_endpoint_bank(i, 0);
   828ee:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
			ep_allocated |=  bank << (i * 2);
   828f2:	b29d      	uxth	r5, r3
			udd_configure_endpoint_bank(i, 0);
   828f4:	f8c2 1100 	str.w	r1, [r2, #256]	; 0x100
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   828f8:	b2f3      	uxtb	r3, r6
   828fa:	429c      	cmp	r4, r3
   828fc:	d9de      	bls.n	828bc <udd_ep_alloc+0xb4>
   828fe:	4f4b      	ldr	r7, [pc, #300]	; (82a2c <udd_ep_alloc+0x224>)
   82900:	eb04 0644 	add.w	r6, r4, r4, lsl #1
   82904:	b2e0      	uxtb	r0, r4
   82906:	4686      	mov	lr, r0
   82908:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
   8290c:	e007      	b.n	8291e <udd_ep_alloc+0x116>
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   8290e:	3401      	adds	r4, #1
   82910:	fa5f fe84 	uxtb.w	lr, r4
   82914:	f1be 0f02 	cmp.w	lr, #2
   82918:	f106 0618 	add.w	r6, r6, #24
   8291c:	d869      	bhi.n	829f2 <udd_ep_alloc+0x1ea>
		udd_enable_endpoint_bank_autoswitch(i);
   8291e:	f104 38ff 	add.w	r8, r4, #4294967295
		bank = (ep_allocated >> (i * 2)) & 0x03;
   82922:	0062      	lsls	r2, r4, #1
		bool b_restart = ptr_job->busy;
   82924:	eb08 0c48 	add.w	ip, r8, r8, lsl #1
		bank = (ep_allocated >> (i * 2)) & 0x03;
   82928:	fa45 f202 	asr.w	r2, r5, r2
		bool b_restart = ptr_job->busy;
   8292c:	eb07 0ccc 	add.w	ip, r7, ip, lsl #3
   82930:	ea4f 0348 	mov.w	r3, r8, lsl #1
		if (bank == 0) {
   82934:	f012 0203 	ands.w	r2, r2, #3
   82938:	46f3      	mov	fp, lr
		bool b_restart = ptr_job->busy;
   8293a:	f10c 0910 	add.w	r9, ip, #16
   8293e:	9303      	str	r3, [sp, #12]
		if (bank == 0) {
   82940:	d0e5      	beq.n	8290e <udd_ep_alloc+0x106>
   82942:	0163      	lsls	r3, r4, #5
   82944:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   82948:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
		udd_configure_endpoint_bank(i, bank);
   8294c:	f8d3 1100 	ldr.w	r1, [r3, #256]	; 0x100
		bool b_restart = ptr_job->busy;
   82950:	f89c 0014 	ldrb.w	r0, [ip, #20]
		udd_configure_endpoint_bank(i, bank);
   82954:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
   82958:	ea41 1282 	orr.w	r2, r1, r2, lsl #6
   8295c:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
		udd_enable_endpoint(i);
   82960:	2201      	movs	r2, #1
		ptr_job->busy = false;
   82962:	4682      	mov	sl, r0
		udd_enable_endpoint(i);
   82964:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
		if (!Is_udd_endpoint_mapped(i)) {
   82968:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
		ptr_job->busy = false;
   8296c:	f36f 0a00 	bfc	sl, #0, #1
		if (!Is_udd_endpoint_mapped(i)) {
   82970:	2a00      	cmp	r2, #0
		bool b_restart = ptr_job->busy;
   82972:	f000 0001 	and.w	r0, r0, #1
		ptr_job->busy = false;
   82976:	f889 a004 	strb.w	sl, [r9, #4]
		if (!Is_udd_endpoint_mapped(i)) {
   8297a:	da3f      	bge.n	829fc <udd_ep_alloc+0x1f4>
		udd_enable_endpoint_bank_autoswitch(i);
   8297c:	f8d3 2104 	ldr.w	r2, [r3, #260]	; 0x104
   82980:	f042 0202 	orr.w	r2, r2, #2
   82984:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
		if (b_restart) {
   82988:	2800      	cmp	r0, #0
   8298a:	d0c0      	beq.n	8290e <udd_ep_alloc+0x106>
			ptr_job->buf_cnt -= ptr_job->buf_load;
   8298c:	e956 3203 	ldrd	r3, r2, [r6, #-12]
			b_restart = udd_ep_run(i,
   82990:	f856 1c10 	ldr.w	r1, [r6, #-16]
   82994:	f856 cc14 	ldr.w	ip, [r6, #-20]
   82998:	4411      	add	r1, r2
			ptr_job->buf_cnt -= ptr_job->buf_load;
   8299a:	1a9a      	subs	r2, r3, r2
   8299c:	f846 2c0c 	str.w	r2, [r6, #-12]
			b_restart = udd_ep_run(i,
   829a0:	1acb      	subs	r3, r1, r3
   829a2:	4462      	add	r2, ip
					ptr_job->b_shortpacket,
   829a4:	f899 1004 	ldrb.w	r1, [r9, #4]
			b_restart = udd_ep_run(i,
   829a8:	f856 cc18 	ldr.w	ip, [r6, #-24]
   829ac:	4670      	mov	r0, lr
   829ae:	f8cd c000 	str.w	ip, [sp]
   829b2:	f3c1 0140 	ubfx	r1, r1, #1, #1
   829b6:	f8df c078 	ldr.w	ip, [pc, #120]	; 82a30 <udd_ep_alloc+0x228>
   829ba:	47e0      	blx	ip
			if (!b_restart) {
   829bc:	2800      	cmp	r0, #0
   829be:	d1a6      	bne.n	8290e <udd_ep_alloc+0x106>
			return false;
   829c0:	2000      	movs	r0, #0
}
   829c2:	b005      	add	sp, #20
   829c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		b_iso_hbw = Is_udd_endpoint_high_bw_supported(ep);
   829c8:	2c00      	cmp	r4, #0
   829ca:	f43f af3c 	beq.w	82846 <udd_ep_alloc+0x3e>
		switch(MaxEndpointSize & (0x3u << 11)) {
   829ce:	f402 53c0 	and.w	r3, r2, #6144	; 0x1800
   829d2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
   829d6:	d00e      	beq.n	829f6 <udd_ep_alloc+0x1ee>
			nb_tran = 3;
   829d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
   829dc:	bf08      	it	eq
   829de:	f04f 0c03 	moveq.w	ip, #3
		MaxEndpointSize &= ~(0x3u << 11);
   829e2:	f422 52c0 	bic.w	r2, r2, #6144	; 0x1800
   829e6:	f04f 0e01 	mov.w	lr, #1
   829ea:	b292      	uxth	r2, r2
   829ec:	e730      	b.n	82850 <udd_ep_alloc+0x48>
   829ee:	2207      	movs	r2, #7
   829f0:	e74c      	b.n	8288c <udd_ep_alloc+0x84>
	return true;
   829f2:	2001      	movs	r0, #1
   829f4:	e7e5      	b.n	829c2 <udd_ep_alloc+0x1ba>
		switch(MaxEndpointSize & (0x3u << 11)) {
   829f6:	f04f 0c02 	mov.w	ip, #2
   829fa:	e7f2      	b.n	829e2 <udd_ep_alloc+0x1da>
			if (NULL == ptr_job->call_trans) {
   829fc:	f8dc 3000 	ldr.w	r3, [ip]
   82a00:	2b00      	cmp	r3, #0
   82a02:	d0dd      	beq.n	829c0 <udd_ep_alloc+0x1b8>
			if (Is_udd_endpoint_in(i)) {
   82a04:	4a08      	ldr	r2, [pc, #32]	; (82a28 <udd_ep_alloc+0x220>)
   82a06:	3408      	adds	r4, #8
   82a08:	0164      	lsls	r4, r4, #5
   82a0a:	5912      	ldr	r2, [r2, r4]
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   82a0c:	2001      	movs	r0, #1
			if (Is_udd_endpoint_in(i)) {
   82a0e:	0712      	lsls	r2, r2, #28
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   82a10:	9a03      	ldr	r2, [sp, #12]
				i |= USB_EP_DIR_IN;
   82a12:	bf48      	it	mi
   82a14:	f04e 0b80 	orrmi.w	fp, lr, #128	; 0x80
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   82a18:	4442      	add	r2, r8
   82a1a:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
   82a1e:	68f9      	ldr	r1, [r7, #12]
   82a20:	465a      	mov	r2, fp
   82a22:	4798      	blx	r3
   82a24:	e7cc      	b.n	829c0 <udd_ep_alloc+0x1b8>
   82a26:	bf00      	nop
   82a28:	400a4000 	.word	0x400a4000
   82a2c:	2000130c 	.word	0x2000130c
   82a30:	00082731 	.word	0x00082731

00082a34 <udd_ep_abort>:
	udd_endpoint_dma_set_control(ep_index, 0);
   82a34:	2100      	movs	r1, #0
   82a36:	4b17      	ldr	r3, [pc, #92]	; (82a94 <udd_ep_abort+0x60>)
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   82a38:	f000 020f 	and.w	r2, r0, #15
	udd_endpoint_dma_set_control(ep_index, 0);
   82a3c:	eb03 1302 	add.w	r3, r3, r2, lsl #4
	if (ep & USB_EP_DIR_IN) {
   82a40:	0600      	lsls	r0, r0, #24
{
   82a42:	b410      	push	{r4}
	udd_endpoint_dma_set_control(ep_index, 0);
   82a44:	6099      	str	r1, [r3, #8]
	if (ep & USB_EP_DIR_IN) {
   82a46:	d40a      	bmi.n	82a5e <udd_ep_abort+0x2a>
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82a48:	4c13      	ldr	r4, [pc, #76]	; (82a98 <udd_ep_abort+0x64>)
   82a4a:	4814      	ldr	r0, [pc, #80]	; (82a9c <udd_ep_abort+0x68>)
   82a4c:	1e53      	subs	r3, r2, #1
   82a4e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   82a52:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
   82a56:	2101      	movs	r1, #1
   82a58:	4623      	mov	r3, r4
}
   82a5a:	bc10      	pop	{r4}
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82a5c:	4718      	bx	r3
		for(;udd_nb_busy_bank(ep_index);) {
   82a5e:	0153      	lsls	r3, r2, #5
   82a60:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   82a64:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   82a68:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   82a6c:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   82a70:	d0ea      	beq.n	82a48 <udd_ep_abort+0x14>
			udd_kill_last_in_bank(ep_index);
   82a72:	f44f 7400 	mov.w	r4, #512	; 0x200
   82a76:	f503 7c8a 	add.w	ip, r3, #276	; 0x114
   82a7a:	f8cc 4000 	str.w	r4, [ip]
			while(Is_udd_kill_last(ep_index));
   82a7e:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   82a82:	0589      	lsls	r1, r1, #22
   82a84:	d4fb      	bmi.n	82a7e <udd_ep_abort+0x4a>
		for(;udd_nb_busy_bank(ep_index);) {
   82a86:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   82a8a:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   82a8e:	d1f4      	bne.n	82a7a <udd_ep_abort+0x46>
   82a90:	e7da      	b.n	82a48 <udd_ep_abort+0x14>
   82a92:	bf00      	nop
   82a94:	400a4300 	.word	0x400a4300
   82a98:	000817a9 	.word	0x000817a9
   82a9c:	2000130c 	.word	0x2000130c

00082aa0 <udd_test_mode_j>:
	udd_enable_hs_test_mode();
   82aa0:	4a07      	ldr	r2, [pc, #28]	; (82ac0 <udd_test_mode_j+0x20>)
   82aa2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82aa6:	f023 0303 	bic.w	r3, r3, #3
   82aaa:	f043 0302 	orr.w	r3, r3, #2
   82aae:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_j();
   82ab2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82ab6:	f043 0304 	orr.w	r3, r3, #4
   82aba:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   82abe:	4770      	bx	lr
   82ac0:	400a4000 	.word	0x400a4000

00082ac4 <udd_test_mode_k>:
	udd_enable_hs_test_mode();
   82ac4:	4a07      	ldr	r2, [pc, #28]	; (82ae4 <udd_test_mode_k+0x20>)
   82ac6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82aca:	f023 0303 	bic.w	r3, r3, #3
   82ace:	f043 0302 	orr.w	r3, r3, #2
   82ad2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_k();
   82ad6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82ada:	f043 0308 	orr.w	r3, r3, #8
   82ade:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   82ae2:	4770      	bx	lr
   82ae4:	400a4000 	.word	0x400a4000

00082ae8 <udd_test_mode_se0_nak>:
	udd_enable_hs_test_mode();
   82ae8:	4a04      	ldr	r2, [pc, #16]	; (82afc <udd_test_mode_se0_nak+0x14>)
   82aea:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82aee:	f023 0303 	bic.w	r3, r3, #3
   82af2:	f043 0302 	orr.w	r3, r3, #2
   82af6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   82afa:	4770      	bx	lr
   82afc:	400a4000 	.word	0x400a4000

00082b00 <udd_test_mode_packet>:
{
   82b00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82b04:	b08f      	sub	sp, #60	; 0x3c
	const uint8_t test_packet[] = {
   82b06:	466e      	mov	r6, sp
	udd_disable_endpoint(0);
   82b08:	f04f 0901 	mov.w	r9, #1
	udd_enable_hs_test_mode_packet();
   82b0c:	46ec      	mov	ip, sp
	const uint8_t test_packet[] = {
   82b0e:	4f22      	ldr	r7, [pc, #136]	; (82b98 <udd_test_mode_packet+0x98>)
	udd_disable_endpoint(0);
   82b10:	f8df 8088 	ldr.w	r8, [pc, #136]	; 82b9c <udd_test_mode_packet+0x9c>
	const uint8_t test_packet[] = {
   82b14:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   82b16:	c60f      	stmia	r6!, {r0, r1, r2, r3}
   82b18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   82b1a:	c60f      	stmia	r6!, {r0, r1, r2, r3}
   82b1c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   82b1e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
   82b20:	e897 0003 	ldmia.w	r7, {r0, r1}
   82b24:	f846 0b04 	str.w	r0, [r6], #4
   82b28:	7031      	strb	r1, [r6, #0]
	udd_disable_endpoint(0);
   82b2a:	f8c8 9108 	str.w	r9, [r8, #264]	; 0x108
	udd_configure_endpoint(0, // endpoint number: 0
   82b2e:	f8d8 3100 	ldr.w	r3, [r8, #256]	; 0x100
   82b32:	f1cc 5400 	rsb	r4, ip, #536870912	; 0x20000000
   82b36:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
   82b3a:	f023 0303 	bic.w	r3, r3, #3
   82b3e:	f043 036b 	orr.w	r3, r3, #107	; 0x6b
   82b42:	f8c8 3100 	str.w	r3, [r8, #256]	; 0x100
	udd_enable_endpoint(0);
   82b46:	f8c8 9104 	str.w	r9, [r8, #260]	; 0x104
	udd_enable_hs_test_mode();
   82b4a:	f8d8 30e0 	ldr.w	r3, [r8, #224]	; 0xe0
	udd_enable_hs_test_mode_packet();
   82b4e:	f04f 0e00 	mov.w	lr, #0
	udd_enable_hs_test_mode();
   82b52:	f023 0303 	bic.w	r3, r3, #3
   82b56:	f043 0302 	orr.w	r3, r3, #2
   82b5a:	f8c8 30e0 	str.w	r3, [r8, #224]	; 0xe0
	udd_enable_hs_test_mode_packet();
   82b5e:	f8d8 30e0 	ldr.w	r3, [r8, #224]	; 0xe0
   82b62:	ad0d      	add	r5, sp, #52	; 0x34
   82b64:	f043 0310 	orr.w	r3, r3, #16
   82b68:	f504 14c0 	add.w	r4, r4, #1572864	; 0x180000
   82b6c:	f8c8 30e0 	str.w	r3, [r8, #224]	; 0xe0
	for (i = 0; i < sizeof(test_packet); i++) {
   82b70:	e001      	b.n	82b76 <udd_test_mode_packet+0x76>
		*ptr_dest++ = *ptr_src++;
   82b72:	f81c ef01 	ldrb.w	lr, [ip, #1]!
	for (i = 0; i < sizeof(test_packet); i++) {
   82b76:	45ac      	cmp	ip, r5
		*ptr_dest++ = *ptr_src++;
   82b78:	f804 e00c 	strb.w	lr, [r4, ip]
	for (i = 0; i < sizeof(test_packet); i++) {
   82b7c:	d1f9      	bne.n	82b72 <udd_test_mode_packet+0x72>
	udd_ack_in_send(0);
   82b7e:	f44f 6180 	mov.w	r1, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   82b82:	f44f 6200 	mov.w	r2, #2048	; 0x800
	udd_ack_in_send(0);
   82b86:	4b05      	ldr	r3, [pc, #20]	; (82b9c <udd_test_mode_packet+0x9c>)
   82b88:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82b8c:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
}
   82b90:	b00f      	add	sp, #60	; 0x3c
   82b92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82b96:	bf00      	nop
   82b98:	0008a5b8 	.word	0x0008a5b8
   82b9c:	400a4000 	.word	0x400a4000

00082ba0 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   82ba0:	3801      	subs	r0, #1
   82ba2:	2802      	cmp	r0, #2
   82ba4:	d81a      	bhi.n	82bdc <_write+0x3c>
		return -1;
	}

	for (; len != 0; --len) {
   82ba6:	b1da      	cbz	r2, 82be0 <_write+0x40>
{
   82ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82bac:	460d      	mov	r5, r1
	for (; len != 0; --len) {
   82bae:	4614      	mov	r4, r2
   82bb0:	4f0c      	ldr	r7, [pc, #48]	; (82be4 <_write+0x44>)
   82bb2:	f8df 8034 	ldr.w	r8, [pc, #52]	; 82be8 <_write+0x48>
   82bb6:	1c56      	adds	r6, r2, #1
   82bb8:	e001      	b.n	82bbe <_write+0x1e>
   82bba:	3c01      	subs	r4, #1
   82bbc:	d00b      	beq.n	82bd6 <_write+0x36>
		if (ptr_put(stdio_base, *ptr++) < 0) {
   82bbe:	6838      	ldr	r0, [r7, #0]
   82bc0:	f8d8 3000 	ldr.w	r3, [r8]
   82bc4:	f815 1b01 	ldrb.w	r1, [r5], #1
   82bc8:	4798      	blx	r3
   82bca:	2800      	cmp	r0, #0
   82bcc:	eba6 0204 	sub.w	r2, r6, r4
   82bd0:	daf3      	bge.n	82bba <_write+0x1a>
		return -1;
   82bd2:	f04f 32ff 	mov.w	r2, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
   82bd6:	4610      	mov	r0, r2
   82bd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   82bdc:	f04f 32ff 	mov.w	r2, #4294967295
}
   82be0:	4610      	mov	r0, r2
   82be2:	4770      	bx	lr
   82be4:	20001358 	.word	0x20001358
   82be8:	20001354 	.word	0x20001354

00082bec <LED_Off>:
 */
void LED_Off(uint32_t led_gpio)
{
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   82bec:	281d      	cmp	r0, #29
   82bee:	d002      	beq.n	82bf6 <LED_Off+0xa>
   82bf0:	281f      	cmp	r0, #31
   82bf2:	d000      	beq.n	82bf6 <LED_Off+0xa>
			} else {
				gpio_set_pin_high(led_gpio);
			}
		}
	}
}
   82bf4:	4770      	bx	lr
				gpio_set_pin_low(led_gpio);
   82bf6:	4b01      	ldr	r3, [pc, #4]	; (82bfc <LED_Off+0x10>)
   82bf8:	4718      	bx	r3
   82bfa:	bf00      	nop
   82bfc:	00083149 	.word	0x00083149

00082c00 <LED_On>:
 */
void LED_On(uint32_t led_gpio)
{
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   82c00:	281d      	cmp	r0, #29
   82c02:	d002      	beq.n	82c0a <LED_On+0xa>
   82c04:	281f      	cmp	r0, #31
   82c06:	d000      	beq.n	82c0a <LED_On+0xa>
			} else {
				gpio_set_pin_low(led_gpio);
			}
		}
	}
}
   82c08:	4770      	bx	lr
				gpio_set_pin_high(led_gpio);
   82c0a:	4b01      	ldr	r3, [pc, #4]	; (82c10 <LED_On+0x10>)
   82c0c:	4718      	bx	r3
   82c0e:	bf00      	nop
   82c10:	0008312d 	.word	0x0008312d

00082c14 <Reset_Handler>:

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   82c14:	4917      	ldr	r1, [pc, #92]	; (82c74 <Reset_Handler+0x60>)
   82c16:	4818      	ldr	r0, [pc, #96]	; (82c78 <Reset_Handler+0x64>)
{
   82c18:	b508      	push	{r3, lr}
	if (pSrc != pDest) {
   82c1a:	4281      	cmp	r1, r0
   82c1c:	d009      	beq.n	82c32 <Reset_Handler+0x1e>
		for (; pDest < &_erelocate;) {
   82c1e:	4a17      	ldr	r2, [pc, #92]	; (82c7c <Reset_Handler+0x68>)
   82c20:	4290      	cmp	r0, r2
   82c22:	d206      	bcs.n	82c32 <Reset_Handler+0x1e>
			*pDest++ = *pSrc++;
   82c24:	3a01      	subs	r2, #1
   82c26:	1a12      	subs	r2, r2, r0
   82c28:	f022 0203 	bic.w	r2, r2, #3
   82c2c:	4b14      	ldr	r3, [pc, #80]	; (82c80 <Reset_Handler+0x6c>)
   82c2e:	3204      	adds	r2, #4
   82c30:	4798      	blx	r3
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   82c32:	4814      	ldr	r0, [pc, #80]	; (82c84 <Reset_Handler+0x70>)
   82c34:	4a14      	ldr	r2, [pc, #80]	; (82c88 <Reset_Handler+0x74>)
   82c36:	4290      	cmp	r0, r2
   82c38:	d207      	bcs.n	82c4a <Reset_Handler+0x36>
		*pDest++ = 0;
   82c3a:	3a01      	subs	r2, #1
   82c3c:	1a12      	subs	r2, r2, r0
   82c3e:	f022 0203 	bic.w	r2, r2, #3
   82c42:	2100      	movs	r1, #0
   82c44:	4b11      	ldr	r3, [pc, #68]	; (82c8c <Reset_Handler+0x78>)
   82c46:	3204      	adds	r2, #4
   82c48:	4798      	blx	r3
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82c4a:	4b11      	ldr	r3, [pc, #68]	; (82c90 <Reset_Handler+0x7c>)
   82c4c:	4911      	ldr	r1, [pc, #68]	; (82c94 <Reset_Handler+0x80>)
   82c4e:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   82c52:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82c56:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   82c5a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82c5e:	608a      	str	r2, [r1, #8]
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   82c60:	d203      	bcs.n	82c6a <Reset_Handler+0x56>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   82c62:	688b      	ldr	r3, [r1, #8]
   82c64:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   82c68:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   82c6a:	4b0b      	ldr	r3, [pc, #44]	; (82c98 <Reset_Handler+0x84>)
   82c6c:	4798      	blx	r3

	/* Branch to main function */
	main();
   82c6e:	4b0b      	ldr	r3, [pc, #44]	; (82c9c <Reset_Handler+0x88>)
   82c70:	4798      	blx	r3

	/* Infinite loop */
	while (1);
   82c72:	e7fe      	b.n	82c72 <Reset_Handler+0x5e>
   82c74:	0008aa34 	.word	0x0008aa34
   82c78:	20000000 	.word	0x20000000
   82c7c:	20000d50 	.word	0x20000d50
   82c80:	000838ad 	.word	0x000838ad
   82c84:	20000d50 	.word	0x20000d50
   82c88:	200013c4 	.word	0x200013c4
   82c8c:	00083999 	.word	0x00083999
   82c90:	00080000 	.word	0x00080000
   82c94:	e000ed00 	.word	0xe000ed00
   82c98:	0008383d 	.word	0x0008383d
   82c9c:	000802a5 	.word	0x000802a5

00082ca0 <spi_enable_clock>:
   82ca0:	2014      	movs	r0, #20
   82ca2:	4b01      	ldr	r3, [pc, #4]	; (82ca8 <spi_enable_clock+0x8>)
   82ca4:	4718      	bx	r3
   82ca6:	bf00      	nop
   82ca8:	00082f5d 	.word	0x00082f5d

00082cac <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
   82cac:	b510      	push	{r4, lr}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
   82cae:	f643 2c99 	movw	ip, #15001	; 0x3a99
{
   82cb2:	4686      	mov	lr, r0
	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
   82cb4:	e002      	b.n	82cbc <spi_write+0x10>
		if (!timeout--) {
   82cb6:	f1bc 0c01 	subs.w	ip, ip, #1
   82cba:	d012      	beq.n	82ce2 <spi_write+0x36>
	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
   82cbc:	f8de 4010 	ldr.w	r4, [lr, #16]
   82cc0:	07a4      	lsls	r4, r4, #30
   82cc2:	d5f8      	bpl.n	82cb6 <spi_write+0xa>
	if (p_spi->SPI_MR & SPI_MR_PS) {
   82cc4:	f8de 0004 	ldr.w	r0, [lr, #4]
   82cc8:	0780      	lsls	r0, r0, #30
   82cca:	d506      	bpl.n	82cda <spi_write+0x2e>
			return SPI_ERROR_TIMEOUT;
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
   82ccc:	0412      	lsls	r2, r2, #16
   82cce:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
   82cd2:	4311      	orrs	r1, r2
		if (uc_last) {
   82cd4:	b10b      	cbz	r3, 82cda <spi_write+0x2e>
			value |= SPI_TDR_LASTXFER;
   82cd6:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
   82cda:	f8ce 100c 	str.w	r1, [lr, #12]

	return SPI_OK;
   82cde:	2000      	movs	r0, #0
}
   82ce0:	bd10      	pop	{r4, pc}
			return SPI_ERROR_TIMEOUT;
   82ce2:	2001      	movs	r0, #1
}
   82ce4:	bd10      	pop	{r4, pc}
   82ce6:	bf00      	nop

00082ce8 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
   82ce8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
   82cec:	6b03      	ldr	r3, [r0, #48]	; 0x30
	if (ul_polarity) {
   82cee:	b11a      	cbz	r2, 82cf8 <spi_set_clock_polarity+0x10>
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
   82cf0:	f043 0301 	orr.w	r3, r3, #1
   82cf4:	6303      	str	r3, [r0, #48]	; 0x30
   82cf6:	4770      	bx	lr
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
   82cf8:	f023 0301 	bic.w	r3, r3, #1
   82cfc:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
   82cfe:	4770      	bx	lr

00082d00 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
   82d00:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
   82d04:	6b03      	ldr	r3, [r0, #48]	; 0x30
	if (ul_phase) {
   82d06:	b11a      	cbz	r2, 82d10 <spi_set_clock_phase+0x10>
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
   82d08:	f043 0302 	orr.w	r3, r3, #2
   82d0c:	6303      	str	r3, [r0, #48]	; 0x30
   82d0e:	4770      	bx	lr
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
   82d10:	f023 0302 	bic.w	r3, r3, #2
   82d14:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
   82d16:	4770      	bx	lr

00082d18 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
   82d18:	1e43      	subs	r3, r0, #1
   82d1a:	440b      	add	r3, r1
   82d1c:	fbb3 f0f0 	udiv	r0, r3, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
   82d20:	1e43      	subs	r3, r0, #1
   82d22:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
   82d24:	bf94      	ite	ls
   82d26:	b200      	sxthls	r0, r0
		return -1;
   82d28:	f04f 30ff 	movhi.w	r0, #4294967295
}
   82d2c:	4770      	bx	lr
   82d2e:	bf00      	nop

00082d30 <spi_set_baudrate_div>:
 * \param uc_baudrate_divider Baudrate divider from MCK.
 */
void spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
   82d30:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   82d34:	6b08      	ldr	r0, [r1, #48]	; 0x30
   82d36:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
   82d3a:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
   82d3c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82d3e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   82d42:	630b      	str	r3, [r1, #48]	; 0x30
}
   82d44:	4770      	bx	lr
   82d46:	bf00      	nop

00082d48 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
   82d48:	b510      	push	{r4, lr}
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   82d4a:	203e      	movs	r0, #62	; 0x3e
   82d4c:	4b07      	ldr	r3, [pc, #28]	; (82d6c <sysclk_enable_usb+0x24>)
   82d4e:	4798      	blx	r3
		break;
   82d50:	4c07      	ldr	r4, [pc, #28]	; (82d70 <sysclk_enable_usb+0x28>)
		return pmc_osc_is_ready_main_xtal();
   82d52:	47a0      	blx	r4
   82d54:	2800      	cmp	r0, #0
   82d56:	d0fc      	beq.n	82d52 <sysclk_enable_usb+0xa>

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
	} else {
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
   82d58:	f44f 0271 	mov.w	r2, #15794176	; 0xf10000
   82d5c:	4b05      	ldr	r3, [pc, #20]	; (82d74 <sysclk_enable_usb+0x2c>)
   82d5e:	4c06      	ldr	r4, [pc, #24]	; (82d78 <sysclk_enable_usb+0x30>)
   82d60:	61da      	str	r2, [r3, #28]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
	} else {
		return pmc_is_locked_upll();
   82d62:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   82d64:	2800      	cmp	r0, #0
   82d66:	d0fc      	beq.n	82d62 <sysclk_enable_usb+0x1a>

	pll_enable_source(CONFIG_PLL1_SOURCE);
	pll_config_defaults(&pllcfg, 1);
	pll_enable(&pllcfg, 1);
	pll_wait_for_lock(1);
}
   82d68:	bd10      	pop	{r4, pc}
   82d6a:	bf00      	nop
   82d6c:	00082eb1 	.word	0x00082eb1
   82d70:	00082ed5 	.word	0x00082ed5
   82d74:	400e0400 	.word	0x400e0400
   82d78:	00082f4d 	.word	0x00082f4d

00082d7c <sysclk_init>:
		pll_disable(1);
	}
}

void sysclk_init(void)
{
   82d7c:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   82d7e:	4812      	ldr	r0, [pc, #72]	; (82dc8 <sysclk_init+0x4c>)
   82d80:	4d12      	ldr	r5, [pc, #72]	; (82dcc <sysclk_init+0x50>)
   82d82:	47a8      	blx	r5
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   82d84:	203e      	movs	r0, #62	; 0x3e
   82d86:	4b12      	ldr	r3, [pc, #72]	; (82dd0 <sysclk_init+0x54>)
   82d88:	4798      	blx	r3
		break;
   82d8a:	4c12      	ldr	r4, [pc, #72]	; (82dd4 <sysclk_init+0x58>)
		return pmc_osc_is_ready_main_xtal();
   82d8c:	47a0      	blx	r4
   82d8e:	2800      	cmp	r0, #0
   82d90:	d0fc      	beq.n	82d8c <sysclk_init+0x10>
#  ifndef CONFIG_PLL1_SOURCE
			pmc_osc_disable_main_xtal();
#  endif
		} else if (CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_XTAL ||
				CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_BYPASS) {
			pmc_mainck_osc_select(CKGR_MOR_MOSCSEL);
   82d92:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   82d96:	4b10      	ldr	r3, [pc, #64]	; (82dd8 <sysclk_init+0x5c>)
   82d98:	4798      	blx	r3
			while(!pmc_osc_is_ready_mainck());
   82d9a:	4c10      	ldr	r4, [pc, #64]	; (82ddc <sysclk_init+0x60>)
   82d9c:	47a0      	blx	r4
   82d9e:	2800      	cmp	r0, #0
   82da0:	d0fc      	beq.n	82d9c <sysclk_init+0x20>
		pmc_disable_pllack(); // Always stop PLL first!
   82da2:	4b0f      	ldr	r3, [pc, #60]	; (82de0 <sysclk_init+0x64>)
   82da4:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   82da6:	4b0f      	ldr	r3, [pc, #60]	; (82de4 <sysclk_init+0x68>)
   82da8:	4a0f      	ldr	r2, [pc, #60]	; (82de8 <sysclk_init+0x6c>)
   82daa:	4c10      	ldr	r4, [pc, #64]	; (82dec <sysclk_init+0x70>)
   82dac:	629a      	str	r2, [r3, #40]	; 0x28
		return pmc_is_locked_pllack();
   82dae:	47a0      	blx	r4
   82db0:	2800      	cmp	r0, #0
   82db2:	d0fc      	beq.n	82dae <sysclk_init+0x32>
		}
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   82db4:	4b0e      	ldr	r3, [pc, #56]	; (82df0 <sysclk_init+0x74>)
   82db6:	2010      	movs	r0, #16
   82db8:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   82dba:	4b0e      	ldr	r3, [pc, #56]	; (82df4 <sysclk_init+0x78>)
   82dbc:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   82dbe:	462b      	mov	r3, r5

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
   82dc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
   82dc4:	4800      	ldr	r0, [pc, #0]	; (82dc8 <sysclk_init+0x4c>)
   82dc6:	4718      	bx	r3
   82dc8:	05b8d800 	.word	0x05b8d800
   82dcc:	2000011d 	.word	0x2000011d
   82dd0:	00082eb1 	.word	0x00082eb1
   82dd4:	00082ed5 	.word	0x00082ed5
   82dd8:	00082ef5 	.word	0x00082ef5
   82ddc:	00082ee5 	.word	0x00082ee5
   82de0:	00082f1d 	.word	0x00082f1d
   82de4:	400e0400 	.word	0x400e0400
   82de8:	200f3f01 	.word	0x200f3f01
   82dec:	00082f2d 	.word	0x00082f2d
   82df0:	00082e55 	.word	0x00082e55
   82df4:	00083755 	.word	0x00083755

00082df8 <pmc_switch_mck_to_mainck>:
 */
uint32_t pmc_switch_mck_to_mainck(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   82df8:	4915      	ldr	r1, [pc, #84]	; (82e50 <pmc_switch_mck_to_mainck+0x58>)
   82dfa:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82dfc:	f023 0303 	bic.w	r3, r3, #3
   82e00:	f043 0301 	orr.w	r3, r3, #1
   82e04:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_MAIN_CLK;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e06:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   82e08:	071b      	lsls	r3, r3, #28
   82e0a:	bf58      	it	pl
   82e0c:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   82e10:	d502      	bpl.n	82e18 <pmc_switch_mck_to_mainck+0x20>
   82e12:	e004      	b.n	82e1e <pmc_switch_mck_to_mainck+0x26>
			--ul_timeout) {
		if (ul_timeout == 0) {
   82e14:	3b01      	subs	r3, #1
   82e16:	d016      	beq.n	82e46 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e18:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   82e1a:	0712      	lsls	r2, r2, #28
   82e1c:	d5fa      	bpl.n	82e14 <pmc_switch_mck_to_mainck+0x1c>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   82e1e:	490c      	ldr	r1, [pc, #48]	; (82e50 <pmc_switch_mck_to_mainck+0x58>)
   82e20:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82e22:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   82e26:	4303      	orrs	r3, r0
   82e28:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e2a:	6e88      	ldr	r0, [r1, #104]	; 0x68
   82e2c:	f010 0008 	ands.w	r0, r0, #8
   82e30:	bf08      	it	eq
   82e32:	f44f 6300 	moveq.w	r3, #2048	; 0x800
   82e36:	d002      	beq.n	82e3e <pmc_switch_mck_to_mainck+0x46>
   82e38:	e007      	b.n	82e4a <pmc_switch_mck_to_mainck+0x52>
			--ul_timeout) {
		if (ul_timeout == 0) {
   82e3a:	3b01      	subs	r3, #1
   82e3c:	d003      	beq.n	82e46 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e3e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   82e40:	0712      	lsls	r2, r2, #28
   82e42:	d5fa      	bpl.n	82e3a <pmc_switch_mck_to_mainck+0x42>
			return 1;
		}
	}

	return 0;
}
   82e44:	4770      	bx	lr
			return 1;
   82e46:	2001      	movs	r0, #1
   82e48:	4770      	bx	lr
	return 0;
   82e4a:	2000      	movs	r0, #0
   82e4c:	4770      	bx	lr
   82e4e:	bf00      	nop
   82e50:	400e0400 	.word	0x400e0400

00082e54 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   82e54:	4915      	ldr	r1, [pc, #84]	; (82eac <pmc_switch_mck_to_pllack+0x58>)
   82e56:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82e58:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   82e5c:	4303      	orrs	r3, r0
   82e5e:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e60:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   82e62:	071b      	lsls	r3, r3, #28
   82e64:	bf58      	it	pl
   82e66:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   82e6a:	d502      	bpl.n	82e72 <pmc_switch_mck_to_pllack+0x1e>
   82e6c:	e004      	b.n	82e78 <pmc_switch_mck_to_pllack+0x24>
			--ul_timeout) {
		if (ul_timeout == 0) {
   82e6e:	3b01      	subs	r3, #1
   82e70:	d017      	beq.n	82ea2 <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e72:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   82e74:	0710      	lsls	r0, r2, #28
   82e76:	d5fa      	bpl.n	82e6e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   82e78:	490c      	ldr	r1, [pc, #48]	; (82eac <pmc_switch_mck_to_pllack+0x58>)
   82e7a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82e7c:	f023 0303 	bic.w	r3, r3, #3
   82e80:	f043 0302 	orr.w	r3, r3, #2
   82e84:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e86:	6e88      	ldr	r0, [r1, #104]	; 0x68
   82e88:	f010 0008 	ands.w	r0, r0, #8
   82e8c:	bf08      	it	eq
   82e8e:	f44f 6300 	moveq.w	r3, #2048	; 0x800
   82e92:	d002      	beq.n	82e9a <pmc_switch_mck_to_pllack+0x46>
   82e94:	e007      	b.n	82ea6 <pmc_switch_mck_to_pllack+0x52>
			--ul_timeout) {
		if (ul_timeout == 0) {
   82e96:	3b01      	subs	r3, #1
   82e98:	d003      	beq.n	82ea2 <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82e9a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   82e9c:	0712      	lsls	r2, r2, #28
   82e9e:	d5fa      	bpl.n	82e96 <pmc_switch_mck_to_pllack+0x42>
			return 1;
		}
	}

	return 0;
}
   82ea0:	4770      	bx	lr
			return 1;
   82ea2:	2001      	movs	r0, #1
   82ea4:	4770      	bx	lr
	return 0;
   82ea6:	2000      	movs	r0, #0
   82ea8:	4770      	bx	lr
   82eaa:	bf00      	nop
   82eac:	400e0400 	.word	0x400e0400

00082eb0 <pmc_osc_enable_main_xtal>:
 *
 * \param ul_xtal_startup_time Xtal start-up time, in number of slow clocks.
 */
void pmc_osc_enable_main_xtal(uint32_t ul_xtal_startup_time)
{
	uint32_t mor = PMC->CKGR_MOR;
   82eb0:	4a07      	ldr	r2, [pc, #28]	; (82ed0 <pmc_osc_enable_main_xtal+0x20>)
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   82eb2:	0203      	lsls	r3, r0, #8
	uint32_t mor = PMC->CKGR_MOR;
   82eb4:	6a11      	ldr	r1, [r2, #32]
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   82eb6:	b29b      	uxth	r3, r3
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
   82eb8:	f021 0103 	bic.w	r1, r1, #3
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   82ebc:	430b      	orrs	r3, r1
   82ebe:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   82ec2:	f043 0301 	orr.w	r3, r3, #1
	PMC->CKGR_MOR = mor;
   82ec6:	6213      	str	r3, [r2, #32]
	/* Wait the main Xtal to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   82ec8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   82eca:	07db      	lsls	r3, r3, #31
   82ecc:	d5fc      	bpl.n	82ec8 <pmc_osc_enable_main_xtal+0x18>
}
   82ece:	4770      	bx	lr
   82ed0:	400e0400 	.word	0x400e0400

00082ed4 <pmc_osc_is_ready_main_xtal>:
 *
 * \retval 0 main crystal is not ready, otherwise ready.
 */
uint32_t pmc_osc_is_ready_main_xtal(void)
{
	return (PMC->PMC_SR & PMC_SR_MOSCXTS);
   82ed4:	4b02      	ldr	r3, [pc, #8]	; (82ee0 <pmc_osc_is_ready_main_xtal+0xc>)
   82ed6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   82ed8:	f000 0001 	and.w	r0, r0, #1
   82edc:	4770      	bx	lr
   82ede:	bf00      	nop
   82ee0:	400e0400 	.word	0x400e0400

00082ee4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   82ee4:	4b02      	ldr	r3, [pc, #8]	; (82ef0 <pmc_osc_is_ready_mainck+0xc>)
   82ee6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   82ee8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   82eec:	4770      	bx	lr
   82eee:	bf00      	nop
   82ef0:	400e0400 	.word	0x400e0400

00082ef4 <pmc_mainck_osc_select>:
 *
 * \param ul_xtal_rc 0 internal RC is selected, otherwise Main Crystal.
 */
void pmc_mainck_osc_select(uint32_t ul_xtal_rc)
{
	uint32_t mor = PMC->CKGR_MOR;
   82ef4:	4b08      	ldr	r3, [pc, #32]	; (82f18 <pmc_mainck_osc_select+0x24>)
   82ef6:	6a1b      	ldr	r3, [r3, #32]
	if (ul_xtal_rc) {
   82ef8:	b130      	cbz	r0, 82f08 <pmc_mainck_osc_select+0x14>
		mor |=  CKGR_MOR_MOSCSEL;
	} else {
		mor &= ~CKGR_MOR_MOSCSEL;
	}
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   82efa:	4a07      	ldr	r2, [pc, #28]	; (82f18 <pmc_mainck_osc_select+0x24>)
		mor |=  CKGR_MOR_MOSCSEL;
   82efc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   82f00:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   82f04:	6213      	str	r3, [r2, #32]
}
   82f06:	4770      	bx	lr
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   82f08:	4a03      	ldr	r2, [pc, #12]	; (82f18 <pmc_mainck_osc_select+0x24>)
		mor &= ~CKGR_MOR_MOSCSEL;
   82f0a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   82f0e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   82f12:	6213      	str	r3, [r2, #32]
}
   82f14:	4770      	bx	lr
   82f16:	bf00      	nop
   82f18:	400e0400 	.word	0x400e0400

00082f1c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   82f1c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   82f20:	4b01      	ldr	r3, [pc, #4]	; (82f28 <pmc_disable_pllack+0xc>)
   82f22:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
   82f24:	4770      	bx	lr
   82f26:	bf00      	nop
   82f28:	400e0400 	.word	0x400e0400

00082f2c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   82f2c:	4b02      	ldr	r3, [pc, #8]	; (82f38 <pmc_is_locked_pllack+0xc>)
   82f2e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   82f30:	f000 0002 	and.w	r0, r0, #2
   82f34:	4770      	bx	lr
   82f36:	bf00      	nop
   82f38:	400e0400 	.word	0x400e0400

00082f3c <pmc_disable_upll_clock>:
/**
 * \brief Disable UPLL clock.
 */
void pmc_disable_upll_clock(void)
{
	PMC->CKGR_UCKR &= ~CKGR_UCKR_UPLLEN;
   82f3c:	4a02      	ldr	r2, [pc, #8]	; (82f48 <pmc_disable_upll_clock+0xc>)
   82f3e:	69d3      	ldr	r3, [r2, #28]
   82f40:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   82f44:	61d3      	str	r3, [r2, #28]
}
   82f46:	4770      	bx	lr
   82f48:	400e0400 	.word	0x400e0400

00082f4c <pmc_is_locked_upll>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_upll(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKU);
   82f4c:	4b02      	ldr	r3, [pc, #8]	; (82f58 <pmc_is_locked_upll+0xc>)
   82f4e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   82f50:	f000 0040 	and.w	r0, r0, #64	; 0x40
   82f54:	4770      	bx	lr
   82f56:	bf00      	nop
   82f58:	400e0400 	.word	0x400e0400

00082f5c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   82f5c:	281d      	cmp	r0, #29
   82f5e:	d80a      	bhi.n	82f76 <pmc_enable_periph_clk+0x1a>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   82f60:	2301      	movs	r3, #1
   82f62:	4a06      	ldr	r2, [pc, #24]	; (82f7c <pmc_enable_periph_clk+0x20>)
   82f64:	4083      	lsls	r3, r0
   82f66:	6991      	ldr	r1, [r2, #24]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   82f68:	2000      	movs	r0, #0
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   82f6a:	ea33 0101 	bics.w	r1, r3, r1
   82f6e:	d001      	beq.n	82f74 <pmc_enable_periph_clk+0x18>
			PMC->PMC_PCER0 = 1 << ul_id;
   82f70:	6113      	str	r3, [r2, #16]
   82f72:	4770      	bx	lr
}
   82f74:	4770      	bx	lr
		return 1;
   82f76:	2001      	movs	r0, #1
   82f78:	4770      	bx	lr
   82f7a:	bf00      	nop
   82f7c:	400e0400 	.word	0x400e0400

00082f80 <pmc_disable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   82f80:	281d      	cmp	r0, #29
   82f82:	d80a      	bhi.n	82f9a <pmc_disable_periph_clk+0x1a>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   82f84:	2301      	movs	r3, #1
   82f86:	4a06      	ldr	r2, [pc, #24]	; (82fa0 <pmc_disable_periph_clk+0x20>)
   82f88:	4083      	lsls	r3, r0
   82f8a:	6991      	ldr	r1, [r2, #24]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
   82f8c:	2000      	movs	r0, #0
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   82f8e:	ea33 0101 	bics.w	r1, r3, r1
   82f92:	d000      	beq.n	82f96 <pmc_disable_periph_clk+0x16>
}
   82f94:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
   82f96:	6153      	str	r3, [r2, #20]
   82f98:	4770      	bx	lr
		return 1;
   82f9a:	2001      	movs	r0, #1
   82f9c:	4770      	bx	lr
   82f9e:	bf00      	nop
   82fa0:	400e0400 	.word	0x400e0400

00082fa4 <pmc_enable_pck>:
 *
 * \param ul_id Id of the programmable clock.
 */
void pmc_enable_pck(uint32_t ul_id)
{
	PMC->PMC_SCER = PMC_SCER_PCK0 << ul_id;
   82fa4:	f44f 7380 	mov.w	r3, #256	; 0x100
   82fa8:	4a01      	ldr	r2, [pc, #4]	; (82fb0 <pmc_enable_pck+0xc>)
   82faa:	4083      	lsls	r3, r0
   82fac:	6013      	str	r3, [r2, #0]
}
   82fae:	4770      	bx	lr
   82fb0:	400e0400 	.word	0x400e0400

00082fb4 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
   82fb4:	4b03      	ldr	r3, [pc, #12]	; (82fc4 <pmc_set_fast_startup_input+0x10>)
	ul_inputs &= PMC_FAST_STARTUP_Msk;
   82fb6:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
   82fba:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   82fbc:	4310      	orrs	r0, r2
   82fbe:	6718      	str	r0, [r3, #112]	; 0x70
}
   82fc0:	4770      	bx	lr
   82fc2:	bf00      	nop
   82fc4:	400e0400 	.word	0x400e0400

00082fc8 <pmc_enable_waitmode>:
 */
void pmc_enable_waitmode(void)
{
	uint32_t i;

	PMC->PMC_FSMR |= PMC_FSMR_LPM; /* Enter Wait mode */
   82fc8:	490a      	ldr	r1, [pc, #40]	; (82ff4 <pmc_enable_waitmode+0x2c>)
	SCB->SCR &= (uint32_t) ~ SCB_SCR_SLEEPDEEP_Msk; /* Deep sleep */
   82fca:	4a0b      	ldr	r2, [pc, #44]	; (82ff8 <pmc_enable_waitmode+0x30>)
	PMC->PMC_FSMR |= PMC_FSMR_LPM; /* Enter Wait mode */
   82fcc:	6f0b      	ldr	r3, [r1, #112]	; 0x70
   82fce:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   82fd2:	670b      	str	r3, [r1, #112]	; 0x70
	SCB->SCR &= (uint32_t) ~ SCB_SCR_SLEEPDEEP_Msk; /* Deep sleep */
   82fd4:	6913      	ldr	r3, [r2, #16]
   82fd6:	f023 0304 	bic.w	r3, r3, #4
   82fda:	6113      	str	r3, [r2, #16]
  __ASM volatile ("wfe");
   82fdc:	bf20      	wfe
   82fde:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
   82fe2:	bf00      	nop
	__WFE();

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
   82fe4:	3b01      	subs	r3, #1
   82fe6:	d1fc      	bne.n	82fe2 <pmc_enable_waitmode+0x1a>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
   82fe8:	4a02      	ldr	r2, [pc, #8]	; (82ff4 <pmc_enable_waitmode+0x2c>)
   82fea:	6a13      	ldr	r3, [r2, #32]
   82fec:	071b      	lsls	r3, r3, #28
   82fee:	d5fc      	bpl.n	82fea <pmc_enable_waitmode+0x22>

}
   82ff0:	4770      	bx	lr
   82ff2:	bf00      	nop
   82ff4:	400e0400 	.word	0x400e0400
   82ff8:	e000ed00 	.word	0xe000ed00

00082ffc <udi_vendor_getsetting>:
	return false; // Not supported request
}

uint8_t udi_vendor_getsetting(void)
{
	return udi_vendor_alternate_setting;
   82ffc:	4b01      	ldr	r3, [pc, #4]	; (83004 <udi_vendor_getsetting+0x8>)
}
   82ffe:	7818      	ldrb	r0, [r3, #0]
   83000:	4770      	bx	lr
   83002:	bf00      	nop
   83004:	2000135c 	.word	0x2000135c

00083008 <udi_vendor_disable>:
	if (0 == udi_vendor_alternate_setting) {
   83008:	4b02      	ldr	r3, [pc, #8]	; (83014 <udi_vendor_disable+0xc>)
   8300a:	781b      	ldrb	r3, [r3, #0]
   8300c:	b103      	cbz	r3, 83010 <udi_vendor_disable+0x8>
}
   8300e:	4770      	bx	lr
		UDI_VENDOR_DISABLE_EXT();
   83010:	4b01      	ldr	r3, [pc, #4]	; (83018 <udi_vendor_disable+0x10>)
   83012:	4718      	bx	r3
   83014:	2000135c 	.word	0x2000135c
   83018:	00080745 	.word	0x00080745

0008301c <udi_vendor_setup>:
	if (Udd_setup_is_in()) {
   8301c:	4b08      	ldr	r3, [pc, #32]	; (83040 <udi_vendor_setup+0x24>)
   8301e:	f993 2000 	ldrsb.w	r2, [r3]
   83022:	781b      	ldrb	r3, [r3, #0]
   83024:	2a00      	cmp	r2, #0
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   83026:	f003 0360 	and.w	r3, r3, #96	; 0x60
	if (Udd_setup_is_in()) {
   8302a:	db03      	blt.n	83034 <udi_vendor_setup+0x18>
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   8302c:	2b40      	cmp	r3, #64	; 0x40
   8302e:	d005      	beq.n	8303c <udi_vendor_setup+0x20>
}
   83030:	2000      	movs	r0, #0
   83032:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   83034:	2b40      	cmp	r3, #64	; 0x40
   83036:	d1fb      	bne.n	83030 <udi_vendor_setup+0x14>
			return UDI_VENDOR_SETUP_IN_RECEIVED();
   83038:	4b02      	ldr	r3, [pc, #8]	; (83044 <udi_vendor_setup+0x28>)
   8303a:	4718      	bx	r3
			return UDI_VENDOR_SETUP_OUT_RECEIVED();
   8303c:	4b02      	ldr	r3, [pc, #8]	; (83048 <udi_vendor_setup+0x2c>)
   8303e:	4718      	bx	r3
   83040:	2000133c 	.word	0x2000133c
   83044:	000807a1 	.word	0x000807a1
   83048:	00080751 	.word	0x00080751

0008304c <udi_vendor_enable>:
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   8304c:	4b06      	ldr	r3, [pc, #24]	; (83068 <udi_vendor_enable+0x1c>)
{
   8304e:	b510      	push	{r4, lr}
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   83050:	4798      	blx	r3
   83052:	4a06      	ldr	r2, [pc, #24]	; (8306c <udi_vendor_enable+0x20>)
   83054:	78c3      	ldrb	r3, [r0, #3]
   83056:	7013      	strb	r3, [r2, #0]
	if (0 == udi_vendor_alternate_setting) {
   83058:	b10b      	cbz	r3, 8305e <udi_vendor_enable+0x12>
}
   8305a:	2001      	movs	r0, #1
   8305c:	bd10      	pop	{r4, pc}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   8305e:	4b04      	ldr	r3, [pc, #16]	; (83070 <udi_vendor_enable+0x24>)
}
   83060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   83064:	4718      	bx	r3
   83066:	bf00      	nop
   83068:	00080f05 	.word	0x00080f05
   8306c:	2000135c 	.word	0x2000135c
   83070:	0008071d 	.word	0x0008071d

00083074 <udi_vendor_bulk_in_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_in_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   83074:	b530      	push	{r4, r5, lr}
   83076:	4684      	mov	ip, r0
   83078:	4615      	mov	r5, r2
   8307a:	b083      	sub	sp, #12
   8307c:	460b      	mov	r3, r1
	return udd_ep_run(UDI_VENDOR_EP_BULK_IN,
   8307e:	4662      	mov	r2, ip
   83080:	2100      	movs	r1, #0
   83082:	4c03      	ldr	r4, [pc, #12]	; (83090 <udi_vendor_bulk_in_run+0x1c>)
   83084:	9500      	str	r5, [sp, #0]
   83086:	2081      	movs	r0, #129	; 0x81
   83088:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   8308a:	b003      	add	sp, #12
   8308c:	bd30      	pop	{r4, r5, pc}
   8308e:	bf00      	nop
   83090:	00082731 	.word	0x00082731

00083094 <udi_vendor_bulk_out_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_out_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   83094:	b530      	push	{r4, r5, lr}
   83096:	4684      	mov	ip, r0
   83098:	4615      	mov	r5, r2
   8309a:	b083      	sub	sp, #12
   8309c:	460b      	mov	r3, r1
	return udd_ep_run(UDI_VENDOR_EP_BULK_OUT,
   8309e:	4662      	mov	r2, ip
   830a0:	2100      	movs	r1, #0
   830a2:	4c03      	ldr	r4, [pc, #12]	; (830b0 <udi_vendor_bulk_out_run+0x1c>)
   830a4:	9500      	str	r5, [sp, #0]
   830a6:	2002      	movs	r0, #2
   830a8:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   830aa:	b003      	add	sp, #12
   830ac:	bd30      	pop	{r4, r5, pc}
   830ae:	bf00      	nop
   830b0:	00082731 	.word	0x00082731

000830b4 <efc_perform_command>:
 *
 * \return 0 if successful, otherwise returns an error code.
 */
uint32_t efc_perform_command(Efc *p_efc, uint32_t ul_command,
		uint32_t ul_argument)
{
   830b4:	b538      	push	{r3, r4, r5, lr}
	uint32_t result;
	irqflags_t flags;

	/* Unique ID commands are not supported. */
	if (ul_command == EFC_FCMD_STUI || ul_command == EFC_FCMD_SPUI) {
   830b6:	f1a1 030e 	sub.w	r3, r1, #14
   830ba:	2b01      	cmp	r3, #1
   830bc:	d917      	bls.n	830ee <efc_perform_command+0x3a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   830be:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   830c2:	b672      	cpsid	i
  __ASM volatile ("dmb");
   830c4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   830c8:	2300      	movs	r3, #0
   830ca:	4c0a      	ldr	r4, [pc, #40]	; (830f4 <efc_perform_command+0x40>)

	flags = cpu_irq_save();
	/* Use RAM Function. */
	result = efc_perform_fcr(p_efc,
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(ul_argument) |
			EEFC_FCR_FCMD(ul_command));
   830cc:	b2c9      	uxtb	r1, r1
   830ce:	7023      	strb	r3, [r4, #0]
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(ul_argument) |
   830d0:	4b09      	ldr	r3, [pc, #36]	; (830f8 <efc_perform_command+0x44>)
   830d2:	ea03 2202 	and.w	r2, r3, r2, lsl #8
   830d6:	4311      	orrs	r1, r2
	result = efc_perform_fcr(p_efc,
   830d8:	4b08      	ldr	r3, [pc, #32]	; (830fc <efc_perform_command+0x48>)
   830da:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
   830de:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   830e0:	b925      	cbnz	r5, 830ec <efc_perform_command+0x38>
		cpu_irq_enable();
   830e2:	2301      	movs	r3, #1
   830e4:	7023      	strb	r3, [r4, #0]
   830e6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   830ea:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return result;
}
   830ec:	bd38      	pop	{r3, r4, r5, pc}
		return EFC_RC_NOT_SUPPORT;
   830ee:	f04f 30ff 	mov.w	r0, #4294967295
}
   830f2:	bd38      	pop	{r3, r4, r5, pc}
   830f4:	2000030c 	.word	0x2000030c
   830f8:	00ffff00 	.word	0x00ffff00
   830fc:	20000079 	.word	0x20000079

00083100 <pio_enable_output_write>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_enable_output_write(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_OWER = ul_mask;
   83100:	f8c0 10a0 	str.w	r1, [r0, #160]	; 0xa0
}
   83104:	4770      	bx	lr
   83106:	bf00      	nop

00083108 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   83108:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8310a:	4770      	bx	lr

0008310c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8310c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8310e:	4770      	bx	lr

00083110 <pio_get_pin_value>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   83110:	0943      	lsrs	r3, r0, #5
   83112:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   83116:	f203 7306 	addw	r3, r3, #1798	; 0x706
   8311a:	025b      	lsls	r3, r3, #9
	return (p_pio->PIO_PDSR >> (ul_pin & 0x1F)) & 1;
   8311c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   8311e:	f000 001f 	and.w	r0, r0, #31
   83122:	fa23 f000 	lsr.w	r0, r3, r0
}
   83126:	f000 0001 	and.w	r0, r0, #1
   8312a:	4770      	bx	lr

0008312c <pio_set_pin_high>:
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   8312c:	2201      	movs	r2, #1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8312e:	0943      	lsrs	r3, r0, #5
   83130:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   83134:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   83138:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8313c:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   8313e:	fa02 f000 	lsl.w	r0, r2, r0
   83142:	6318      	str	r0, [r3, #48]	; 0x30
}
   83144:	4770      	bx	lr
   83146:	bf00      	nop

00083148 <pio_set_pin_low>:
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   83148:	2201      	movs	r2, #1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8314a:	0943      	lsrs	r3, r0, #5
   8314c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   83150:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   83154:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   83158:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   8315a:	fa02 f000 	lsl.w	r0, r2, r0
   8315e:	6358      	str	r0, [r3, #52]	; 0x34
}
   83160:	4770      	bx	lr
   83162:	bf00      	nop

00083164 <pio_configure_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   83164:	0943      	lsrs	r3, r0, #5
   83166:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
	switch (ul_flags & PIO_TYPE_Msk) {
   8316a:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8316e:	f203 7306 	addw	r3, r3, #1798	; 0x706
	switch (ul_flags & PIO_TYPE_Msk) {
   83172:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   83176:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
   8317a:	d035      	beq.n	831e8 <pio_configure_pin+0x84>
{
   8317c:	b410      	push	{r4}
	switch (ul_flags & PIO_TYPE_Msk) {
   8317e:	d816      	bhi.n	831ae <pio_configure_pin+0x4a>
   83180:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
   83184:	d01b      	beq.n	831be <pio_configure_pin+0x5a>
   83186:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
   8318a:	d115      	bne.n	831b8 <pio_configure_pin+0x54>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   8318c:	f04f 0c01 	mov.w	ip, #1
   83190:	f000 001f 	and.w	r0, r0, #31
   83194:	fa0c f200 	lsl.w	r2, ip, r0
	p_pio->PIO_IDR = ul_mask;
   83198:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   8319a:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   8319c:	4310      	orrs	r0, r2
   8319e:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   831a0:	ea11 000c 	ands.w	r0, r1, ip
	p_pio->PIO_PDR = ul_mask;
   831a4:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   831a6:	d01b      	beq.n	831e0 <pio_configure_pin+0x7c>
		p_pio->PIO_PUER = ul_mask;
   831a8:	665a      	str	r2, [r3, #100]	; 0x64
}
   831aa:	bc10      	pop	{r4}
   831ac:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   831ae:	f001 42e0 	and.w	r2, r1, #1879048192	; 0x70000000
   831b2:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
   831b6:	d02f      	beq.n	83218 <pio_configure_pin+0xb4>
   831b8:	2000      	movs	r0, #0
}
   831ba:	bc10      	pop	{r4}
   831bc:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   831be:	f04f 0c01 	mov.w	ip, #1
   831c2:	f000 001f 	and.w	r0, r0, #31
   831c6:	fa0c f200 	lsl.w	r2, ip, r0
	p_pio->PIO_IDR = ul_mask;
   831ca:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   831cc:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   831ce:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   831d0:	4020      	ands	r0, r4
   831d2:	ea20 0002 	bic.w	r0, r0, r2
   831d6:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   831d8:	ea11 000c 	ands.w	r0, r1, ip
	p_pio->PIO_PDR = ul_mask;
   831dc:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   831de:	d1e3      	bne.n	831a8 <pio_configure_pin+0x44>
		p_pio->PIO_PUDR = ul_mask;
   831e0:	661a      	str	r2, [r3, #96]	; 0x60
	return 1;
   831e2:	4660      	mov	r0, ip
}
   831e4:	bc10      	pop	{r4}
   831e6:	4770      	bx	lr
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   831e8:	2201      	movs	r2, #1
   831ea:	f000 001f 	and.w	r0, r0, #31
   831ee:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
   831f0:	07c8      	lsls	r0, r1, #31
	p_pio->PIO_IDR = ul_mask;
   831f2:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   831f4:	bf4c      	ite	mi
   831f6:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   831f8:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   831fa:	f011 0f0a 	tst.w	r1, #10
		p_pio->PIO_IFER = ul_mask;
   831fe:	bf14      	ite	ne
   83200:	621a      	strne	r2, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   83202:	625a      	streq	r2, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   83204:	0788      	lsls	r0, r1, #30
   83206:	d422      	bmi.n	8324e <pio_configure_pin+0xea>
		if (ul_attribute & PIO_DEBOUNCE) {
   83208:	0708      	lsls	r0, r1, #28
			p_pio->PIO_DIFSR = ul_mask;
   8320a:	bf48      	it	mi
   8320c:	f8c3 2084 	strmi.w	r2, [r3, #132]	; 0x84
	return 1;
   83210:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   83212:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   83214:	601a      	str	r2, [r3, #0]
}
   83216:	4770      	bx	lr
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   83218:	2201      	movs	r2, #1
   8321a:	f000 001f 	and.w	r0, r0, #31
   8321e:	4082      	lsls	r2, r0
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   83220:	f001 5c60 	and.w	ip, r1, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   83224:	f3c1 0480 	ubfx	r4, r1, #2, #1
	if (ul_pull_up_enable) {
   83228:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
   8322a:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   8322c:	bf4c      	ite	mi
   8322e:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   83230:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   83232:	b954      	cbnz	r4, 8324a <pio_configure_pin+0xe6>
		p_pio->PIO_MDDR = ul_mask;
   83234:	655a      	str	r2, [r3, #84]	; 0x54
	if (ul_default_level) {
   83236:	f1bc 5f60 	cmp.w	ip, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   8323a:	bf0c      	ite	eq
   8323c:	631a      	streq	r2, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   8323e:	635a      	strne	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   83240:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   83242:	601a      	str	r2, [r3, #0]
	return 1;
   83244:	2001      	movs	r0, #1
}
   83246:	bc10      	pop	{r4}
   83248:	4770      	bx	lr
		p_pio->PIO_MDER = ul_mask;
   8324a:	651a      	str	r2, [r3, #80]	; 0x50
   8324c:	e7f3      	b.n	83236 <pio_configure_pin+0xd2>
		p_pio->PIO_SCIFSR = ul_mask;
   8324e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	return 1;
   83252:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   83254:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   83256:	601a      	str	r2, [r3, #0]
}
   83258:	4770      	bx	lr
   8325a:	bf00      	nop

0008325c <pio_configure_pin_group>:
{
   8325c:	4603      	mov	r3, r0
	switch (ul_flags & PIO_TYPE_Msk) {
   8325e:	f002 40f0 	and.w	r0, r2, #2013265920	; 0x78000000
   83262:	f1b0 5f20 	cmp.w	r0, #671088640	; 0x28000000
   83266:	d029      	beq.n	832bc <pio_configure_pin_group+0x60>
{
   83268:	b410      	push	{r4}
	switch (ul_flags & PIO_TYPE_Msk) {
   8326a:	d810      	bhi.n	8328e <pio_configure_pin_group+0x32>
   8326c:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
   83270:	d015      	beq.n	8329e <pio_configure_pin_group+0x42>
   83272:	f1b0 5f80 	cmp.w	r0, #268435456	; 0x10000000
   83276:	d10f      	bne.n	83298 <pio_configure_pin_group+0x3c>
	p_pio->PIO_IDR = ul_mask;
   83278:	6459      	str	r1, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   8327a:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   8327c:	4308      	orrs	r0, r1
   8327e:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   83280:	f012 0001 	ands.w	r0, r2, #1
	p_pio->PIO_PDR = ul_mask;
   83284:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   83286:	d015      	beq.n	832b4 <pio_configure_pin_group+0x58>
		p_pio->PIO_PUER = ul_mask;
   83288:	6659      	str	r1, [r3, #100]	; 0x64
}
   8328a:	bc10      	pop	{r4}
   8328c:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   8328e:	f002 40e0 	and.w	r0, r2, #1879048192	; 0x70000000
   83292:	f1b0 5f40 	cmp.w	r0, #805306368	; 0x30000000
   83296:	d025      	beq.n	832e4 <pio_configure_pin_group+0x88>
   83298:	2000      	movs	r0, #0
}
   8329a:	bc10      	pop	{r4}
   8329c:	4770      	bx	lr
	p_pio->PIO_IDR = ul_mask;
   8329e:	6459      	str	r1, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   832a0:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   832a2:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   832a4:	4020      	ands	r0, r4
   832a6:	ea20 0001 	bic.w	r0, r0, r1
   832aa:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   832ac:	f012 0001 	ands.w	r0, r2, #1
	p_pio->PIO_PDR = ul_mask;
   832b0:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   832b2:	d1e9      	bne.n	83288 <pio_configure_pin_group+0x2c>
		p_pio->PIO_PUDR = ul_mask;
   832b4:	6619      	str	r1, [r3, #96]	; 0x60
	return 1;
   832b6:	2001      	movs	r0, #1
}
   832b8:	bc10      	pop	{r4}
   832ba:	4770      	bx	lr
	if (ul_pull_up_enable) {
   832bc:	07d0      	lsls	r0, r2, #31
	p_pio->PIO_IDR = ul_mask;
   832be:	6459      	str	r1, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   832c0:	bf4c      	ite	mi
   832c2:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   832c4:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   832c6:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   832ca:	bf14      	ite	ne
   832cc:	6219      	strne	r1, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   832ce:	6259      	streq	r1, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   832d0:	0790      	lsls	r0, r2, #30
   832d2:	d41e      	bmi.n	83312 <pio_configure_pin_group+0xb6>
		if (ul_attribute & PIO_DEBOUNCE) {
   832d4:	0710      	lsls	r0, r2, #28
			p_pio->PIO_DIFSR = ul_mask;
   832d6:	bf48      	it	mi
   832d8:	f8c3 1084 	strmi.w	r1, [r3, #132]	; 0x84
	return 1;
   832dc:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   832de:	6159      	str	r1, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   832e0:	6019      	str	r1, [r3, #0]
}
   832e2:	4770      	bx	lr
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   832e4:	f002 5060 	and.w	r0, r2, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   832e8:	f3c2 0480 	ubfx	r4, r2, #2, #1
	if (ul_pull_up_enable) {
   832ec:	07d2      	lsls	r2, r2, #31
	p_pio->PIO_IDR = ul_mask;
   832ee:	6459      	str	r1, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   832f0:	bf4c      	ite	mi
   832f2:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   832f4:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   832f6:	b954      	cbnz	r4, 8330e <pio_configure_pin_group+0xb2>
		p_pio->PIO_MDDR = ul_mask;
   832f8:	6559      	str	r1, [r3, #84]	; 0x54
	if (ul_default_level) {
   832fa:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   832fe:	bf0c      	ite	eq
   83300:	6319      	streq	r1, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   83302:	6359      	strne	r1, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   83304:	6119      	str	r1, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   83306:	6019      	str	r1, [r3, #0]
	return 1;
   83308:	2001      	movs	r0, #1
}
   8330a:	bc10      	pop	{r4}
   8330c:	4770      	bx	lr
		p_pio->PIO_MDER = ul_mask;
   8330e:	6519      	str	r1, [r3, #80]	; 0x50
   83310:	e7f3      	b.n	832fa <pio_configure_pin_group+0x9e>
		p_pio->PIO_SCIFSR = ul_mask;
   83312:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	return 1;
   83316:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   83318:	6159      	str	r1, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   8331a:	6019      	str	r1, [r3, #0]
}
   8331c:	4770      	bx	lr
   8331e:	bf00      	nop

00083320 <Dummy_Handler>:
/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
   83320:	e7fe      	b.n	83320 <Dummy_Handler>
   83322:	bf00      	nop

00083324 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
   83324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	switch (sleep_mode) {
   83328:	2804      	cmp	r0, #4
{
   8332a:	4604      	mov	r4, r0
   8332c:	b083      	sub	sp, #12
	switch (sleep_mode) {
   8332e:	dc1b      	bgt.n	83368 <pmc_sleep+0x44>
   83330:	2802      	cmp	r0, #2
   83332:	dc28      	bgt.n	83386 <pmc_sleep+0x62>
   83334:	1e43      	subs	r3, r0, #1
   83336:	2b01      	cmp	r3, #1
   83338:	d813      	bhi.n	83362 <pmc_sleep+0x3e>
		__WFI();
		break;
#else
		PMC->PMC_FSMR &= (uint32_t)~PMC_FSMR_LPM;
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
		cpu_irq_enable();
   8333a:	2001      	movs	r0, #1
		PMC->PMC_FSMR &= (uint32_t)~PMC_FSMR_LPM;
   8333c:	4984      	ldr	r1, [pc, #528]	; (83550 <pmc_sleep+0x22c>)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
   8333e:	4a85      	ldr	r2, [pc, #532]	; (83554 <pmc_sleep+0x230>)
		PMC->PMC_FSMR &= (uint32_t)~PMC_FSMR_LPM;
   83340:	6f0b      	ldr	r3, [r1, #112]	; 0x70
   83342:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   83346:	670b      	str	r3, [r1, #112]	; 0x70
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
   83348:	6913      	ldr	r3, [r2, #16]
		cpu_irq_enable();
   8334a:	4983      	ldr	r1, [pc, #524]	; (83558 <pmc_sleep+0x234>)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
   8334c:	f023 0304 	bic.w	r3, r3, #4
   83350:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
   83352:	7008      	strb	r0, [r1, #0]
   83354:	f3bf 8f5f 	dmb	sy
   83358:	b662      	cpsie	i
		if (sleep_mode == SAM_PM_SMODE_SLEEP_WFI)
   8335a:	2c02      	cmp	r4, #2
   8335c:	f000 80ce 	beq.w	834fc <pmc_sleep+0x1d8>
  __ASM volatile ("wfe");
   83360:	bf20      	wfe
		__WFE() ;
#endif
		break;
#endif
	}
}
   83362:	b003      	add	sp, #12
   83364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	switch (sleep_mode) {
   83368:	2805      	cmp	r0, #5
   8336a:	d1fa      	bne.n	83362 <pmc_sleep+0x3e>
		cpu_irq_enable();
   8336c:	2001      	movs	r0, #1
		SCB->SCR |= SCR_SLEEPDEEP;
   8336e:	4a79      	ldr	r2, [pc, #484]	; (83554 <pmc_sleep+0x230>)
		cpu_irq_enable();
   83370:	4979      	ldr	r1, [pc, #484]	; (83558 <pmc_sleep+0x234>)
		SCB->SCR |= SCR_SLEEPDEEP;
   83372:	6913      	ldr	r3, [r2, #16]
   83374:	f043 0304 	orr.w	r3, r3, #4
   83378:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
   8337a:	7008      	strb	r0, [r1, #0]
  __ASM volatile ("dmb");
   8337c:	f3bf 8f5f 	dmb	sy
   83380:	b662      	cpsie	i
  __ASM volatile ("wfe");
   83382:	bf20      	wfe
   83384:	e7ed      	b.n	83362 <pmc_sleep+0x3e>
  __ASM volatile ("cpsid i");
   83386:	b672      	cpsid	i
  __ASM volatile ("dmb");
   83388:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   8338c:	2600      	movs	r6, #0
		b_is_sleep_clock_used = true;
   8338e:	2201      	movs	r2, #1
		cpu_irq_disable();
   83390:	4d71      	ldr	r5, [pc, #452]	; (83558 <pmc_sleep+0x234>)
		b_is_sleep_clock_used = true;
   83392:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 8355c <pmc_sleep+0x238>
	uint32_t mor  = PMC->CKGR_MOR;
   83396:	4b6e      	ldr	r3, [pc, #440]	; (83550 <pmc_sleep+0x22c>)
		cpu_irq_disable();
   83398:	702e      	strb	r6, [r5, #0]
		b_is_sleep_clock_used = true;
   8339a:	f888 2000 	strb.w	r2, [r8]
	uint32_t mor  = PMC->CKGR_MOR;
   8339e:	6a1f      	ldr	r7, [r3, #32]
	uint32_t fmr1 = EFC1->EEFC_FMR;
   833a0:	496f      	ldr	r1, [pc, #444]	; (83560 <pmc_sleep+0x23c>)
	uint32_t fmr  = EFC0->EEFC_FMR;
   833a2:	4870      	ldr	r0, [pc, #448]	; (83564 <pmc_sleep+0x240>)
	uint32_t mckr = PMC->PMC_MCKR;
   833a4:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
   833a8:	f8d0 a000 	ldr.w	sl, [r0]
	uint32_t fmr1 = EFC1->EEFC_FMR;
   833ac:	f8d1 9000 	ldr.w	r9, [r1]
		*p_pll0_setting = PMC->CKGR_PLLAR;
   833b0:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
   833b2:	f447 115c 	orr.w	r1, r7, #3604480	; 0x370000
		*p_pll1_setting = PMC->CKGR_UCKR;
   833b6:	69da      	ldr	r2, [r3, #28]
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
   833b8:	f041 0108 	orr.w	r1, r1, #8
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
   833bc:	f01b 0f02 	tst.w	fp, #2
		*p_pll1_setting = PMC->CKGR_UCKR;
   833c0:	9201      	str	r2, [sp, #4]
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
   833c2:	6219      	str	r1, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
   833c4:	f040 8091 	bne.w	834ea <pmc_sleep+0x1c6>
   833c8:	4658      	mov	r0, fp
	if (mckr & PMC_MCKR_PRES_Msk) {
   833ca:	f010 0f70 	tst.w	r0, #112	; 0x70
   833ce:	d006      	beq.n	833de <pmc_sleep+0xba>
		PMC->PMC_MCKR = mckr;
   833d0:	495f      	ldr	r1, [pc, #380]	; (83550 <pmc_sleep+0x22c>)
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
   833d2:	f020 0070 	bic.w	r0, r0, #112	; 0x70
		PMC->PMC_MCKR = mckr;
   833d6:	6308      	str	r0, [r1, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
   833d8:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   833da:	071b      	lsls	r3, r3, #28
   833dc:	d5fc      	bpl.n	833d8 <pmc_sleep+0xb4>
	pmc_disable_pllack();
   833de:	4b62      	ldr	r3, [pc, #392]	; (83568 <pmc_sleep+0x244>)
   833e0:	4798      	blx	r3
	pmc_disable_upll_clock();
   833e2:	4b62      	ldr	r3, [pc, #392]	; (8356c <pmc_sleep+0x248>)
   833e4:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
   833e6:	495a      	ldr	r1, [pc, #360]	; (83550 <pmc_sleep+0x22c>)
   833e8:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   833ea:	0398      	lsls	r0, r3, #14
   833ec:	d5fc      	bpl.n	833e8 <pmc_sleep+0xc4>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
   833ee:	6a0b      	ldr	r3, [r1, #32]
   833f0:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
   833f4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   833f8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   833fc:	620b      	str	r3, [r1, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
   833fe:	4954      	ldr	r1, [pc, #336]	; (83550 <pmc_sleep+0x22c>)
   83400:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   83402:	03da      	lsls	r2, r3, #15
   83404:	d5fc      	bpl.n	83400 <pmc_sleep+0xdc>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
   83406:	4857      	ldr	r0, [pc, #348]	; (83564 <pmc_sleep+0x240>)
	EFC1->EEFC_FMR = fmr1 & (~EEFC_FMR_FWS_Msk);
   83408:	4b55      	ldr	r3, [pc, #340]	; (83560 <pmc_sleep+0x23c>)
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
   8340a:	f42a 6270 	bic.w	r2, sl, #3840	; 0xf00
   8340e:	6002      	str	r2, [r0, #0]
	if (disable_xtal) {
   83410:	2c04      	cmp	r4, #4
	EFC1->EEFC_FMR = fmr1 & (~EEFC_FMR_FWS_Msk);
   83412:	f429 6070 	bic.w	r0, r9, #3840	; 0xf00
   83416:	6018      	str	r0, [r3, #0]
	if (disable_xtal) {
   83418:	d107      	bne.n	8342a <pmc_sleep+0x106>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8341a:	6a0b      	ldr	r3, [r1, #32]
   8341c:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   83420:	f023 0301 	bic.w	r3, r3, #1
   83424:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   83428:	620b      	str	r3, [r1, #32]
		cpu_irq_enable();
   8342a:	2301      	movs	r3, #1
   8342c:	702b      	strb	r3, [r5, #0]
   8342e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   83432:	b662      	cpsie	i
		pmc_enable_waitmode();
   83434:	4b4e      	ldr	r3, [pc, #312]	; (83570 <pmc_sleep+0x24c>)
   83436:	4798      	blx	r3
  __ASM volatile ("cpsid i");
   83438:	b672      	cpsid	i
   8343a:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   8343e:	2300      	movs	r3, #0
   83440:	702b      	strb	r3, [r5, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
   83442:	07bb      	lsls	r3, r7, #30
   83444:	d55c      	bpl.n	83500 <pmc_sleep+0x1dc>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   83446:	4942      	ldr	r1, [pc, #264]	; (83550 <pmc_sleep+0x22c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   83448:	484a      	ldr	r0, [pc, #296]	; (83574 <pmc_sleep+0x250>)
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8344a:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   8344c:	4018      	ands	r0, r3
   8344e:	4b4a      	ldr	r3, [pc, #296]	; (83578 <pmc_sleep+0x254>)
   83450:	4303      	orrs	r3, r0
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   83452:	620b      	str	r3, [r1, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
   83454:	6a0b      	ldr	r3, [r1, #32]
					| CKGR_MOR_KEY_PASSWD;
   83456:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   8345a:	f023 0378 	bic.w	r3, r3, #120	; 0x78
   8345e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
   83462:	620b      	str	r3, [r1, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
   83464:	4945      	ldr	r1, [pc, #276]	; (8357c <pmc_sleep+0x258>)
   83466:	4031      	ands	r1, r6
   83468:	b121      	cbz	r1, 83474 <pmc_sleep+0x150>
		pll_sr |= PMC_SR_LOCKA;
   8346a:	2102      	movs	r1, #2
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
   8346c:	4b38      	ldr	r3, [pc, #224]	; (83550 <pmc_sleep+0x22c>)
   8346e:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
   83472:	629e      	str	r6, [r3, #40]	; 0x28
	if (pll1_setting & CKGR_UCKR_UPLLEN) {
   83474:	9a01      	ldr	r2, [sp, #4]
   83476:	03d7      	lsls	r7, r2, #15
   83478:	d503      	bpl.n	83482 <pmc_sleep+0x15e>
		PMC->CKGR_UCKR = pll1_setting;
   8347a:	4b35      	ldr	r3, [pc, #212]	; (83550 <pmc_sleep+0x22c>)
		pll_sr |= PMC_SR_LOCKU;
   8347c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
		PMC->CKGR_UCKR = pll1_setting;
   83480:	61da      	str	r2, [r3, #28]
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
   83482:	f00b 0303 	and.w	r3, fp, #3
   83486:	2b02      	cmp	r3, #2
   83488:	d05c      	beq.n	83544 <pmc_sleep+0x220>
   8348a:	2b03      	cmp	r3, #3
   8348c:	d103      	bne.n	83496 <pmc_sleep+0x172>
		while (!(PMC->PMC_SR & PMC_SR_LOCKU));
   8348e:	4830      	ldr	r0, [pc, #192]	; (83550 <pmc_sleep+0x22c>)
   83490:	6e83      	ldr	r3, [r0, #104]	; 0x68
   83492:	065c      	lsls	r4, r3, #25
   83494:	d5fc      	bpl.n	83490 <pmc_sleep+0x16c>
	mckr = PMC->PMC_MCKR;
   83496:	482e      	ldr	r0, [pc, #184]	; (83550 <pmc_sleep+0x22c>)
		| (mck_setting & PMC_MCKR_PRES_Msk);
   83498:	f00b 0370 	and.w	r3, fp, #112	; 0x70
	mckr = PMC->PMC_MCKR;
   8349c:	6b04      	ldr	r4, [r0, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
   8349e:	f024 0470 	bic.w	r4, r4, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
   834a2:	4323      	orrs	r3, r4
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
   834a4:	6303      	str	r3, [r0, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
   834a6:	6e83      	ldr	r3, [r0, #104]	; 0x68
   834a8:	071a      	lsls	r2, r3, #28
   834aa:	d5fc      	bpl.n	834a6 <pmc_sleep+0x182>
	EFC0->EEFC_FMR = fmr_setting;
   834ac:	4b2d      	ldr	r3, [pc, #180]	; (83564 <pmc_sleep+0x240>)
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
   834ae:	4a28      	ldr	r2, [pc, #160]	; (83550 <pmc_sleep+0x22c>)
	EFC0->EEFC_FMR = fmr_setting;
   834b0:	f8c3 a000 	str.w	sl, [r3]
	EFC1->EEFC_FMR = fmr_setting1;
   834b4:	f8c3 9200 	str.w	r9, [r3, #512]	; 0x200
	PMC->PMC_MCKR = mck_setting;
   834b8:	f8c0 b030 	str.w	fp, [r0, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
   834bc:	6e93      	ldr	r3, [r2, #104]	; 0x68
   834be:	071b      	lsls	r3, r3, #28
   834c0:	d5fc      	bpl.n	834bc <pmc_sleep+0x198>
	while (!(PMC->PMC_SR & pll_sr));
   834c2:	4a23      	ldr	r2, [pc, #140]	; (83550 <pmc_sleep+0x22c>)
   834c4:	6e93      	ldr	r3, [r2, #104]	; 0x68
   834c6:	420b      	tst	r3, r1
   834c8:	d0fc      	beq.n	834c4 <pmc_sleep+0x1a0>
		b_is_sleep_clock_used = false;
   834ca:	2600      	movs	r6, #0
		if (callback_clocks_restored) {
   834cc:	4c2c      	ldr	r4, [pc, #176]	; (83580 <pmc_sleep+0x25c>)
		b_is_sleep_clock_used = false;
   834ce:	f888 6000 	strb.w	r6, [r8]
		if (callback_clocks_restored) {
   834d2:	6823      	ldr	r3, [r4, #0]
   834d4:	b10b      	cbz	r3, 834da <pmc_sleep+0x1b6>
			callback_clocks_restored();
   834d6:	4798      	blx	r3
			callback_clocks_restored = NULL;
   834d8:	6026      	str	r6, [r4, #0]
		cpu_irq_enable();
   834da:	2301      	movs	r3, #1
   834dc:	702b      	strb	r3, [r5, #0]
   834de:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   834e2:	b662      	cpsie	i
}
   834e4:	b003      	add	sp, #12
   834e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
   834ea:	f02b 0003 	bic.w	r0, fp, #3
   834ee:	f040 0001 	orr.w	r0, r0, #1
		PMC->PMC_MCKR = mckr;
   834f2:	6318      	str	r0, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
   834f4:	6e99      	ldr	r1, [r3, #104]	; 0x68
   834f6:	070a      	lsls	r2, r1, #28
   834f8:	d5fc      	bpl.n	834f4 <pmc_sleep+0x1d0>
   834fa:	e766      	b.n	833ca <pmc_sleep+0xa6>
  __ASM volatile ("wfi");
   834fc:	bf30      	wfi
}
   834fe:	e730      	b.n	83362 <pmc_sleep+0x3e>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
   83500:	07ff      	lsls	r7, r7, #31
   83502:	d5af      	bpl.n	83464 <pmc_sleep+0x140>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
   83504:	4912      	ldr	r1, [pc, #72]	; (83550 <pmc_sleep+0x22c>)
   83506:	6a0b      	ldr	r3, [r1, #32]
   83508:	07dc      	lsls	r4, r3, #31
   8350a:	d40c      	bmi.n	83526 <pmc_sleep+0x202>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8350c:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
   8350e:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   83512:	f023 0303 	bic.w	r3, r3, #3
   83516:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8351a:	f043 0301 	orr.w	r3, r3, #1
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   8351e:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   83520:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   83522:	07d8      	lsls	r0, r3, #31
   83524:	d5fc      	bpl.n	83520 <pmc_sleep+0x1fc>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
   83526:	490a      	ldr	r1, [pc, #40]	; (83550 <pmc_sleep+0x22c>)
   83528:	6a0b      	ldr	r3, [r1, #32]
   8352a:	01da      	lsls	r2, r3, #7
   8352c:	d408      	bmi.n	83540 <pmc_sleep+0x21c>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   8352e:	6a0b      	ldr	r3, [r1, #32]
   83530:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   83534:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   83538:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
   8353a:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   8353c:	03db      	lsls	r3, r3, #15
   8353e:	d5fc      	bpl.n	8353a <pmc_sleep+0x216>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
   83540:	4903      	ldr	r1, [pc, #12]	; (83550 <pmc_sleep+0x22c>)
   83542:	e787      	b.n	83454 <pmc_sleep+0x130>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
   83544:	4802      	ldr	r0, [pc, #8]	; (83550 <pmc_sleep+0x22c>)
   83546:	6e83      	ldr	r3, [r0, #104]	; 0x68
   83548:	079e      	lsls	r6, r3, #30
   8354a:	d5fc      	bpl.n	83546 <pmc_sleep+0x222>
   8354c:	e7a3      	b.n	83496 <pmc_sleep+0x172>
   8354e:	bf00      	nop
   83550:	400e0400 	.word	0x400e0400
   83554:	e000ed00 	.word	0xe000ed00
   83558:	2000030c 	.word	0x2000030c
   8355c:	2000135d 	.word	0x2000135d
   83560:	400e0a00 	.word	0x400e0a00
   83564:	400e0800 	.word	0x400e0800
   83568:	00082f1d 	.word	0x00082f1d
   8356c:	00082f3d 	.word	0x00082f3d
   83570:	00082fc9 	.word	0x00082fc9
   83574:	fec8fffc 	.word	0xfec8fffc
   83578:	01370002 	.word	0x01370002
   8357c:	07ff0000 	.word	0x07ff0000
   83580:	20001360 	.word	0x20001360

00083584 <pmc_is_wakeup_clocks_restored>:

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
   83584:	4b02      	ldr	r3, [pc, #8]	; (83590 <pmc_is_wakeup_clocks_restored+0xc>)
   83586:	7818      	ldrb	r0, [r3, #0]
}
   83588:	f080 0001 	eor.w	r0, r0, #1
   8358c:	4770      	bx	lr
   8358e:	bf00      	nop
   83590:	2000135d 	.word	0x2000135d

00083594 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   83594:	4a0c      	ldr	r2, [pc, #48]	; (835c8 <_sbrk+0x34>)
{
   83596:	4603      	mov	r3, r0
	if (heap == NULL) {
   83598:	6810      	ldr	r0, [r2, #0]
	int ramend = (int)&__ram_end__;
   8359a:	490c      	ldr	r1, [pc, #48]	; (835cc <_sbrk+0x38>)
	if (heap == NULL) {
   8359c:	b130      	cbz	r0, 835ac <_sbrk+0x18>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
   8359e:	4403      	add	r3, r0
   835a0:	428b      	cmp	r3, r1
		return (caddr_t) -1;	
   835a2:	bfcc      	ite	gt
   835a4:	f04f 30ff 	movgt.w	r0, #4294967295
	}

	heap += incr;
   835a8:	6013      	strle	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
   835aa:	4770      	bx	lr
{
   835ac:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
   835ae:	4c08      	ldr	r4, [pc, #32]	; (835d0 <_sbrk+0x3c>)
	if (((int)prev_heap + incr) > ramend) {
   835b0:	4423      	add	r3, r4
   835b2:	428b      	cmp	r3, r1
		heap = (unsigned char *)&_end;
   835b4:	6014      	str	r4, [r2, #0]
	heap += incr;
   835b6:	bfd8      	it	le
   835b8:	6013      	strle	r3, [r2, #0]
		heap = (unsigned char *)&_end;
   835ba:	4620      	mov	r0, r4
		return (caddr_t) -1;	
   835bc:	bfc8      	it	gt
   835be:	f04f 30ff 	movgt.w	r0, #4294967295
}
   835c2:	bc10      	pop	{r4}
   835c4:	4770      	bx	lr
   835c6:	bf00      	nop
   835c8:	20001364 	.word	0x20001364
   835cc:	2007fffc 	.word	0x2007fffc
   835d0:	20081500 	.word	0x20081500

000835d4 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   835d4:	f04f 30ff 	mov.w	r0, #4294967295
   835d8:	4770      	bx	lr
   835da:	bf00      	nop

000835dc <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   835dc:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
   835e0:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
   835e2:	604b      	str	r3, [r1, #4]
}
   835e4:	4770      	bx	lr
   835e6:	bf00      	nop

000835e8 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   835e8:	2001      	movs	r0, #1
   835ea:	4770      	bx	lr

000835ec <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   835ec:	2000      	movs	r0, #0
   835ee:	4770      	bx	lr

000835f0 <_exit>:

extern void _exit(int status)
{
   835f0:	4601      	mov	r1, r0
   835f2:	b508      	push	{r3, lr}
	printf("Exiting with status %d.\n", status);
   835f4:	4801      	ldr	r0, [pc, #4]	; (835fc <_exit+0xc>)
   835f6:	4b02      	ldr	r3, [pc, #8]	; (83600 <_exit+0x10>)
   835f8:	4798      	blx	r3

	for (;;);
   835fa:	e7fe      	b.n	835fa <_exit+0xa>
   835fc:	0008a5f0 	.word	0x0008a5f0
   83600:	00083885 	.word	0x00083885

00083604 <_kill>:
}

extern void _kill(int pid, int sig)
{
	return;
}
   83604:	4770      	bx	lr
   83606:	bf00      	nop

00083608 <_getpid>:

extern int _getpid(void)
{
	return -1;
}
   83608:	f04f 30ff 	mov.w	r0, #4294967295
   8360c:	4770      	bx	lr
   8360e:	bf00      	nop

00083610 <iopins_normal>:
	
	/* */
}

void iopins_normal(void)
{
   83610:	b570      	push	{r4, r5, r6, lr}
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   83612:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   83616:	4c14      	ldr	r4, [pc, #80]	; (83668 <iopins_normal+0x58>)
   83618:	201d      	movs	r0, #29
   8361a:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   8361c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   83620:	201f      	movs	r0, #31
   83622:	47a0      	blx	r4
	
	/* Configure MOSFET for turning on-off system */
	gpio_configure_pin(PIN_PWRON_GPIO, PIN_PWRON_FLAGS);
   83624:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   83628:	2018      	movs	r0, #24
   8362a:	47a0      	blx	r4
	board_power(0);
   8362c:	4b0f      	ldr	r3, [pc, #60]	; (8366c <iopins_normal+0x5c>)
   8362e:	2018      	movs	r0, #24
   83630:	4798      	blx	r3
	
	/* FPGA Programming pins */
	FPGA_NPROG_SETUP();
   83632:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   83636:	2014      	movs	r0, #20
   83638:	47a0      	blx	r4
	FPGA_NPROG_HIGH();
   8363a:	4d0d      	ldr	r5, [pc, #52]	; (83670 <iopins_normal+0x60>)
   8363c:	2014      	movs	r0, #20
   8363e:	47a8      	blx	r5
	gpio_configure_group(FPGA_ADDR_PORT, FPGA_ADDR_PINS, (PIO_TYPE_PIO_OUTPUT_0 | PIO_DEFAULT));
	pio_enable_output_write(FPGA_ADDR_PORT, FPGA_ADDR_PINS);
#endif
	
	//ALE pin under SW control
	gpio_configure_pin(FPGA_ALE_GPIO, FPGA_ALE_FLAGS);
   83640:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   83644:	2031      	movs	r0, #49	; 0x31
   83646:	47a0      	blx	r4
	gpio_set_pin_high(FPGA_ALE_GPIO);
   83648:	2031      	movs	r0, #49	; 0x31
   8364a:	47a8      	blx	r5

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   8364c:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
   83650:	4b08      	ldr	r3, [pc, #32]	; (83674 <iopins_normal+0x64>)
   83652:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   83656:	4808      	ldr	r0, [pc, #32]	; (83678 <iopins_normal+0x68>)
   83658:	4798      	blx	r3
#ifdef CONF_BOARD_PCK0
	gpio_configure_pin(PIN_PCK0, PIN_PCK0_FLAGS);
#endif

#ifdef CONF_BOARD_PCK1
gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
   8365a:	4623      	mov	r3, r4
#if defined(CONF_BOARD_USB_PORT)
#  if defined(CONF_BOARD_USB_VBUS_DETECT)
	gpio_configure_pin(USB_VBUS_PIN, USB_VBUS_FLAGS);
#  endif
#endif	
}
   8365c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
   83660:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   83664:	2038      	movs	r0, #56	; 0x38
   83666:	4718      	bx	r3
   83668:	00083165 	.word	0x00083165
   8366c:	00083149 	.word	0x00083149
   83670:	0008312d 	.word	0x0008312d
   83674:	0008325d 	.word	0x0008325d
   83678:	400e0c00 	.word	0x400e0c00

0008367c <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   8367c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
{
   83680:	b510      	push	{r4, lr}
	WDT->WDT_MR = WDT_MR_WDDIS;
   83682:	4b06      	ldr	r3, [pc, #24]	; (8369c <board_init+0x20>)
   83684:	4c06      	ldr	r4, [pc, #24]	; (836a0 <board_init+0x24>)
   83686:	655a      	str	r2, [r3, #84]	; 0x54
   83688:	200a      	movs	r0, #10
   8368a:	47a0      	blx	r4
   8368c:	200b      	movs	r0, #11
   8368e:	47a0      	blx	r4
   83690:	200c      	movs	r0, #12
   83692:	47a0      	blx	r4
	 */
	ioport_init();

	iopins_normal();

}
   83694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	iopins_normal();
   83698:	4b02      	ldr	r3, [pc, #8]	; (836a4 <board_init+0x28>)
   8369a:	4718      	bx	r3
   8369c:	400e1200 	.word	0x400e1200
   836a0:	00082f5d 	.word	0x00082f5d
   836a4:	00083611 	.word	0x00083611

000836a8 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   836a8:	4b0c      	ldr	r3, [pc, #48]	; (836dc <cpu_irq_enter_critical+0x34>)
   836aa:	681a      	ldr	r2, [r3, #0]
   836ac:	b922      	cbnz	r2, 836b8 <cpu_irq_enter_critical+0x10>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   836ae:	f3ef 8110 	mrs	r1, PRIMASK
		if (cpu_irq_is_enabled()) {
   836b2:	b129      	cbz	r1, 836c0 <cpu_irq_enter_critical+0x18>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   836b4:	490a      	ldr	r1, [pc, #40]	; (836e0 <cpu_irq_enter_critical+0x38>)
   836b6:	700a      	strb	r2, [r1, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   836b8:	681a      	ldr	r2, [r3, #0]
   836ba:	3201      	adds	r2, #1
   836bc:	601a      	str	r2, [r3, #0]
   836be:	4770      	bx	lr
{
   836c0:	b410      	push	{r4}
  __ASM volatile ("cpsid i");
   836c2:	b672      	cpsid	i
  __ASM volatile ("dmb");
   836c4:	f3bf 8f5f 	dmb	sy
			cpu_irq_prev_interrupt_state = true;
   836c8:	2001      	movs	r0, #1
			cpu_irq_disable();
   836ca:	4c06      	ldr	r4, [pc, #24]	; (836e4 <cpu_irq_enter_critical+0x3c>)
			cpu_irq_prev_interrupt_state = true;
   836cc:	4a04      	ldr	r2, [pc, #16]	; (836e0 <cpu_irq_enter_critical+0x38>)
			cpu_irq_disable();
   836ce:	7021      	strb	r1, [r4, #0]
			cpu_irq_prev_interrupt_state = true;
   836d0:	7010      	strb	r0, [r2, #0]
	cpu_irq_critical_section_counter++;
   836d2:	681a      	ldr	r2, [r3, #0]
   836d4:	3201      	adds	r2, #1
   836d6:	601a      	str	r2, [r3, #0]
}
   836d8:	bc10      	pop	{r4}
   836da:	4770      	bx	lr
   836dc:	20001368 	.word	0x20001368
   836e0:	2000136c 	.word	0x2000136c
   836e4:	2000030c 	.word	0x2000030c

000836e8 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   836e8:	4b07      	ldr	r3, [pc, #28]	; (83708 <cpu_irq_leave_critical+0x20>)
   836ea:	681a      	ldr	r2, [r3, #0]
   836ec:	3a01      	subs	r2, #1
   836ee:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   836f0:	681b      	ldr	r3, [r3, #0]
   836f2:	b943      	cbnz	r3, 83706 <cpu_irq_leave_critical+0x1e>
   836f4:	4b05      	ldr	r3, [pc, #20]	; (8370c <cpu_irq_leave_critical+0x24>)
   836f6:	781b      	ldrb	r3, [r3, #0]
   836f8:	b12b      	cbz	r3, 83706 <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   836fa:	2201      	movs	r2, #1
   836fc:	4b04      	ldr	r3, [pc, #16]	; (83710 <cpu_irq_leave_critical+0x28>)
   836fe:	701a      	strb	r2, [r3, #0]
   83700:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   83704:	b662      	cpsie	i
	}
}
   83706:	4770      	bx	lr
   83708:	20001368 	.word	0x20001368
   8370c:	2000136c 	.word	0x2000136c
   83710:	2000030c 	.word	0x2000030c

00083714 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   83714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   83718:	b9a0      	cbnz	r0, 83744 <_read+0x30>
		return -1;
	}

	for (; len > 0; --len) {
   8371a:	2a00      	cmp	r2, #0
   8371c:	4690      	mov	r8, r2
   8371e:	dd0d      	ble.n	8373c <_read+0x28>
   83720:	460c      	mov	r4, r1
   83722:	4f0a      	ldr	r7, [pc, #40]	; (8374c <_read+0x38>)
   83724:	4e0a      	ldr	r6, [pc, #40]	; (83750 <_read+0x3c>)
   83726:	188d      	adds	r5, r1, r2
		ptr_get(stdio_base, ptr);
   83728:	4621      	mov	r1, r4
   8372a:	6838      	ldr	r0, [r7, #0]
   8372c:	6833      	ldr	r3, [r6, #0]
		ptr++;
   8372e:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
   83730:	4798      	blx	r3
	for (; len > 0; --len) {
   83732:	42ac      	cmp	r4, r5
   83734:	d1f8      	bne.n	83728 <_read+0x14>
		nChars++;
	}
	return nChars;
}
   83736:	4640      	mov	r0, r8
   83738:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	int nChars = 0;
   8373c:	4680      	mov	r8, r0
}
   8373e:	4640      	mov	r0, r8
   83740:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   83744:	f04f 38ff 	mov.w	r8, #4294967295
   83748:	e7f5      	b.n	83736 <_read+0x22>
   8374a:	bf00      	nop
   8374c:	20001358 	.word	0x20001358
   83750:	20001370 	.word	0x20001370

00083754 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   83754:	4a31      	ldr	r2, [pc, #196]	; (8381c <SystemCoreClockUpdate+0xc8>)
   83756:	6b13      	ldr	r3, [r2, #48]	; 0x30
   83758:	f003 0303 	and.w	r3, r3, #3
   8375c:	2b01      	cmp	r3, #1
   8375e:	d02c      	beq.n	837ba <SystemCoreClockUpdate+0x66>
   83760:	3b02      	subs	r3, #2
   83762:	2b01      	cmp	r3, #1
   83764:	d81e      	bhi.n	837a4 <SystemCoreClockUpdate+0x50>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   83766:	6a13      	ldr	r3, [r2, #32]
   83768:	01d9      	lsls	r1, r3, #7
   8376a:	d538      	bpl.n	837de <SystemCoreClockUpdate+0x8a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   8376c:	482c      	ldr	r0, [pc, #176]	; (83820 <SystemCoreClockUpdate+0xcc>)
   8376e:	4b2d      	ldr	r3, [pc, #180]	; (83824 <SystemCoreClockUpdate+0xd0>)
   83770:	6003      	str	r3, [r0, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   83772:	4a2a      	ldr	r2, [pc, #168]	; (8381c <SystemCoreClockUpdate+0xc8>)
   83774:	6b13      	ldr	r3, [r2, #48]	; 0x30
   83776:	f003 0303 	and.w	r3, r3, #3
   8377a:	2b02      	cmp	r3, #2
   8377c:	d03c      	beq.n	837f8 <SystemCoreClockUpdate+0xa4>
   8377e:	4b2a      	ldr	r3, [pc, #168]	; (83828 <SystemCoreClockUpdate+0xd4>)
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   83780:	4926      	ldr	r1, [pc, #152]	; (8381c <SystemCoreClockUpdate+0xc8>)
   83782:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   83784:	f002 0270 	and.w	r2, r2, #112	; 0x70
   83788:	2a70      	cmp	r2, #112	; 0x70
   8378a:	d005      	beq.n	83798 <SystemCoreClockUpdate+0x44>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   8378c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   8378e:	f3c2 1202 	ubfx	r2, r2, #4, #3
   83792:	40d3      	lsrs	r3, r2
   83794:	6003      	str	r3, [r0, #0]
			                           PMC_MCKR_PRES_Pos);
	}
}
   83796:	4770      	bx	lr
		SystemCoreClock /= 3U;
   83798:	4a24      	ldr	r2, [pc, #144]	; (8382c <SystemCoreClockUpdate+0xd8>)
   8379a:	fba2 2303 	umull	r2, r3, r2, r3
   8379e:	085b      	lsrs	r3, r3, #1
   837a0:	6003      	str	r3, [r0, #0]
}
   837a2:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   837a4:	4b22      	ldr	r3, [pc, #136]	; (83830 <SystemCoreClockUpdate+0xdc>)
   837a6:	481e      	ldr	r0, [pc, #120]	; (83820 <SystemCoreClockUpdate+0xcc>)
   837a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   837aa:	f013 0f80 	tst.w	r3, #128	; 0x80
   837ae:	bf14      	ite	ne
   837b0:	f44f 4300 	movne.w	r3, #32768	; 0x8000
   837b4:	f44f 43fa 	moveq.w	r3, #32000	; 0x7d00
   837b8:	e7e2      	b.n	83780 <SystemCoreClockUpdate+0x2c>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   837ba:	6a13      	ldr	r3, [r2, #32]
   837bc:	01db      	lsls	r3, r3, #7
   837be:	d40b      	bmi.n	837d8 <SystemCoreClockUpdate+0x84>
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   837c0:	6a12      	ldr	r2, [r2, #32]
   837c2:	f002 0270 	and.w	r2, r2, #112	; 0x70
   837c6:	2a10      	cmp	r2, #16
   837c8:	d021      	beq.n	8380e <SystemCoreClockUpdate+0xba>
   837ca:	4b16      	ldr	r3, [pc, #88]	; (83824 <SystemCoreClockUpdate+0xd0>)
   837cc:	4919      	ldr	r1, [pc, #100]	; (83834 <SystemCoreClockUpdate+0xe0>)
   837ce:	4814      	ldr	r0, [pc, #80]	; (83820 <SystemCoreClockUpdate+0xcc>)
   837d0:	2a20      	cmp	r2, #32
   837d2:	bf18      	it	ne
   837d4:	460b      	movne	r3, r1
   837d6:	e7d3      	b.n	83780 <SystemCoreClockUpdate+0x2c>
   837d8:	4b12      	ldr	r3, [pc, #72]	; (83824 <SystemCoreClockUpdate+0xd0>)
   837da:	4811      	ldr	r0, [pc, #68]	; (83820 <SystemCoreClockUpdate+0xcc>)
   837dc:	e7d0      	b.n	83780 <SystemCoreClockUpdate+0x2c>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   837de:	4b15      	ldr	r3, [pc, #84]	; (83834 <SystemCoreClockUpdate+0xe0>)
   837e0:	480f      	ldr	r0, [pc, #60]	; (83820 <SystemCoreClockUpdate+0xcc>)
   837e2:	6003      	str	r3, [r0, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   837e4:	6a13      	ldr	r3, [r2, #32]
   837e6:	f003 0370 	and.w	r3, r3, #112	; 0x70
   837ea:	2b10      	cmp	r3, #16
   837ec:	d012      	beq.n	83814 <SystemCoreClockUpdate+0xc0>
   837ee:	2b20      	cmp	r3, #32
   837f0:	d1bf      	bne.n	83772 <SystemCoreClockUpdate+0x1e>
				SystemCoreClock *= 3U;
   837f2:	4b0c      	ldr	r3, [pc, #48]	; (83824 <SystemCoreClockUpdate+0xd0>)
   837f4:	6003      	str	r3, [r0, #0]
				break;
   837f6:	e7bc      	b.n	83772 <SystemCoreClockUpdate+0x1e>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   837f8:	6a91      	ldr	r1, [r2, #40]	; 0x28
   837fa:	6803      	ldr	r3, [r0, #0]
   837fc:	f3c1 410a 	ubfx	r1, r1, #16, #11
   83800:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   83804:	6a92      	ldr	r2, [r2, #40]	; 0x28
   83806:	b2d2      	uxtb	r2, r2
   83808:	fbb3 f3f2 	udiv	r3, r3, r2
   8380c:	e7b8      	b.n	83780 <SystemCoreClockUpdate+0x2c>
   8380e:	4b0a      	ldr	r3, [pc, #40]	; (83838 <SystemCoreClockUpdate+0xe4>)
   83810:	4803      	ldr	r0, [pc, #12]	; (83820 <SystemCoreClockUpdate+0xcc>)
   83812:	e7b5      	b.n	83780 <SystemCoreClockUpdate+0x2c>
				SystemCoreClock *= 2U;
   83814:	4b08      	ldr	r3, [pc, #32]	; (83838 <SystemCoreClockUpdate+0xe4>)
   83816:	6003      	str	r3, [r0, #0]
				break;
   83818:	e7ab      	b.n	83772 <SystemCoreClockUpdate+0x1e>
   8381a:	bf00      	nop
   8381c:	400e0400 	.word	0x400e0400
   83820:	20000310 	.word	0x20000310
   83824:	00b71b00 	.word	0x00b71b00
   83828:	0e4e1c00 	.word	0x0e4e1c00
   8382c:	aaaaaaab 	.word	0xaaaaaaab
   83830:	400e1200 	.word	0x400e1200
   83834:	003d0900 	.word	0x003d0900
   83838:	007a1200 	.word	0x007a1200

0008383c <__libc_init_array>:
   8383c:	b570      	push	{r4, r5, r6, lr}
   8383e:	4e0d      	ldr	r6, [pc, #52]	; (83874 <__libc_init_array+0x38>)
   83840:	4d0d      	ldr	r5, [pc, #52]	; (83878 <__libc_init_array+0x3c>)
   83842:	1b76      	subs	r6, r6, r5
   83844:	10b6      	asrs	r6, r6, #2
   83846:	d006      	beq.n	83856 <__libc_init_array+0x1a>
   83848:	2400      	movs	r4, #0
   8384a:	f855 3b04 	ldr.w	r3, [r5], #4
   8384e:	3401      	adds	r4, #1
   83850:	4798      	blx	r3
   83852:	42a6      	cmp	r6, r4
   83854:	d1f9      	bne.n	8384a <__libc_init_array+0xe>
   83856:	4e09      	ldr	r6, [pc, #36]	; (8387c <__libc_init_array+0x40>)
   83858:	4d09      	ldr	r5, [pc, #36]	; (83880 <__libc_init_array+0x44>)
   8385a:	f007 f8d5 	bl	8aa08 <_init>
   8385e:	1b76      	subs	r6, r6, r5
   83860:	10b6      	asrs	r6, r6, #2
   83862:	d006      	beq.n	83872 <__libc_init_array+0x36>
   83864:	2400      	movs	r4, #0
   83866:	f855 3b04 	ldr.w	r3, [r5], #4
   8386a:	3401      	adds	r4, #1
   8386c:	4798      	blx	r3
   8386e:	42a6      	cmp	r6, r4
   83870:	d1f9      	bne.n	83866 <__libc_init_array+0x2a>
   83872:	bd70      	pop	{r4, r5, r6, pc}
   83874:	0008aa14 	.word	0x0008aa14
   83878:	0008aa14 	.word	0x0008aa14
   8387c:	0008aa1c 	.word	0x0008aa1c
   83880:	0008aa14 	.word	0x0008aa14

00083884 <iprintf>:
   83884:	b40f      	push	{r0, r1, r2, r3}
   83886:	b500      	push	{lr}
   83888:	4a07      	ldr	r2, [pc, #28]	; (838a8 <iprintf+0x24>)
   8388a:	b083      	sub	sp, #12
   8388c:	ab04      	add	r3, sp, #16
   8388e:	6810      	ldr	r0, [r2, #0]
   83890:	f853 2b04 	ldr.w	r2, [r3], #4
   83894:	6881      	ldr	r1, [r0, #8]
   83896:	9301      	str	r3, [sp, #4]
   83898:	f001 fee2 	bl	85660 <_vfiprintf_r>
   8389c:	b003      	add	sp, #12
   8389e:	f85d eb04 	ldr.w	lr, [sp], #4
   838a2:	b004      	add	sp, #16
   838a4:	4770      	bx	lr
   838a6:	bf00      	nop
   838a8:	200003a0 	.word	0x200003a0

000838ac <memcpy>:
   838ac:	4684      	mov	ip, r0
   838ae:	ea41 0300 	orr.w	r3, r1, r0
   838b2:	f013 0303 	ands.w	r3, r3, #3
   838b6:	d149      	bne.n	8394c <memcpy+0xa0>
   838b8:	3a40      	subs	r2, #64	; 0x40
   838ba:	d323      	bcc.n	83904 <memcpy+0x58>
   838bc:	680b      	ldr	r3, [r1, #0]
   838be:	6003      	str	r3, [r0, #0]
   838c0:	684b      	ldr	r3, [r1, #4]
   838c2:	6043      	str	r3, [r0, #4]
   838c4:	688b      	ldr	r3, [r1, #8]
   838c6:	6083      	str	r3, [r0, #8]
   838c8:	68cb      	ldr	r3, [r1, #12]
   838ca:	60c3      	str	r3, [r0, #12]
   838cc:	690b      	ldr	r3, [r1, #16]
   838ce:	6103      	str	r3, [r0, #16]
   838d0:	694b      	ldr	r3, [r1, #20]
   838d2:	6143      	str	r3, [r0, #20]
   838d4:	698b      	ldr	r3, [r1, #24]
   838d6:	6183      	str	r3, [r0, #24]
   838d8:	69cb      	ldr	r3, [r1, #28]
   838da:	61c3      	str	r3, [r0, #28]
   838dc:	6a0b      	ldr	r3, [r1, #32]
   838de:	6203      	str	r3, [r0, #32]
   838e0:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   838e2:	6243      	str	r3, [r0, #36]	; 0x24
   838e4:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   838e6:	6283      	str	r3, [r0, #40]	; 0x28
   838e8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   838ea:	62c3      	str	r3, [r0, #44]	; 0x2c
   838ec:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   838ee:	6303      	str	r3, [r0, #48]	; 0x30
   838f0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   838f2:	6343      	str	r3, [r0, #52]	; 0x34
   838f4:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   838f6:	6383      	str	r3, [r0, #56]	; 0x38
   838f8:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   838fa:	63c3      	str	r3, [r0, #60]	; 0x3c
   838fc:	3040      	adds	r0, #64	; 0x40
   838fe:	3140      	adds	r1, #64	; 0x40
   83900:	3a40      	subs	r2, #64	; 0x40
   83902:	d2db      	bcs.n	838bc <memcpy+0x10>
   83904:	3230      	adds	r2, #48	; 0x30
   83906:	d30b      	bcc.n	83920 <memcpy+0x74>
   83908:	680b      	ldr	r3, [r1, #0]
   8390a:	6003      	str	r3, [r0, #0]
   8390c:	684b      	ldr	r3, [r1, #4]
   8390e:	6043      	str	r3, [r0, #4]
   83910:	688b      	ldr	r3, [r1, #8]
   83912:	6083      	str	r3, [r0, #8]
   83914:	68cb      	ldr	r3, [r1, #12]
   83916:	60c3      	str	r3, [r0, #12]
   83918:	3010      	adds	r0, #16
   8391a:	3110      	adds	r1, #16
   8391c:	3a10      	subs	r2, #16
   8391e:	d2f3      	bcs.n	83908 <memcpy+0x5c>
   83920:	320c      	adds	r2, #12
   83922:	d305      	bcc.n	83930 <memcpy+0x84>
   83924:	f851 3b04 	ldr.w	r3, [r1], #4
   83928:	f840 3b04 	str.w	r3, [r0], #4
   8392c:	3a04      	subs	r2, #4
   8392e:	d2f9      	bcs.n	83924 <memcpy+0x78>
   83930:	3204      	adds	r2, #4
   83932:	d008      	beq.n	83946 <memcpy+0x9a>
   83934:	07d2      	lsls	r2, r2, #31
   83936:	bf1c      	itt	ne
   83938:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8393c:	f800 3b01 	strbne.w	r3, [r0], #1
   83940:	d301      	bcc.n	83946 <memcpy+0x9a>
   83942:	880b      	ldrh	r3, [r1, #0]
   83944:	8003      	strh	r3, [r0, #0]
   83946:	4660      	mov	r0, ip
   83948:	4770      	bx	lr
   8394a:	bf00      	nop
   8394c:	2a08      	cmp	r2, #8
   8394e:	d313      	bcc.n	83978 <memcpy+0xcc>
   83950:	078b      	lsls	r3, r1, #30
   83952:	d0b1      	beq.n	838b8 <memcpy+0xc>
   83954:	f010 0303 	ands.w	r3, r0, #3
   83958:	d0ae      	beq.n	838b8 <memcpy+0xc>
   8395a:	f1c3 0304 	rsb	r3, r3, #4
   8395e:	1ad2      	subs	r2, r2, r3
   83960:	07db      	lsls	r3, r3, #31
   83962:	bf1c      	itt	ne
   83964:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83968:	f800 3b01 	strbne.w	r3, [r0], #1
   8396c:	d3a4      	bcc.n	838b8 <memcpy+0xc>
   8396e:	f831 3b02 	ldrh.w	r3, [r1], #2
   83972:	f820 3b02 	strh.w	r3, [r0], #2
   83976:	e79f      	b.n	838b8 <memcpy+0xc>
   83978:	3a04      	subs	r2, #4
   8397a:	d3d9      	bcc.n	83930 <memcpy+0x84>
   8397c:	3a01      	subs	r2, #1
   8397e:	f811 3b01 	ldrb.w	r3, [r1], #1
   83982:	f800 3b01 	strb.w	r3, [r0], #1
   83986:	d2f9      	bcs.n	8397c <memcpy+0xd0>
   83988:	780b      	ldrb	r3, [r1, #0]
   8398a:	7003      	strb	r3, [r0, #0]
   8398c:	784b      	ldrb	r3, [r1, #1]
   8398e:	7043      	strb	r3, [r0, #1]
   83990:	788b      	ldrb	r3, [r1, #2]
   83992:	7083      	strb	r3, [r0, #2]
   83994:	4660      	mov	r0, ip
   83996:	4770      	bx	lr

00083998 <memset>:
   83998:	0783      	lsls	r3, r0, #30
   8399a:	b530      	push	{r4, r5, lr}
   8399c:	d048      	beq.n	83a30 <memset+0x98>
   8399e:	1e54      	subs	r4, r2, #1
   839a0:	2a00      	cmp	r2, #0
   839a2:	d03f      	beq.n	83a24 <memset+0x8c>
   839a4:	4603      	mov	r3, r0
   839a6:	b2ca      	uxtb	r2, r1
   839a8:	e001      	b.n	839ae <memset+0x16>
   839aa:	3c01      	subs	r4, #1
   839ac:	d33a      	bcc.n	83a24 <memset+0x8c>
   839ae:	f803 2b01 	strb.w	r2, [r3], #1
   839b2:	079d      	lsls	r5, r3, #30
   839b4:	d1f9      	bne.n	839aa <memset+0x12>
   839b6:	2c03      	cmp	r4, #3
   839b8:	d92d      	bls.n	83a16 <memset+0x7e>
   839ba:	b2cd      	uxtb	r5, r1
   839bc:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   839c0:	2c0f      	cmp	r4, #15
   839c2:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   839c6:	d936      	bls.n	83a36 <memset+0x9e>
   839c8:	f1a4 0210 	sub.w	r2, r4, #16
   839cc:	f022 0c0f 	bic.w	ip, r2, #15
   839d0:	f103 0e20 	add.w	lr, r3, #32
   839d4:	44e6      	add	lr, ip
   839d6:	ea4f 1c12 	mov.w	ip, r2, lsr #4
   839da:	f103 0210 	add.w	r2, r3, #16
   839de:	e942 5504 	strd	r5, r5, [r2, #-16]
   839e2:	e942 5502 	strd	r5, r5, [r2, #-8]
   839e6:	3210      	adds	r2, #16
   839e8:	4572      	cmp	r2, lr
   839ea:	d1f8      	bne.n	839de <memset+0x46>
   839ec:	f10c 0201 	add.w	r2, ip, #1
   839f0:	f014 0f0c 	tst.w	r4, #12
   839f4:	eb03 1202 	add.w	r2, r3, r2, lsl #4
   839f8:	f004 0c0f 	and.w	ip, r4, #15
   839fc:	d013      	beq.n	83a26 <memset+0x8e>
   839fe:	f1ac 0304 	sub.w	r3, ip, #4
   83a02:	f023 0303 	bic.w	r3, r3, #3
   83a06:	3304      	adds	r3, #4
   83a08:	4413      	add	r3, r2
   83a0a:	f842 5b04 	str.w	r5, [r2], #4
   83a0e:	4293      	cmp	r3, r2
   83a10:	d1fb      	bne.n	83a0a <memset+0x72>
   83a12:	f00c 0403 	and.w	r4, ip, #3
   83a16:	b12c      	cbz	r4, 83a24 <memset+0x8c>
   83a18:	b2ca      	uxtb	r2, r1
   83a1a:	441c      	add	r4, r3
   83a1c:	f803 2b01 	strb.w	r2, [r3], #1
   83a20:	429c      	cmp	r4, r3
   83a22:	d1fb      	bne.n	83a1c <memset+0x84>
   83a24:	bd30      	pop	{r4, r5, pc}
   83a26:	4664      	mov	r4, ip
   83a28:	4613      	mov	r3, r2
   83a2a:	2c00      	cmp	r4, #0
   83a2c:	d1f4      	bne.n	83a18 <memset+0x80>
   83a2e:	e7f9      	b.n	83a24 <memset+0x8c>
   83a30:	4603      	mov	r3, r0
   83a32:	4614      	mov	r4, r2
   83a34:	e7bf      	b.n	839b6 <memset+0x1e>
   83a36:	461a      	mov	r2, r3
   83a38:	46a4      	mov	ip, r4
   83a3a:	e7e0      	b.n	839fe <memset+0x66>

00083a3c <sprintf>:
   83a3c:	b40e      	push	{r1, r2, r3}
   83a3e:	b530      	push	{r4, r5, lr}
   83a40:	4604      	mov	r4, r0
   83a42:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   83a46:	b09c      	sub	sp, #112	; 0x70
   83a48:	4a0b      	ldr	r2, [pc, #44]	; (83a78 <sprintf+0x3c>)
   83a4a:	ab1f      	add	r3, sp, #124	; 0x7c
   83a4c:	490b      	ldr	r1, [pc, #44]	; (83a7c <sprintf+0x40>)
   83a4e:	9205      	str	r2, [sp, #20]
   83a50:	f853 2b04 	ldr.w	r2, [r3], #4
   83a54:	6808      	ldr	r0, [r1, #0]
   83a56:	a902      	add	r1, sp, #8
   83a58:	e9cd 3401 	strd	r3, r4, [sp, #4]
   83a5c:	9507      	str	r5, [sp, #28]
   83a5e:	9504      	str	r5, [sp, #16]
   83a60:	9406      	str	r4, [sp, #24]
   83a62:	f000 f86f 	bl	83b44 <_svfprintf_r>
   83a66:	2200      	movs	r2, #0
   83a68:	9b02      	ldr	r3, [sp, #8]
   83a6a:	701a      	strb	r2, [r3, #0]
   83a6c:	b01c      	add	sp, #112	; 0x70
   83a6e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   83a72:	b003      	add	sp, #12
   83a74:	4770      	bx	lr
   83a76:	bf00      	nop
   83a78:	ffff0208 	.word	0xffff0208
   83a7c:	200003a0 	.word	0x200003a0

00083a80 <strlen>:
   83a80:	f020 0103 	bic.w	r1, r0, #3
   83a84:	f010 0003 	ands.w	r0, r0, #3
   83a88:	f1c0 0000 	rsb	r0, r0, #0
   83a8c:	f851 3b04 	ldr.w	r3, [r1], #4
   83a90:	f100 0c04 	add.w	ip, r0, #4
   83a94:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83a98:	f06f 0200 	mvn.w	r2, #0
   83a9c:	bf1c      	itt	ne
   83a9e:	fa22 f20c 	lsrne.w	r2, r2, ip
   83aa2:	4313      	orrne	r3, r2
   83aa4:	f04f 0c01 	mov.w	ip, #1
   83aa8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83aac:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   83ab0:	eba3 020c 	sub.w	r2, r3, ip
   83ab4:	ea22 0203 	bic.w	r2, r2, r3
   83ab8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83abc:	bf04      	itt	eq
   83abe:	f851 3b04 	ldreq.w	r3, [r1], #4
   83ac2:	3004      	addeq	r0, #4
   83ac4:	d0f4      	beq.n	83ab0 <strlen+0x30>
   83ac6:	f1c2 0100 	rsb	r1, r2, #0
   83aca:	ea02 0201 	and.w	r2, r2, r1
   83ace:	fab2 f282 	clz	r2, r2
   83ad2:	f1c2 021f 	rsb	r2, r2, #31
   83ad6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   83ada:	4770      	bx	lr

00083adc <strncpy>:
   83adc:	b530      	push	{r4, r5, lr}
   83ade:	ea40 0401 	orr.w	r4, r0, r1
   83ae2:	07a3      	lsls	r3, r4, #30
   83ae4:	d122      	bne.n	83b2c <strncpy+0x50>
   83ae6:	2a03      	cmp	r2, #3
   83ae8:	d920      	bls.n	83b2c <strncpy+0x50>
   83aea:	460b      	mov	r3, r1
   83aec:	4684      	mov	ip, r0
   83aee:	4619      	mov	r1, r3
   83af0:	f853 5b04 	ldr.w	r5, [r3], #4
   83af4:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
   83af8:	ea24 0405 	bic.w	r4, r4, r5
   83afc:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
   83b00:	d115      	bne.n	83b2e <strncpy+0x52>
   83b02:	3a04      	subs	r2, #4
   83b04:	2a03      	cmp	r2, #3
   83b06:	4619      	mov	r1, r3
   83b08:	f84c 5b04 	str.w	r5, [ip], #4
   83b0c:	d8ef      	bhi.n	83aee <strncpy+0x12>
   83b0e:	f101 3eff 	add.w	lr, r1, #4294967295
   83b12:	b152      	cbz	r2, 83b2a <strncpy+0x4e>
   83b14:	4663      	mov	r3, ip
   83b16:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
   83b1a:	1e54      	subs	r4, r2, #1
   83b1c:	f803 1b01 	strb.w	r1, [r3], #1
   83b20:	b141      	cbz	r1, 83b34 <strncpy+0x58>
   83b22:	4622      	mov	r2, r4
   83b24:	469c      	mov	ip, r3
   83b26:	2a00      	cmp	r2, #0
   83b28:	d1f4      	bne.n	83b14 <strncpy+0x38>
   83b2a:	bd30      	pop	{r4, r5, pc}
   83b2c:	4684      	mov	ip, r0
   83b2e:	f101 3eff 	add.w	lr, r1, #4294967295
   83b32:	e7ee      	b.n	83b12 <strncpy+0x36>
   83b34:	4462      	add	r2, ip
   83b36:	2c00      	cmp	r4, #0
   83b38:	d0f7      	beq.n	83b2a <strncpy+0x4e>
   83b3a:	f803 1b01 	strb.w	r1, [r3], #1
   83b3e:	4293      	cmp	r3, r2
   83b40:	d1fb      	bne.n	83b3a <strncpy+0x5e>
   83b42:	bd30      	pop	{r4, r5, pc}

00083b44 <_svfprintf_r>:
   83b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b48:	b0d5      	sub	sp, #340	; 0x154
   83b4a:	460c      	mov	r4, r1
   83b4c:	910c      	str	r1, [sp, #48]	; 0x30
   83b4e:	4691      	mov	r9, r2
   83b50:	930e      	str	r3, [sp, #56]	; 0x38
   83b52:	900a      	str	r0, [sp, #40]	; 0x28
   83b54:	f004 f9ee 	bl	87f34 <_localeconv_r>
   83b58:	6803      	ldr	r3, [r0, #0]
   83b5a:	4618      	mov	r0, r3
   83b5c:	9317      	str	r3, [sp, #92]	; 0x5c
   83b5e:	f7ff ff8f 	bl	83a80 <strlen>
   83b62:	89a3      	ldrh	r3, [r4, #12]
   83b64:	9016      	str	r0, [sp, #88]	; 0x58
   83b66:	0619      	lsls	r1, r3, #24
   83b68:	d503      	bpl.n	83b72 <_svfprintf_r+0x2e>
   83b6a:	6923      	ldr	r3, [r4, #16]
   83b6c:	2b00      	cmp	r3, #0
   83b6e:	f000 878f 	beq.w	84a90 <_svfprintf_r+0xf4c>
   83b72:	2400      	movs	r4, #0
   83b74:	ab2b      	add	r3, sp, #172	; 0xac
   83b76:	4622      	mov	r2, r4
   83b78:	4698      	mov	r8, r3
   83b7a:	464d      	mov	r5, r9
   83b7c:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
   83b80:	9328      	str	r3, [sp, #160]	; 0xa0
   83b82:	9412      	str	r4, [sp, #72]	; 0x48
   83b84:	2300      	movs	r3, #0
   83b86:	2400      	movs	r4, #0
   83b88:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   83b8c:	782b      	ldrb	r3, [r5, #0]
   83b8e:	e9cd 2219 	strd	r2, r2, [sp, #100]	; 0x64
   83b92:	e9cd 221b 	strd	r2, r2, [sp, #108]	; 0x6c
   83b96:	9218      	str	r2, [sp, #96]	; 0x60
   83b98:	9208      	str	r2, [sp, #32]
   83b9a:	2b00      	cmp	r3, #0
   83b9c:	f000 81ce 	beq.w	83f3c <_svfprintf_r+0x3f8>
   83ba0:	46aa      	mov	sl, r5
   83ba2:	e004      	b.n	83bae <_svfprintf_r+0x6a>
   83ba4:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
   83ba8:	2b00      	cmp	r3, #0
   83baa:	f000 8109 	beq.w	83dc0 <_svfprintf_r+0x27c>
   83bae:	2b25      	cmp	r3, #37	; 0x25
   83bb0:	d1f8      	bne.n	83ba4 <_svfprintf_r+0x60>
   83bb2:	ebba 0605 	subs.w	r6, sl, r5
   83bb6:	f040 8107 	bne.w	83dc8 <_svfprintf_r+0x284>
   83bba:	f89a 3000 	ldrb.w	r3, [sl]
   83bbe:	2b00      	cmp	r3, #0
   83bc0:	f000 81bc 	beq.w	83f3c <_svfprintf_r+0x3f8>
   83bc4:	2300      	movs	r3, #0
   83bc6:	f04f 32ff 	mov.w	r2, #4294967295
   83bca:	f04f 092b 	mov.w	r9, #43	; 0x2b
   83bce:	2420      	movs	r4, #32
   83bd0:	461f      	mov	r7, r3
   83bd2:	f89a 6001 	ldrb.w	r6, [sl, #1]
   83bd6:	9207      	str	r2, [sp, #28]
   83bd8:	f10a 0a01 	add.w	sl, sl, #1
   83bdc:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   83be0:	9309      	str	r3, [sp, #36]	; 0x24
   83be2:	f10a 0a01 	add.w	sl, sl, #1
   83be6:	f1a6 0320 	sub.w	r3, r6, #32
   83bea:	2b5a      	cmp	r3, #90	; 0x5a
   83bec:	f200 8120 	bhi.w	83e30 <_svfprintf_r+0x2ec>
   83bf0:	e8df f013 	tbh	[pc, r3, lsl #1]
   83bf4:	011e02ca 	.word	0x011e02ca
   83bf8:	02c5011e 	.word	0x02c5011e
   83bfc:	011e011e 	.word	0x011e011e
   83c00:	02a3011e 	.word	0x02a3011e
   83c04:	011e011e 	.word	0x011e011e
   83c08:	02f3006a 	.word	0x02f3006a
   83c0c:	0247011e 	.word	0x0247011e
   83c10:	011e02d9 	.word	0x011e02d9
   83c14:	005b02d4 	.word	0x005b02d4
   83c18:	005b005b 	.word	0x005b005b
   83c1c:	005b005b 	.word	0x005b005b
   83c20:	005b005b 	.word	0x005b005b
   83c24:	005b005b 	.word	0x005b005b
   83c28:	011e011e 	.word	0x011e011e
   83c2c:	011e011e 	.word	0x011e011e
   83c30:	011e011e 	.word	0x011e011e
   83c34:	01b0011e 	.word	0x01b0011e
   83c38:	020b011e 	.word	0x020b011e
   83c3c:	01b0007a 	.word	0x01b0007a
   83c40:	01b001b0 	.word	0x01b001b0
   83c44:	011e011e 	.word	0x011e011e
   83c48:	011e011e 	.word	0x011e011e
   83c4c:	011e029e 	.word	0x011e029e
   83c50:	00b6011e 	.word	0x00b6011e
   83c54:	011e011e 	.word	0x011e011e
   83c58:	0219011e 	.word	0x0219011e
   83c5c:	024c011e 	.word	0x024c011e
   83c60:	011e011e 	.word	0x011e011e
   83c64:	011e073f 	.word	0x011e073f
   83c68:	011e011e 	.word	0x011e011e
   83c6c:	011e011e 	.word	0x011e011e
   83c70:	011e011e 	.word	0x011e011e
   83c74:	01b0011e 	.word	0x01b0011e
   83c78:	020b011e 	.word	0x020b011e
   83c7c:	01b0007c 	.word	0x01b0007c
   83c80:	01b001b0 	.word	0x01b001b0
   83c84:	007c0291 	.word	0x007c0291
   83c88:	011e0075 	.word	0x011e0075
   83c8c:	011e0284 	.word	0x011e0284
   83c90:	00b80270 	.word	0x00b80270
   83c94:	0075025e 	.word	0x0075025e
   83c98:	0219011e 	.word	0x0219011e
   83c9c:	071c0072 	.word	0x071c0072
   83ca0:	011e011e 	.word	0x011e011e
   83ca4:	011e071f 	.word	0x011e071f
   83ca8:	0072      	.short	0x0072
   83caa:	2200      	movs	r2, #0
   83cac:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   83cb0:	f81a 6b01 	ldrb.w	r6, [sl], #1
   83cb4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   83cb8:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   83cbc:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   83cc0:	2b09      	cmp	r3, #9
   83cc2:	d9f5      	bls.n	83cb0 <_svfprintf_r+0x16c>
   83cc4:	9209      	str	r2, [sp, #36]	; 0x24
   83cc6:	e78e      	b.n	83be6 <_svfprintf_r+0xa2>
   83cc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83cca:	f853 2b04 	ldr.w	r2, [r3], #4
   83cce:	2a00      	cmp	r2, #0
   83cd0:	9209      	str	r2, [sp, #36]	; 0x24
   83cd2:	930e      	str	r3, [sp, #56]	; 0x38
   83cd4:	f2c0 81d2 	blt.w	8407c <_svfprintf_r+0x538>
   83cd8:	f89a 6000 	ldrb.w	r6, [sl]
   83cdc:	e781      	b.n	83be2 <_svfprintf_r+0x9e>
   83cde:	f89a 6000 	ldrb.w	r6, [sl]
   83ce2:	f047 0720 	orr.w	r7, r7, #32
   83ce6:	e77c      	b.n	83be2 <_svfprintf_r+0x9e>
   83ce8:	f047 0710 	orr.w	r7, r7, #16
   83cec:	06ba      	lsls	r2, r7, #26
   83cee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83cf0:	f140 817d 	bpl.w	83fee <_svfprintf_r+0x4aa>
   83cf4:	3307      	adds	r3, #7
   83cf6:	f023 0307 	bic.w	r3, r3, #7
   83cfa:	461a      	mov	r2, r3
   83cfc:	685b      	ldr	r3, [r3, #4]
   83cfe:	f852 4b08 	ldr.w	r4, [r2], #8
   83d02:	4699      	mov	r9, r3
   83d04:	920e      	str	r2, [sp, #56]	; 0x38
   83d06:	2b00      	cmp	r3, #0
   83d08:	f2c0 857f 	blt.w	8480a <_svfprintf_r+0xcc6>
   83d0c:	9b07      	ldr	r3, [sp, #28]
   83d0e:	3301      	adds	r3, #1
   83d10:	f001 8039 	beq.w	84d86 <_svfprintf_r+0x1242>
   83d14:	ea54 0309 	orrs.w	r3, r4, r9
   83d18:	f027 0b80 	bic.w	fp, r7, #128	; 0x80
   83d1c:	f000 8505 	beq.w	8472a <_svfprintf_r+0xbe6>
   83d20:	2c0a      	cmp	r4, #10
   83d22:	f179 0300 	sbcs.w	r3, r9, #0
   83d26:	f080 8793 	bcs.w	84c50 <_svfprintf_r+0x110c>
   83d2a:	2301      	movs	r3, #1
   83d2c:	465f      	mov	r7, fp
   83d2e:	3430      	adds	r4, #48	; 0x30
   83d30:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
   83d34:	930b      	str	r3, [sp, #44]	; 0x2c
   83d36:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   83d3a:	9a07      	ldr	r2, [sp, #28]
   83d3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d3e:	2300      	movs	r3, #0
   83d40:	428a      	cmp	r2, r1
   83d42:	bfb8      	it	lt
   83d44:	460a      	movlt	r2, r1
   83d46:	9206      	str	r2, [sp, #24]
   83d48:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   83d4c:	930d      	str	r3, [sp, #52]	; 0x34
   83d4e:	930f      	str	r3, [sp, #60]	; 0x3c
   83d50:	9313      	str	r3, [sp, #76]	; 0x4c
   83d52:	9310      	str	r3, [sp, #64]	; 0x40
   83d54:	2a00      	cmp	r2, #0
   83d56:	d07c      	beq.n	83e52 <_svfprintf_r+0x30e>
   83d58:	9b06      	ldr	r3, [sp, #24]
   83d5a:	3301      	adds	r3, #1
   83d5c:	9306      	str	r3, [sp, #24]
   83d5e:	e078      	b.n	83e52 <_svfprintf_r+0x30e>
   83d60:	f047 0710 	orr.w	r7, r7, #16
   83d64:	f017 0920 	ands.w	r9, r7, #32
   83d68:	f000 8132 	beq.w	83fd0 <_svfprintf_r+0x48c>
   83d6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83d6e:	3307      	adds	r3, #7
   83d70:	f023 0307 	bic.w	r3, r3, #7
   83d74:	f8d3 9004 	ldr.w	r9, [r3, #4]
   83d78:	f853 4b08 	ldr.w	r4, [r3], #8
   83d7c:	930e      	str	r3, [sp, #56]	; 0x38
   83d7e:	2300      	movs	r3, #0
   83d80:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   83d84:	2200      	movs	r2, #0
   83d86:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   83d8a:	9a07      	ldr	r2, [sp, #28]
   83d8c:	1c51      	adds	r1, r2, #1
   83d8e:	f000 822a 	beq.w	841e6 <_svfprintf_r+0x6a2>
   83d92:	ea54 0109 	orrs.w	r1, r4, r9
   83d96:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
   83d9a:	f040 8223 	bne.w	841e4 <_svfprintf_r+0x6a0>
   83d9e:	2a00      	cmp	r2, #0
   83da0:	f041 802b 	bne.w	84dfa <_svfprintf_r+0x12b6>
   83da4:	2b00      	cmp	r3, #0
   83da6:	f040 84c5 	bne.w	84734 <_svfprintf_r+0xbf0>
   83daa:	f01b 0301 	ands.w	r3, fp, #1
   83dae:	930b      	str	r3, [sp, #44]	; 0x2c
   83db0:	f000 8554 	beq.w	8485c <_svfprintf_r+0xd18>
   83db4:	2330      	movs	r3, #48	; 0x30
   83db6:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   83dba:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
   83dbe:	e7bc      	b.n	83d3a <_svfprintf_r+0x1f6>
   83dc0:	ebba 0605 	subs.w	r6, sl, r5
   83dc4:	f000 80ba 	beq.w	83f3c <_svfprintf_r+0x3f8>
   83dc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   83dca:	e9c8 5600 	strd	r5, r6, [r8]
   83dce:	4433      	add	r3, r6
   83dd0:	932a      	str	r3, [sp, #168]	; 0xa8
   83dd2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83dd4:	3301      	adds	r3, #1
   83dd6:	2b07      	cmp	r3, #7
   83dd8:	9329      	str	r3, [sp, #164]	; 0xa4
   83dda:	dc05      	bgt.n	83de8 <_svfprintf_r+0x2a4>
   83ddc:	f108 0808 	add.w	r8, r8, #8
   83de0:	9b08      	ldr	r3, [sp, #32]
   83de2:	4433      	add	r3, r6
   83de4:	9308      	str	r3, [sp, #32]
   83de6:	e6e8      	b.n	83bba <_svfprintf_r+0x76>
   83de8:	990c      	ldr	r1, [sp, #48]	; 0x30
   83dea:	980a      	ldr	r0, [sp, #40]	; 0x28
   83dec:	aa28      	add	r2, sp, #160	; 0xa0
   83dee:	f005 fad1 	bl	89394 <__ssprint_r>
   83df2:	b980      	cbnz	r0, 83e16 <_svfprintf_r+0x2d2>
   83df4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   83df8:	e7f2      	b.n	83de0 <_svfprintf_r+0x29c>
   83dfa:	990c      	ldr	r1, [sp, #48]	; 0x30
   83dfc:	980a      	ldr	r0, [sp, #40]	; 0x28
   83dfe:	aa28      	add	r2, sp, #160	; 0xa0
   83e00:	f005 fac8 	bl	89394 <__ssprint_r>
   83e04:	2800      	cmp	r0, #0
   83e06:	f000 808a 	beq.w	83f1e <_svfprintf_r+0x3da>
   83e0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83e0c:	b11b      	cbz	r3, 83e16 <_svfprintf_r+0x2d2>
   83e0e:	990d      	ldr	r1, [sp, #52]	; 0x34
   83e10:	980a      	ldr	r0, [sp, #40]	; 0x28
   83e12:	f003 fded 	bl	879f0 <_free_r>
   83e16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83e18:	899b      	ldrh	r3, [r3, #12]
   83e1a:	f013 0f40 	tst.w	r3, #64	; 0x40
   83e1e:	9b08      	ldr	r3, [sp, #32]
   83e20:	bf18      	it	ne
   83e22:	f04f 33ff 	movne.w	r3, #4294967295
   83e26:	9308      	str	r3, [sp, #32]
   83e28:	9808      	ldr	r0, [sp, #32]
   83e2a:	b055      	add	sp, #340	; 0x154
   83e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83e30:	2e00      	cmp	r6, #0
   83e32:	f000 8083 	beq.w	83f3c <_svfprintf_r+0x3f8>
   83e36:	2301      	movs	r3, #1
   83e38:	2200      	movs	r2, #0
   83e3a:	f88d 60ec 	strb.w	r6, [sp, #236]	; 0xec
   83e3e:	9306      	str	r3, [sp, #24]
   83e40:	ad3b      	add	r5, sp, #236	; 0xec
   83e42:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   83e46:	930b      	str	r3, [sp, #44]	; 0x2c
   83e48:	920d      	str	r2, [sp, #52]	; 0x34
   83e4a:	9207      	str	r2, [sp, #28]
   83e4c:	920f      	str	r2, [sp, #60]	; 0x3c
   83e4e:	9213      	str	r2, [sp, #76]	; 0x4c
   83e50:	9210      	str	r2, [sp, #64]	; 0x40
   83e52:	f017 0302 	ands.w	r3, r7, #2
   83e56:	d002      	beq.n	83e5e <_svfprintf_r+0x31a>
   83e58:	9906      	ldr	r1, [sp, #24]
   83e5a:	3102      	adds	r1, #2
   83e5c:	9106      	str	r1, [sp, #24]
   83e5e:	f017 0b84 	ands.w	fp, r7, #132	; 0x84
   83e62:	d107      	bne.n	83e74 <_svfprintf_r+0x330>
   83e64:	9909      	ldr	r1, [sp, #36]	; 0x24
   83e66:	9806      	ldr	r0, [sp, #24]
   83e68:	eba1 0900 	sub.w	r9, r1, r0
   83e6c:	f1b9 0f00 	cmp.w	r9, #0
   83e70:	f300 8336 	bgt.w	844e0 <_svfprintf_r+0x99c>
   83e74:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   83e76:	b182      	cbz	r2, 83e9a <_svfprintf_r+0x356>
   83e78:	2201      	movs	r2, #1
   83e7a:	f8c8 2004 	str.w	r2, [r8, #4]
   83e7e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   83e80:	3401      	adds	r4, #1
   83e82:	3201      	adds	r2, #1
   83e84:	f10d 0183 	add.w	r1, sp, #131	; 0x83
   83e88:	2a07      	cmp	r2, #7
   83e8a:	942a      	str	r4, [sp, #168]	; 0xa8
   83e8c:	9229      	str	r2, [sp, #164]	; 0xa4
   83e8e:	f8c8 1000 	str.w	r1, [r8]
   83e92:	f300 8369 	bgt.w	84568 <_svfprintf_r+0xa24>
   83e96:	f108 0808 	add.w	r8, r8, #8
   83e9a:	b17b      	cbz	r3, 83ebc <_svfprintf_r+0x378>
   83e9c:	2302      	movs	r3, #2
   83e9e:	f8c8 3004 	str.w	r3, [r8, #4]
   83ea2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83ea4:	3402      	adds	r4, #2
   83ea6:	3301      	adds	r3, #1
   83ea8:	aa21      	add	r2, sp, #132	; 0x84
   83eaa:	2b07      	cmp	r3, #7
   83eac:	942a      	str	r4, [sp, #168]	; 0xa8
   83eae:	9329      	str	r3, [sp, #164]	; 0xa4
   83eb0:	f8c8 2000 	str.w	r2, [r8]
   83eb4:	f300 836c 	bgt.w	84590 <_svfprintf_r+0xa4c>
   83eb8:	f108 0808 	add.w	r8, r8, #8
   83ebc:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
   83ec0:	f000 822e 	beq.w	84320 <_svfprintf_r+0x7dc>
   83ec4:	9b07      	ldr	r3, [sp, #28]
   83ec6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83ec8:	eba3 0b02 	sub.w	fp, r3, r2
   83ecc:	f1bb 0f00 	cmp.w	fp, #0
   83ed0:	f300 8271 	bgt.w	843b6 <_svfprintf_r+0x872>
   83ed4:	05fb      	lsls	r3, r7, #23
   83ed6:	f100 81c5 	bmi.w	84264 <_svfprintf_r+0x720>
   83eda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83edc:	f8c8 5000 	str.w	r5, [r8]
   83ee0:	441c      	add	r4, r3
   83ee2:	f8c8 3004 	str.w	r3, [r8, #4]
   83ee6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83ee8:	942a      	str	r4, [sp, #168]	; 0xa8
   83eea:	3301      	adds	r3, #1
   83eec:	2b07      	cmp	r3, #7
   83eee:	9329      	str	r3, [sp, #164]	; 0xa4
   83ef0:	f300 82ea 	bgt.w	844c8 <_svfprintf_r+0x984>
   83ef4:	f108 0808 	add.w	r8, r8, #8
   83ef8:	077b      	lsls	r3, r7, #29
   83efa:	d505      	bpl.n	83f08 <_svfprintf_r+0x3c4>
   83efc:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83efe:	9a06      	ldr	r2, [sp, #24]
   83f00:	1a9d      	subs	r5, r3, r2
   83f02:	2d00      	cmp	r5, #0
   83f04:	f300 8350 	bgt.w	845a8 <_svfprintf_r+0xa64>
   83f08:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
   83f0c:	9906      	ldr	r1, [sp, #24]
   83f0e:	428a      	cmp	r2, r1
   83f10:	bfac      	ite	ge
   83f12:	189b      	addge	r3, r3, r2
   83f14:	185b      	addlt	r3, r3, r1
   83f16:	9308      	str	r3, [sp, #32]
   83f18:	2c00      	cmp	r4, #0
   83f1a:	f47f af6e 	bne.w	83dfa <_svfprintf_r+0x2b6>
   83f1e:	2300      	movs	r3, #0
   83f20:	9329      	str	r3, [sp, #164]	; 0xa4
   83f22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83f24:	b11b      	cbz	r3, 83f2e <_svfprintf_r+0x3ea>
   83f26:	990d      	ldr	r1, [sp, #52]	; 0x34
   83f28:	980a      	ldr	r0, [sp, #40]	; 0x28
   83f2a:	f003 fd61 	bl	879f0 <_free_r>
   83f2e:	4655      	mov	r5, sl
   83f30:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   83f34:	782b      	ldrb	r3, [r5, #0]
   83f36:	2b00      	cmp	r3, #0
   83f38:	f47f ae32 	bne.w	83ba0 <_svfprintf_r+0x5c>
   83f3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   83f3e:	2b00      	cmp	r3, #0
   83f40:	f43f af69 	beq.w	83e16 <_svfprintf_r+0x2d2>
   83f44:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83f46:	980a      	ldr	r0, [sp, #40]	; 0x28
   83f48:	4621      	mov	r1, r4
   83f4a:	aa28      	add	r2, sp, #160	; 0xa0
   83f4c:	f005 fa22 	bl	89394 <__ssprint_r>
   83f50:	89a3      	ldrh	r3, [r4, #12]
   83f52:	e762      	b.n	83e1a <_svfprintf_r+0x2d6>
   83f54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83f56:	3307      	adds	r3, #7
   83f58:	f023 0207 	bic.w	r2, r3, #7
   83f5c:	e8f2 3402 	ldrd	r3, r4, [r2], #8
   83f60:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   83f64:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   83f68:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
   83f6c:	4699      	mov	r9, r3
   83f6e:	4618      	mov	r0, r3
   83f70:	920e      	str	r2, [sp, #56]	; 0x38
   83f72:	4621      	mov	r1, r4
   83f74:	f04f 32ff 	mov.w	r2, #4294967295
   83f78:	4bb6      	ldr	r3, [pc, #728]	; (84254 <_svfprintf_r+0x710>)
   83f7a:	f006 f94b 	bl	8a214 <__aeabi_dcmpun>
   83f7e:	2800      	cmp	r0, #0
   83f80:	f040 8496 	bne.w	848b0 <_svfprintf_r+0xd6c>
   83f84:	4648      	mov	r0, r9
   83f86:	4621      	mov	r1, r4
   83f88:	f04f 32ff 	mov.w	r2, #4294967295
   83f8c:	4bb1      	ldr	r3, [pc, #708]	; (84254 <_svfprintf_r+0x710>)
   83f8e:	f006 f923 	bl	8a1d8 <__aeabi_dcmple>
   83f92:	2800      	cmp	r0, #0
   83f94:	f040 848c 	bne.w	848b0 <_svfprintf_r+0xd6c>
   83f98:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   83f9c:	2200      	movs	r2, #0
   83f9e:	2300      	movs	r3, #0
   83fa0:	f006 f910 	bl	8a1c4 <__aeabi_dcmplt>
   83fa4:	2800      	cmp	r0, #0
   83fa6:	f040 87a6 	bne.w	84ef6 <_svfprintf_r+0x13b2>
   83faa:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   83fae:	2100      	movs	r1, #0
   83fb0:	2003      	movs	r0, #3
   83fb2:	4da9      	ldr	r5, [pc, #676]	; (84258 <_svfprintf_r+0x714>)
   83fb4:	4ba9      	ldr	r3, [pc, #676]	; (8425c <_svfprintf_r+0x718>)
   83fb6:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   83fba:	910d      	str	r1, [sp, #52]	; 0x34
   83fbc:	9006      	str	r0, [sp, #24]
   83fbe:	2e47      	cmp	r6, #71	; 0x47
   83fc0:	bfc8      	it	gt
   83fc2:	461d      	movgt	r5, r3
   83fc4:	9107      	str	r1, [sp, #28]
   83fc6:	900b      	str	r0, [sp, #44]	; 0x2c
   83fc8:	910f      	str	r1, [sp, #60]	; 0x3c
   83fca:	9113      	str	r1, [sp, #76]	; 0x4c
   83fcc:	9110      	str	r1, [sp, #64]	; 0x40
   83fce:	e6c1      	b.n	83d54 <_svfprintf_r+0x210>
   83fd0:	f017 0310 	ands.w	r3, r7, #16
   83fd4:	f040 8462 	bne.w	8489c <_svfprintf_r+0xd58>
   83fd8:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   83fdc:	f000 877b 	beq.w	84ed6 <_svfprintf_r+0x1392>
   83fe0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83fe2:	4699      	mov	r9, r3
   83fe4:	f852 4b04 	ldr.w	r4, [r2], #4
   83fe8:	920e      	str	r2, [sp, #56]	; 0x38
   83fea:	b2a4      	uxth	r4, r4
   83fec:	e6c7      	b.n	83d7e <_svfprintf_r+0x23a>
   83fee:	f853 4b04 	ldr.w	r4, [r3], #4
   83ff2:	930e      	str	r3, [sp, #56]	; 0x38
   83ff4:	06fb      	lsls	r3, r7, #27
   83ff6:	f100 8441 	bmi.w	8487c <_svfprintf_r+0xd38>
   83ffa:	067d      	lsls	r5, r7, #25
   83ffc:	f140 843b 	bpl.w	84876 <_svfprintf_r+0xd32>
   84000:	f344 39c0 	sbfx	r9, r4, #15, #1
   84004:	464b      	mov	r3, r9
   84006:	b224      	sxth	r4, r4
   84008:	e67d      	b.n	83d06 <_svfprintf_r+0x1c2>
   8400a:	2001      	movs	r0, #1
   8400c:	2200      	movs	r2, #0
   8400e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84010:	9006      	str	r0, [sp, #24]
   84012:	f853 1b04 	ldr.w	r1, [r3], #4
   84016:	ad3b      	add	r5, sp, #236	; 0xec
   84018:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   8401c:	f88d 10ec 	strb.w	r1, [sp, #236]	; 0xec
   84020:	930e      	str	r3, [sp, #56]	; 0x38
   84022:	900b      	str	r0, [sp, #44]	; 0x2c
   84024:	e710      	b.n	83e48 <_svfprintf_r+0x304>
   84026:	f04f 0900 	mov.w	r9, #0
   8402a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8402c:	9b07      	ldr	r3, [sp, #28]
   8402e:	f854 5b04 	ldr.w	r5, [r4], #4
   84032:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   84036:	2d00      	cmp	r5, #0
   84038:	f000 86ee 	beq.w	84e18 <_svfprintf_r+0x12d4>
   8403c:	1c5a      	adds	r2, r3, #1
   8403e:	f000 8560 	beq.w	84b02 <_svfprintf_r+0xfbe>
   84042:	461a      	mov	r2, r3
   84044:	4649      	mov	r1, r9
   84046:	4628      	mov	r0, r5
   84048:	f004 fab2 	bl	885b0 <memchr>
   8404c:	900d      	str	r0, [sp, #52]	; 0x34
   8404e:	2800      	cmp	r0, #0
   84050:	f001 809e 	beq.w	85190 <_svfprintf_r+0x164c>
   84054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   84056:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   8405a:	1b5b      	subs	r3, r3, r5
   8405c:	930b      	str	r3, [sp, #44]	; 0x2c
   8405e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84062:	f8cd 901c 	str.w	r9, [sp, #28]
   84066:	940e      	str	r4, [sp, #56]	; 0x38
   84068:	9306      	str	r3, [sp, #24]
   8406a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   8406e:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   84072:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   84076:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   8407a:	e66b      	b.n	83d54 <_svfprintf_r+0x210>
   8407c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8407e:	425b      	negs	r3, r3
   84080:	9309      	str	r3, [sp, #36]	; 0x24
   84082:	f89a 6000 	ldrb.w	r6, [sl]
   84086:	f047 0704 	orr.w	r7, r7, #4
   8408a:	e5aa      	b.n	83be2 <_svfprintf_r+0x9e>
   8408c:	f047 0b10 	orr.w	fp, r7, #16
   84090:	f01b 0920 	ands.w	r9, fp, #32
   84094:	f000 83aa 	beq.w	847ec <_svfprintf_r+0xca8>
   84098:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8409a:	3307      	adds	r3, #7
   8409c:	f023 0307 	bic.w	r3, r3, #7
   840a0:	461a      	mov	r2, r3
   840a2:	f852 4b08 	ldr.w	r4, [r2], #8
   840a6:	f8d3 9004 	ldr.w	r9, [r3, #4]
   840aa:	920e      	str	r2, [sp, #56]	; 0x38
   840ac:	2301      	movs	r3, #1
   840ae:	e669      	b.n	83d84 <_svfprintf_r+0x240>
   840b0:	2230      	movs	r2, #48	; 0x30
   840b2:	2678      	movs	r6, #120	; 0x78
   840b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   840b6:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   840ba:	f853 4b04 	ldr.w	r4, [r3], #4
   840be:	4a68      	ldr	r2, [pc, #416]	; (84260 <_svfprintf_r+0x71c>)
   840c0:	930e      	str	r3, [sp, #56]	; 0x38
   840c2:	f04f 0900 	mov.w	r9, #0
   840c6:	2302      	movs	r3, #2
   840c8:	f047 0b02 	orr.w	fp, r7, #2
   840cc:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   840d0:	9218      	str	r2, [sp, #96]	; 0x60
   840d2:	e657      	b.n	83d84 <_svfprintf_r+0x240>
   840d4:	06bd      	lsls	r5, r7, #26
   840d6:	f100 83d6 	bmi.w	84886 <_svfprintf_r+0xd42>
   840da:	06fc      	lsls	r4, r7, #27
   840dc:	f100 8693 	bmi.w	84e06 <_svfprintf_r+0x12c2>
   840e0:	0678      	lsls	r0, r7, #25
   840e2:	f100 875d 	bmi.w	84fa0 <_svfprintf_r+0x145c>
   840e6:	05b9      	lsls	r1, r7, #22
   840e8:	f140 868d 	bpl.w	84e06 <_svfprintf_r+0x12c2>
   840ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   840ee:	9908      	ldr	r1, [sp, #32]
   840f0:	f853 2b04 	ldr.w	r2, [r3], #4
   840f4:	4655      	mov	r5, sl
   840f6:	7011      	strb	r1, [r2, #0]
   840f8:	930e      	str	r3, [sp, #56]	; 0x38
   840fa:	e71b      	b.n	83f34 <_svfprintf_r+0x3f0>
   840fc:	f89a 6000 	ldrb.w	r6, [sl]
   84100:	2e6c      	cmp	r6, #108	; 0x6c
   84102:	bf03      	ittte	eq
   84104:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   84108:	f047 0720 	orreq.w	r7, r7, #32
   8410c:	f10a 0a01 	addeq.w	sl, sl, #1
   84110:	f047 0710 	orrne.w	r7, r7, #16
   84114:	e565      	b.n	83be2 <_svfprintf_r+0x9e>
   84116:	f89a 6000 	ldrb.w	r6, [sl]
   8411a:	2e68      	cmp	r6, #104	; 0x68
   8411c:	bf03      	ittte	eq
   8411e:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   84122:	f447 7700 	orreq.w	r7, r7, #512	; 0x200
   84126:	f10a 0a01 	addeq.w	sl, sl, #1
   8412a:	f047 0740 	orrne.w	r7, r7, #64	; 0x40
   8412e:	e558      	b.n	83be2 <_svfprintf_r+0x9e>
   84130:	f89a 6000 	ldrb.w	r6, [sl]
   84134:	f047 0708 	orr.w	r7, r7, #8
   84138:	e553      	b.n	83be2 <_svfprintf_r+0x9e>
   8413a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   8413c:	4630      	mov	r0, r6
   8413e:	f003 fef9 	bl	87f34 <_localeconv_r>
   84142:	6843      	ldr	r3, [r0, #4]
   84144:	4618      	mov	r0, r3
   84146:	931b      	str	r3, [sp, #108]	; 0x6c
   84148:	f7ff fc9a 	bl	83a80 <strlen>
   8414c:	4603      	mov	r3, r0
   8414e:	4630      	mov	r0, r6
   84150:	931c      	str	r3, [sp, #112]	; 0x70
   84152:	461e      	mov	r6, r3
   84154:	f003 feee 	bl	87f34 <_localeconv_r>
   84158:	6883      	ldr	r3, [r0, #8]
   8415a:	9319      	str	r3, [sp, #100]	; 0x64
   8415c:	2e00      	cmp	r6, #0
   8415e:	f43f adbb 	beq.w	83cd8 <_svfprintf_r+0x194>
   84162:	9b19      	ldr	r3, [sp, #100]	; 0x64
   84164:	2b00      	cmp	r3, #0
   84166:	f43f adb7 	beq.w	83cd8 <_svfprintf_r+0x194>
   8416a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   8416c:	781b      	ldrb	r3, [r3, #0]
   8416e:	2b00      	cmp	r3, #0
   84170:	f43f adb2 	beq.w	83cd8 <_svfprintf_r+0x194>
   84174:	f89a 6000 	ldrb.w	r6, [sl]
   84178:	f447 6780 	orr.w	r7, r7, #1024	; 0x400
   8417c:	e531      	b.n	83be2 <_svfprintf_r+0x9e>
   8417e:	f89a 6000 	ldrb.w	r6, [sl]
   84182:	f047 0701 	orr.w	r7, r7, #1
   84186:	e52c      	b.n	83be2 <_svfprintf_r+0x9e>
   84188:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
   8418c:	2b00      	cmp	r3, #0
   8418e:	f47f ada3 	bne.w	83cd8 <_svfprintf_r+0x194>
   84192:	f89a 6000 	ldrb.w	r6, [sl]
   84196:	f88d 4083 	strb.w	r4, [sp, #131]	; 0x83
   8419a:	e522      	b.n	83be2 <_svfprintf_r+0x9e>
   8419c:	f89a 6000 	ldrb.w	r6, [sl]
   841a0:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   841a4:	e51d      	b.n	83be2 <_svfprintf_r+0x9e>
   841a6:	4652      	mov	r2, sl
   841a8:	f812 6b01 	ldrb.w	r6, [r2], #1
   841ac:	2e2a      	cmp	r6, #42	; 0x2a
   841ae:	f001 81eb 	beq.w	85588 <_svfprintf_r+0x1a44>
   841b2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   841b6:	2b09      	cmp	r3, #9
   841b8:	4692      	mov	sl, r2
   841ba:	bf98      	it	ls
   841bc:	2200      	movls	r2, #0
   841be:	f201 8003 	bhi.w	851c8 <_svfprintf_r+0x1684>
   841c2:	f81a 6b01 	ldrb.w	r6, [sl], #1
   841c6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   841ca:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   841ce:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   841d2:	2b09      	cmp	r3, #9
   841d4:	d9f5      	bls.n	841c2 <_svfprintf_r+0x67e>
   841d6:	9207      	str	r2, [sp, #28]
   841d8:	e505      	b.n	83be6 <_svfprintf_r+0xa2>
   841da:	f89a 6000 	ldrb.w	r6, [sl]
   841de:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   841e2:	e4fe      	b.n	83be2 <_svfprintf_r+0x9e>
   841e4:	46bb      	mov	fp, r7
   841e6:	2b01      	cmp	r3, #1
   841e8:	f43f ad9a 	beq.w	83d20 <_svfprintf_r+0x1dc>
   841ec:	2b02      	cmp	r3, #2
   841ee:	ad54      	add	r5, sp, #336	; 0x150
   841f0:	d112      	bne.n	84218 <_svfprintf_r+0x6d4>
   841f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
   841f4:	f004 030f 	and.w	r3, r4, #15
   841f8:	5cd3      	ldrb	r3, [r2, r3]
   841fa:	0924      	lsrs	r4, r4, #4
   841fc:	ea44 7409 	orr.w	r4, r4, r9, lsl #28
   84200:	ea4f 1919 	mov.w	r9, r9, lsr #4
   84204:	f805 3d01 	strb.w	r3, [r5, #-1]!
   84208:	ea54 0309 	orrs.w	r3, r4, r9
   8420c:	d1f2      	bne.n	841f4 <_svfprintf_r+0x6b0>
   8420e:	ab54      	add	r3, sp, #336	; 0x150
   84210:	1b5b      	subs	r3, r3, r5
   84212:	465f      	mov	r7, fp
   84214:	930b      	str	r3, [sp, #44]	; 0x2c
   84216:	e590      	b.n	83d3a <_svfprintf_r+0x1f6>
   84218:	f004 0307 	and.w	r3, r4, #7
   8421c:	08e4      	lsrs	r4, r4, #3
   8421e:	ea44 7449 	orr.w	r4, r4, r9, lsl #29
   84222:	ea4f 09d9 	mov.w	r9, r9, lsr #3
   84226:	3330      	adds	r3, #48	; 0x30
   84228:	ea54 0109 	orrs.w	r1, r4, r9
   8422c:	462a      	mov	r2, r5
   8422e:	f805 3d01 	strb.w	r3, [r5, #-1]!
   84232:	d1f1      	bne.n	84218 <_svfprintf_r+0x6d4>
   84234:	f01b 0f01 	tst.w	fp, #1
   84238:	d0e9      	beq.n	8420e <_svfprintf_r+0x6ca>
   8423a:	2b30      	cmp	r3, #48	; 0x30
   8423c:	d0e7      	beq.n	8420e <_svfprintf_r+0x6ca>
   8423e:	2330      	movs	r3, #48	; 0x30
   84240:	3a02      	subs	r2, #2
   84242:	f805 3c01 	strb.w	r3, [r5, #-1]
   84246:	ab54      	add	r3, sp, #336	; 0x150
   84248:	1a9b      	subs	r3, r3, r2
   8424a:	465f      	mov	r7, fp
   8424c:	4615      	mov	r5, r2
   8424e:	930b      	str	r3, [sp, #44]	; 0x2c
   84250:	e573      	b.n	83d3a <_svfprintf_r+0x1f6>
   84252:	bf00      	nop
   84254:	7fefffff 	.word	0x7fefffff
   84258:	0008a610 	.word	0x0008a610
   8425c:	0008a614 	.word	0x0008a614
   84260:	0008a620 	.word	0x0008a620
   84264:	2e65      	cmp	r6, #101	; 0x65
   84266:	f340 80e9 	ble.w	8443c <_svfprintf_r+0x8f8>
   8426a:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   8426e:	2200      	movs	r2, #0
   84270:	2300      	movs	r3, #0
   84272:	f005 ff9d 	bl	8a1b0 <__aeabi_dcmpeq>
   84276:	2800      	cmp	r0, #0
   84278:	f000 81d2 	beq.w	84620 <_svfprintf_r+0xadc>
   8427c:	2301      	movs	r3, #1
   8427e:	f8c8 3004 	str.w	r3, [r8, #4]
   84282:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84284:	4abf      	ldr	r2, [pc, #764]	; (84584 <_svfprintf_r+0xa40>)
   84286:	3301      	adds	r3, #1
   84288:	3401      	adds	r4, #1
   8428a:	2b07      	cmp	r3, #7
   8428c:	942a      	str	r4, [sp, #168]	; 0xa8
   8428e:	9329      	str	r3, [sp, #164]	; 0xa4
   84290:	f8c8 2000 	str.w	r2, [r8]
   84294:	f300 857a 	bgt.w	84d8c <_svfprintf_r+0x1248>
   84298:	f108 0808 	add.w	r8, r8, #8
   8429c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8429e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   842a0:	4293      	cmp	r3, r2
   842a2:	f280 82d7 	bge.w	84854 <_svfprintf_r+0xd10>
   842a6:	9b16      	ldr	r3, [sp, #88]	; 0x58
   842a8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   842aa:	441c      	add	r4, r3
   842ac:	e9c8 2300 	strd	r2, r3, [r8]
   842b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   842b2:	942a      	str	r4, [sp, #168]	; 0xa8
   842b4:	3301      	adds	r3, #1
   842b6:	2b07      	cmp	r3, #7
   842b8:	9329      	str	r3, [sp, #164]	; 0xa4
   842ba:	f300 83dd 	bgt.w	84a78 <_svfprintf_r+0xf34>
   842be:	f108 0808 	add.w	r8, r8, #8
   842c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   842c4:	1e5d      	subs	r5, r3, #1
   842c6:	2d00      	cmp	r5, #0
   842c8:	f77f ae16 	ble.w	83ef8 <_svfprintf_r+0x3b4>
   842cc:	2d10      	cmp	r5, #16
   842ce:	f341 8141 	ble.w	85554 <_svfprintf_r+0x1a10>
   842d2:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 84588 <_svfprintf_r+0xa44>
   842d6:	4622      	mov	r2, r4
   842d8:	4649      	mov	r1, r9
   842da:	2610      	movs	r6, #16
   842dc:	46b9      	mov	r9, r7
   842de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   842e0:	460f      	mov	r7, r1
   842e2:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   842e6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   842e8:	e005      	b.n	842f6 <_svfprintf_r+0x7b2>
   842ea:	f108 0808 	add.w	r8, r8, #8
   842ee:	3d10      	subs	r5, #16
   842f0:	2d10      	cmp	r5, #16
   842f2:	f340 8558 	ble.w	84da6 <_svfprintf_r+0x1262>
   842f6:	3301      	adds	r3, #1
   842f8:	3210      	adds	r2, #16
   842fa:	2b07      	cmp	r3, #7
   842fc:	e9c8 7600 	strd	r7, r6, [r8]
   84300:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   84304:	ddf1      	ble.n	842ea <_svfprintf_r+0x7a6>
   84306:	4621      	mov	r1, r4
   84308:	4658      	mov	r0, fp
   8430a:	aa28      	add	r2, sp, #160	; 0xa0
   8430c:	f005 f842 	bl	89394 <__ssprint_r>
   84310:	2800      	cmp	r0, #0
   84312:	f47f ad7a 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84316:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   8431a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8431e:	e7e6      	b.n	842ee <_svfprintf_r+0x7aa>
   84320:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84322:	9a06      	ldr	r2, [sp, #24]
   84324:	eba3 0b02 	sub.w	fp, r3, r2
   84328:	f1bb 0f00 	cmp.w	fp, #0
   8432c:	f77f adca 	ble.w	83ec4 <_svfprintf_r+0x380>
   84330:	f1bb 0f10 	cmp.w	fp, #16
   84334:	f341 8005 	ble.w	85342 <_svfprintf_r+0x17fe>
   84338:	f8df 924c 	ldr.w	r9, [pc, #588]	; 84588 <_svfprintf_r+0xa44>
   8433c:	4641      	mov	r1, r8
   8433e:	4620      	mov	r0, r4
   84340:	46a8      	mov	r8, r5
   84342:	464c      	mov	r4, r9
   84344:	2310      	movs	r3, #16
   84346:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   84348:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8434a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   8434e:	e006      	b.n	8435e <_svfprintf_r+0x81a>
   84350:	f1ab 0b10 	sub.w	fp, fp, #16
   84354:	f1bb 0f10 	cmp.w	fp, #16
   84358:	f101 0108 	add.w	r1, r1, #8
   8435c:	dd19      	ble.n	84392 <_svfprintf_r+0x84e>
   8435e:	3201      	adds	r2, #1
   84360:	3010      	adds	r0, #16
   84362:	2a07      	cmp	r2, #7
   84364:	e9c1 4300 	strd	r4, r3, [r1]
   84368:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   8436c:	ddf0      	ble.n	84350 <_svfprintf_r+0x80c>
   8436e:	4629      	mov	r1, r5
   84370:	4648      	mov	r0, r9
   84372:	aa28      	add	r2, sp, #160	; 0xa0
   84374:	f005 f80e 	bl	89394 <__ssprint_r>
   84378:	2800      	cmp	r0, #0
   8437a:	f47f ad46 	bne.w	83e0a <_svfprintf_r+0x2c6>
   8437e:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   84382:	f1ab 0b10 	sub.w	fp, fp, #16
   84386:	f1bb 0f10 	cmp.w	fp, #16
   8438a:	f04f 0310 	mov.w	r3, #16
   8438e:	a92b      	add	r1, sp, #172	; 0xac
   84390:	dce5      	bgt.n	8435e <_svfprintf_r+0x81a>
   84392:	4645      	mov	r5, r8
   84394:	46a1      	mov	r9, r4
   84396:	4688      	mov	r8, r1
   84398:	4604      	mov	r4, r0
   8439a:	3201      	adds	r2, #1
   8439c:	445c      	add	r4, fp
   8439e:	2a07      	cmp	r2, #7
   843a0:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   843a4:	f8c8 9000 	str.w	r9, [r8]
   843a8:	f8c8 b004 	str.w	fp, [r8, #4]
   843ac:	f300 8518 	bgt.w	84de0 <_svfprintf_r+0x129c>
   843b0:	f108 0808 	add.w	r8, r8, #8
   843b4:	e586      	b.n	83ec4 <_svfprintf_r+0x380>
   843b6:	f1bb 0f10 	cmp.w	fp, #16
   843ba:	f340 8597 	ble.w	84eec <_svfprintf_r+0x13a8>
   843be:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 84588 <_svfprintf_r+0xa44>
   843c2:	4641      	mov	r1, r8
   843c4:	4620      	mov	r0, r4
   843c6:	46a8      	mov	r8, r5
   843c8:	464c      	mov	r4, r9
   843ca:	2310      	movs	r3, #16
   843cc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   843ce:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   843d0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   843d4:	e006      	b.n	843e4 <_svfprintf_r+0x8a0>
   843d6:	f1ab 0b10 	sub.w	fp, fp, #16
   843da:	f1bb 0f10 	cmp.w	fp, #16
   843de:	f101 0108 	add.w	r1, r1, #8
   843e2:	dd19      	ble.n	84418 <_svfprintf_r+0x8d4>
   843e4:	3201      	adds	r2, #1
   843e6:	3010      	adds	r0, #16
   843e8:	2a07      	cmp	r2, #7
   843ea:	e9c1 4300 	strd	r4, r3, [r1]
   843ee:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   843f2:	ddf0      	ble.n	843d6 <_svfprintf_r+0x892>
   843f4:	4629      	mov	r1, r5
   843f6:	4648      	mov	r0, r9
   843f8:	aa28      	add	r2, sp, #160	; 0xa0
   843fa:	f004 ffcb 	bl	89394 <__ssprint_r>
   843fe:	2800      	cmp	r0, #0
   84400:	f47f ad03 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84404:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   84408:	f1ab 0b10 	sub.w	fp, fp, #16
   8440c:	f1bb 0f10 	cmp.w	fp, #16
   84410:	f04f 0310 	mov.w	r3, #16
   84414:	a92b      	add	r1, sp, #172	; 0xac
   84416:	dce5      	bgt.n	843e4 <_svfprintf_r+0x8a0>
   84418:	4645      	mov	r5, r8
   8441a:	46a1      	mov	r9, r4
   8441c:	4688      	mov	r8, r1
   8441e:	4604      	mov	r4, r0
   84420:	3201      	adds	r2, #1
   84422:	445c      	add	r4, fp
   84424:	2a07      	cmp	r2, #7
   84426:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   8442a:	f8c8 9000 	str.w	r9, [r8]
   8442e:	f8c8 b004 	str.w	fp, [r8, #4]
   84432:	f300 81ce 	bgt.w	847d2 <_svfprintf_r+0xc8e>
   84436:	f108 0808 	add.w	r8, r8, #8
   8443a:	e54b      	b.n	83ed4 <_svfprintf_r+0x390>
   8443c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8443e:	2b01      	cmp	r3, #1
   84440:	f340 817e 	ble.w	84740 <_svfprintf_r+0xbfc>
   84444:	2301      	movs	r3, #1
   84446:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   84448:	3401      	adds	r4, #1
   8444a:	441e      	add	r6, r3
   8444c:	2e07      	cmp	r6, #7
   8444e:	f8c8 5000 	str.w	r5, [r8]
   84452:	942a      	str	r4, [sp, #168]	; 0xa8
   84454:	f8c8 3004 	str.w	r3, [r8, #4]
   84458:	9629      	str	r6, [sp, #164]	; 0xa4
   8445a:	f300 81e1 	bgt.w	84820 <_svfprintf_r+0xcdc>
   8445e:	f108 0808 	add.w	r8, r8, #8
   84462:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84464:	3601      	adds	r6, #1
   84466:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   84468:	441c      	add	r4, r3
   8446a:	2e07      	cmp	r6, #7
   8446c:	e9c8 2300 	strd	r2, r3, [r8]
   84470:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   84474:	f300 81e1 	bgt.w	8483a <_svfprintf_r+0xcf6>
   84478:	f108 0808 	add.w	r8, r8, #8
   8447c:	2200      	movs	r2, #0
   8447e:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   84482:	2300      	movs	r3, #0
   84484:	f005 fe94 	bl	8a1b0 <__aeabi_dcmpeq>
   84488:	2800      	cmp	r0, #0
   8448a:	f040 8176 	bne.w	8477a <_svfprintf_r+0xc36>
   8448e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84490:	3601      	adds	r6, #1
   84492:	3b01      	subs	r3, #1
   84494:	3501      	adds	r5, #1
   84496:	441c      	add	r4, r3
   84498:	2e07      	cmp	r6, #7
   8449a:	f8c8 5000 	str.w	r5, [r8]
   8449e:	9629      	str	r6, [sp, #164]	; 0xa4
   844a0:	f8c8 3004 	str.w	r3, [r8, #4]
   844a4:	942a      	str	r4, [sp, #168]	; 0xa8
   844a6:	f300 815b 	bgt.w	84760 <_svfprintf_r+0xc1c>
   844aa:	f108 0808 	add.w	r8, r8, #8
   844ae:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   844b0:	3601      	adds	r6, #1
   844b2:	441c      	add	r4, r3
   844b4:	f8c8 3004 	str.w	r3, [r8, #4]
   844b8:	2e07      	cmp	r6, #7
   844ba:	ab24      	add	r3, sp, #144	; 0x90
   844bc:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   844c0:	f8c8 3000 	str.w	r3, [r8]
   844c4:	f77f ad16 	ble.w	83ef4 <_svfprintf_r+0x3b0>
   844c8:	990c      	ldr	r1, [sp, #48]	; 0x30
   844ca:	980a      	ldr	r0, [sp, #40]	; 0x28
   844cc:	aa28      	add	r2, sp, #160	; 0xa0
   844ce:	f004 ff61 	bl	89394 <__ssprint_r>
   844d2:	2800      	cmp	r0, #0
   844d4:	f47f ac99 	bne.w	83e0a <_svfprintf_r+0x2c6>
   844d8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   844da:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   844de:	e50b      	b.n	83ef8 <_svfprintf_r+0x3b4>
   844e0:	f1b9 0f10 	cmp.w	r9, #16
   844e4:	f340 8650 	ble.w	85188 <_svfprintf_r+0x1644>
   844e8:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   844ec:	4640      	mov	r0, r8
   844ee:	e9cd 361d 	strd	r3, r6, [sp, #116]	; 0x74
   844f2:	46b8      	mov	r8, r7
   844f4:	2410      	movs	r4, #16
   844f6:	464f      	mov	r7, r9
   844f8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   844fa:	46a9      	mov	r9, r5
   844fc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   844fe:	e004      	b.n	8450a <_svfprintf_r+0x9c6>
   84500:	3f10      	subs	r7, #16
   84502:	2f10      	cmp	r7, #16
   84504:	f100 0008 	add.w	r0, r0, #8
   84508:	dd16      	ble.n	84538 <_svfprintf_r+0x9f4>
   8450a:	3201      	adds	r2, #1
   8450c:	4b1f      	ldr	r3, [pc, #124]	; (8458c <_svfprintf_r+0xa48>)
   8450e:	3110      	adds	r1, #16
   84510:	2a07      	cmp	r2, #7
   84512:	e9c0 3400 	strd	r3, r4, [r0]
   84516:	e9cd 2129 	strd	r2, r1, [sp, #164]	; 0xa4
   8451a:	ddf1      	ble.n	84500 <_svfprintf_r+0x9bc>
   8451c:	4631      	mov	r1, r6
   8451e:	4628      	mov	r0, r5
   84520:	aa28      	add	r2, sp, #160	; 0xa0
   84522:	f004 ff37 	bl	89394 <__ssprint_r>
   84526:	2800      	cmp	r0, #0
   84528:	f47f ac6f 	bne.w	83e0a <_svfprintf_r+0x2c6>
   8452c:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   84530:	3f10      	subs	r7, #16
   84532:	2f10      	cmp	r7, #16
   84534:	a82b      	add	r0, sp, #172	; 0xac
   84536:	dce8      	bgt.n	8450a <_svfprintf_r+0x9c6>
   84538:	464d      	mov	r5, r9
   8453a:	e9dd 361d 	ldrd	r3, r6, [sp, #116]	; 0x74
   8453e:	46b9      	mov	r9, r7
   84540:	4647      	mov	r7, r8
   84542:	4680      	mov	r8, r0
   84544:	eb09 0401 	add.w	r4, r9, r1
   84548:	3201      	adds	r2, #1
   8454a:	4910      	ldr	r1, [pc, #64]	; (8458c <_svfprintf_r+0xa48>)
   8454c:	2a07      	cmp	r2, #7
   8454e:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   84552:	f8c8 9004 	str.w	r9, [r8, #4]
   84556:	f8c8 1000 	str.w	r1, [r8]
   8455a:	f300 83c3 	bgt.w	84ce4 <_svfprintf_r+0x11a0>
   8455e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84562:	f108 0808 	add.w	r8, r8, #8
   84566:	e486      	b.n	83e76 <_svfprintf_r+0x332>
   84568:	990c      	ldr	r1, [sp, #48]	; 0x30
   8456a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8456c:	aa28      	add	r2, sp, #160	; 0xa0
   8456e:	931d      	str	r3, [sp, #116]	; 0x74
   84570:	f004 ff10 	bl	89394 <__ssprint_r>
   84574:	2800      	cmp	r0, #0
   84576:	f47f ac48 	bne.w	83e0a <_svfprintf_r+0x2c6>
   8457a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8457c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   8457e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84582:	e48a      	b.n	83e9a <_svfprintf_r+0x356>
   84584:	0008a650 	.word	0x0008a650
   84588:	0008a664 	.word	0x0008a664
   8458c:	0008a654 	.word	0x0008a654
   84590:	990c      	ldr	r1, [sp, #48]	; 0x30
   84592:	980a      	ldr	r0, [sp, #40]	; 0x28
   84594:	aa28      	add	r2, sp, #160	; 0xa0
   84596:	f004 fefd 	bl	89394 <__ssprint_r>
   8459a:	2800      	cmp	r0, #0
   8459c:	f47f ac35 	bne.w	83e0a <_svfprintf_r+0x2c6>
   845a0:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   845a2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   845a6:	e489      	b.n	83ebc <_svfprintf_r+0x378>
   845a8:	2d10      	cmp	r5, #16
   845aa:	f340 86c4 	ble.w	85336 <_svfprintf_r+0x17f2>
   845ae:	2610      	movs	r6, #16
   845b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   845b2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   845b4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   845b8:	e004      	b.n	845c4 <_svfprintf_r+0xa80>
   845ba:	3d10      	subs	r5, #16
   845bc:	2d10      	cmp	r5, #16
   845be:	f108 0808 	add.w	r8, r8, #8
   845c2:	dd17      	ble.n	845f4 <_svfprintf_r+0xab0>
   845c4:	3301      	adds	r3, #1
   845c6:	4ab8      	ldr	r2, [pc, #736]	; (848a8 <_svfprintf_r+0xd64>)
   845c8:	3410      	adds	r4, #16
   845ca:	2b07      	cmp	r3, #7
   845cc:	e9c8 2600 	strd	r2, r6, [r8]
   845d0:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   845d4:	ddf1      	ble.n	845ba <_svfprintf_r+0xa76>
   845d6:	4649      	mov	r1, r9
   845d8:	4638      	mov	r0, r7
   845da:	aa28      	add	r2, sp, #160	; 0xa0
   845dc:	f004 feda 	bl	89394 <__ssprint_r>
   845e0:	2800      	cmp	r0, #0
   845e2:	f47f ac12 	bne.w	83e0a <_svfprintf_r+0x2c6>
   845e6:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
   845ea:	3d10      	subs	r5, #16
   845ec:	2d10      	cmp	r5, #16
   845ee:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   845f2:	dce7      	bgt.n	845c4 <_svfprintf_r+0xa80>
   845f4:	3301      	adds	r3, #1
   845f6:	4aac      	ldr	r2, [pc, #688]	; (848a8 <_svfprintf_r+0xd64>)
   845f8:	442c      	add	r4, r5
   845fa:	2b07      	cmp	r3, #7
   845fc:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84600:	f8c8 5004 	str.w	r5, [r8, #4]
   84604:	f8c8 2000 	str.w	r2, [r8]
   84608:	f77f ac7e 	ble.w	83f08 <_svfprintf_r+0x3c4>
   8460c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8460e:	980a      	ldr	r0, [sp, #40]	; 0x28
   84610:	aa28      	add	r2, sp, #160	; 0xa0
   84612:	f004 febf 	bl	89394 <__ssprint_r>
   84616:	2800      	cmp	r0, #0
   84618:	f47f abf7 	bne.w	83e0a <_svfprintf_r+0x2c6>
   8461c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8461e:	e473      	b.n	83f08 <_svfprintf_r+0x3c4>
   84620:	9922      	ldr	r1, [sp, #136]	; 0x88
   84622:	2900      	cmp	r1, #0
   84624:	f340 836f 	ble.w	84d06 <_svfprintf_r+0x11c2>
   84628:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   8462c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8462e:	4599      	cmp	r9, r3
   84630:	bfa8      	it	ge
   84632:	4699      	movge	r9, r3
   84634:	f1b9 0f00 	cmp.w	r9, #0
   84638:	dd0b      	ble.n	84652 <_svfprintf_r+0xb0e>
   8463a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8463c:	444c      	add	r4, r9
   8463e:	3301      	adds	r3, #1
   84640:	2b07      	cmp	r3, #7
   84642:	e9c8 5900 	strd	r5, r9, [r8]
   84646:	942a      	str	r4, [sp, #168]	; 0xa8
   84648:	9329      	str	r3, [sp, #164]	; 0xa4
   8464a:	f300 851d 	bgt.w	85088 <_svfprintf_r+0x1544>
   8464e:	f108 0808 	add.w	r8, r8, #8
   84652:	9e10      	ldr	r6, [sp, #64]	; 0x40
   84654:	f1b9 0f00 	cmp.w	r9, #0
   84658:	bfa8      	it	ge
   8465a:	eba6 0609 	subge.w	r6, r6, r9
   8465e:	2e00      	cmp	r6, #0
   84660:	f300 8225 	bgt.w	84aae <_svfprintf_r+0xf6a>
   84664:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   84668:	0578      	lsls	r0, r7, #21
   8466a:	44ab      	add	fp, r5
   8466c:	f100 825f 	bmi.w	84b2e <_svfprintf_r+0xfea>
   84670:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84672:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84674:	4293      	cmp	r3, r2
   84676:	db02      	blt.n	8467e <_svfprintf_r+0xb3a>
   84678:	07f9      	lsls	r1, r7, #31
   8467a:	f140 8476 	bpl.w	84f6a <_svfprintf_r+0x1426>
   8467e:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84680:	9917      	ldr	r1, [sp, #92]	; 0x5c
   84682:	4414      	add	r4, r2
   84684:	e9c8 1200 	strd	r1, r2, [r8]
   84688:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   8468a:	942a      	str	r4, [sp, #168]	; 0xa8
   8468c:	3201      	adds	r2, #1
   8468e:	2a07      	cmp	r2, #7
   84690:	9229      	str	r2, [sp, #164]	; 0xa4
   84692:	f300 8513 	bgt.w	850bc <_svfprintf_r+0x1578>
   84696:	f108 0808 	add.w	r8, r8, #8
   8469a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8469c:	18ae      	adds	r6, r5, r2
   8469e:	eba6 060b 	sub.w	r6, r6, fp
   846a2:	1ad5      	subs	r5, r2, r3
   846a4:	42ae      	cmp	r6, r5
   846a6:	bfa8      	it	ge
   846a8:	462e      	movge	r6, r5
   846aa:	2e00      	cmp	r6, #0
   846ac:	dd0d      	ble.n	846ca <_svfprintf_r+0xb86>
   846ae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   846b0:	4434      	add	r4, r6
   846b2:	3301      	adds	r3, #1
   846b4:	2b07      	cmp	r3, #7
   846b6:	f8c8 b000 	str.w	fp, [r8]
   846ba:	f8c8 6004 	str.w	r6, [r8, #4]
   846be:	942a      	str	r4, [sp, #168]	; 0xa8
   846c0:	9329      	str	r3, [sp, #164]	; 0xa4
   846c2:	f300 8571 	bgt.w	851a8 <_svfprintf_r+0x1664>
   846c6:	f108 0808 	add.w	r8, r8, #8
   846ca:	2e00      	cmp	r6, #0
   846cc:	bfa8      	it	ge
   846ce:	1bad      	subge	r5, r5, r6
   846d0:	2d00      	cmp	r5, #0
   846d2:	f77f ac11 	ble.w	83ef8 <_svfprintf_r+0x3b4>
   846d6:	2d10      	cmp	r5, #16
   846d8:	f340 873c 	ble.w	85554 <_svfprintf_r+0x1a10>
   846dc:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 848ac <_svfprintf_r+0xd68>
   846e0:	4622      	mov	r2, r4
   846e2:	4649      	mov	r1, r9
   846e4:	2610      	movs	r6, #16
   846e6:	46b9      	mov	r9, r7
   846e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   846ea:	460f      	mov	r7, r1
   846ec:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   846f0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   846f2:	e005      	b.n	84700 <_svfprintf_r+0xbbc>
   846f4:	f108 0808 	add.w	r8, r8, #8
   846f8:	3d10      	subs	r5, #16
   846fa:	2d10      	cmp	r5, #16
   846fc:	f340 8353 	ble.w	84da6 <_svfprintf_r+0x1262>
   84700:	3301      	adds	r3, #1
   84702:	3210      	adds	r2, #16
   84704:	2b07      	cmp	r3, #7
   84706:	e9c8 7600 	strd	r7, r6, [r8]
   8470a:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   8470e:	ddf1      	ble.n	846f4 <_svfprintf_r+0xbb0>
   84710:	4621      	mov	r1, r4
   84712:	4658      	mov	r0, fp
   84714:	aa28      	add	r2, sp, #160	; 0xa0
   84716:	f004 fe3d 	bl	89394 <__ssprint_r>
   8471a:	2800      	cmp	r0, #0
   8471c:	f47f ab75 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84720:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   84724:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84728:	e7e6      	b.n	846f8 <_svfprintf_r+0xbb4>
   8472a:	9b07      	ldr	r3, [sp, #28]
   8472c:	2b00      	cmp	r3, #0
   8472e:	f47f aafc 	bne.w	83d2a <_svfprintf_r+0x1e6>
   84732:	465f      	mov	r7, fp
   84734:	2300      	movs	r3, #0
   84736:	ad54      	add	r5, sp, #336	; 0x150
   84738:	9307      	str	r3, [sp, #28]
   8473a:	930b      	str	r3, [sp, #44]	; 0x2c
   8473c:	f7ff bafd 	b.w	83d3a <_svfprintf_r+0x1f6>
   84740:	07fa      	lsls	r2, r7, #31
   84742:	f53f ae7f 	bmi.w	84444 <_svfprintf_r+0x900>
   84746:	2301      	movs	r3, #1
   84748:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   8474a:	3401      	adds	r4, #1
   8474c:	441e      	add	r6, r3
   8474e:	2e07      	cmp	r6, #7
   84750:	f8c8 5000 	str.w	r5, [r8]
   84754:	942a      	str	r4, [sp, #168]	; 0xa8
   84756:	f8c8 3004 	str.w	r3, [r8, #4]
   8475a:	9629      	str	r6, [sp, #164]	; 0xa4
   8475c:	f77f aea5 	ble.w	844aa <_svfprintf_r+0x966>
   84760:	990c      	ldr	r1, [sp, #48]	; 0x30
   84762:	980a      	ldr	r0, [sp, #40]	; 0x28
   84764:	aa28      	add	r2, sp, #160	; 0xa0
   84766:	f004 fe15 	bl	89394 <__ssprint_r>
   8476a:	2800      	cmp	r0, #0
   8476c:	f47f ab4d 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84770:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   84774:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84778:	e699      	b.n	844ae <_svfprintf_r+0x96a>
   8477a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8477c:	1e5d      	subs	r5, r3, #1
   8477e:	2d00      	cmp	r5, #0
   84780:	f77f ae95 	ble.w	844ae <_svfprintf_r+0x96a>
   84784:	2d10      	cmp	r5, #16
   84786:	f340 86df 	ble.w	85548 <_svfprintf_r+0x1a04>
   8478a:	4622      	mov	r2, r4
   8478c:	9707      	str	r7, [sp, #28]
   8478e:	f04f 0b10 	mov.w	fp, #16
   84792:	f8df 9118 	ldr.w	r9, [pc, #280]	; 848ac <_svfprintf_r+0xd68>
   84796:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84798:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8479a:	e005      	b.n	847a8 <_svfprintf_r+0xc64>
   8479c:	f108 0808 	add.w	r8, r8, #8
   847a0:	3d10      	subs	r5, #16
   847a2:	2d10      	cmp	r5, #16
   847a4:	f340 837f 	ble.w	84ea6 <_svfprintf_r+0x1362>
   847a8:	3601      	adds	r6, #1
   847aa:	3210      	adds	r2, #16
   847ac:	2e07      	cmp	r6, #7
   847ae:	e9c8 9b00 	strd	r9, fp, [r8]
   847b2:	e9cd 6229 	strd	r6, r2, [sp, #164]	; 0xa4
   847b6:	ddf1      	ble.n	8479c <_svfprintf_r+0xc58>
   847b8:	4639      	mov	r1, r7
   847ba:	4620      	mov	r0, r4
   847bc:	aa28      	add	r2, sp, #160	; 0xa0
   847be:	f004 fde9 	bl	89394 <__ssprint_r>
   847c2:	2800      	cmp	r0, #0
   847c4:	f47f ab21 	bne.w	83e0a <_svfprintf_r+0x2c6>
   847c8:	e9dd 6229 	ldrd	r6, r2, [sp, #164]	; 0xa4
   847cc:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   847d0:	e7e6      	b.n	847a0 <_svfprintf_r+0xc5c>
   847d2:	990c      	ldr	r1, [sp, #48]	; 0x30
   847d4:	980a      	ldr	r0, [sp, #40]	; 0x28
   847d6:	aa28      	add	r2, sp, #160	; 0xa0
   847d8:	f004 fddc 	bl	89394 <__ssprint_r>
   847dc:	2800      	cmp	r0, #0
   847de:	f47f ab14 	bne.w	83e0a <_svfprintf_r+0x2c6>
   847e2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   847e4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   847e8:	f7ff bb74 	b.w	83ed4 <_svfprintf_r+0x390>
   847ec:	f01b 0310 	ands.w	r3, fp, #16
   847f0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   847f2:	d13a      	bne.n	8486a <_svfprintf_r+0xd26>
   847f4:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
   847f8:	d033      	beq.n	84862 <_svfprintf_r+0xd1e>
   847fa:	f852 4b04 	ldr.w	r4, [r2], #4
   847fe:	4699      	mov	r9, r3
   84800:	920e      	str	r2, [sp, #56]	; 0x38
   84802:	2301      	movs	r3, #1
   84804:	b2a4      	uxth	r4, r4
   84806:	f7ff babd 	b.w	83d84 <_svfprintf_r+0x240>
   8480a:	232d      	movs	r3, #45	; 0x2d
   8480c:	4264      	negs	r4, r4
   8480e:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   84812:	46bb      	mov	fp, r7
   84814:	f04f 0301 	mov.w	r3, #1
   84818:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
   8481c:	f7ff bab5 	b.w	83d8a <_svfprintf_r+0x246>
   84820:	990c      	ldr	r1, [sp, #48]	; 0x30
   84822:	980a      	ldr	r0, [sp, #40]	; 0x28
   84824:	aa28      	add	r2, sp, #160	; 0xa0
   84826:	f004 fdb5 	bl	89394 <__ssprint_r>
   8482a:	2800      	cmp	r0, #0
   8482c:	f47f aaed 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84830:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   84834:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84838:	e613      	b.n	84462 <_svfprintf_r+0x91e>
   8483a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8483c:	980a      	ldr	r0, [sp, #40]	; 0x28
   8483e:	aa28      	add	r2, sp, #160	; 0xa0
   84840:	f004 fda8 	bl	89394 <__ssprint_r>
   84844:	2800      	cmp	r0, #0
   84846:	f47f aae0 	bne.w	83e0a <_svfprintf_r+0x2c6>
   8484a:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   8484e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84852:	e613      	b.n	8447c <_svfprintf_r+0x938>
   84854:	07fd      	lsls	r5, r7, #31
   84856:	f57f ab4f 	bpl.w	83ef8 <_svfprintf_r+0x3b4>
   8485a:	e524      	b.n	842a6 <_svfprintf_r+0x762>
   8485c:	ad54      	add	r5, sp, #336	; 0x150
   8485e:	f7ff ba6c 	b.w	83d3a <_svfprintf_r+0x1f6>
   84862:	f41b 7900 	ands.w	r9, fp, #512	; 0x200
   84866:	f040 838a 	bne.w	84f7e <_svfprintf_r+0x143a>
   8486a:	f852 4b04 	ldr.w	r4, [r2], #4
   8486e:	2301      	movs	r3, #1
   84870:	920e      	str	r2, [sp, #56]	; 0x38
   84872:	f7ff ba87 	b.w	83d84 <_svfprintf_r+0x240>
   84876:	05b8      	lsls	r0, r7, #22
   84878:	f100 839b 	bmi.w	84fb2 <_svfprintf_r+0x146e>
   8487c:	ea4f 79e4 	mov.w	r9, r4, asr #31
   84880:	464b      	mov	r3, r9
   84882:	f7ff ba40 	b.w	83d06 <_svfprintf_r+0x1c2>
   84886:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84888:	9808      	ldr	r0, [sp, #32]
   8488a:	f853 1b04 	ldr.w	r1, [r3], #4
   8488e:	17c2      	asrs	r2, r0, #31
   84890:	4655      	mov	r5, sl
   84892:	e9c1 0200 	strd	r0, r2, [r1]
   84896:	930e      	str	r3, [sp, #56]	; 0x38
   84898:	f7ff bb4c 	b.w	83f34 <_svfprintf_r+0x3f0>
   8489c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8489e:	f853 4b04 	ldr.w	r4, [r3], #4
   848a2:	930e      	str	r3, [sp, #56]	; 0x38
   848a4:	f7ff ba6b 	b.w	83d7e <_svfprintf_r+0x23a>
   848a8:	0008a654 	.word	0x0008a654
   848ac:	0008a664 	.word	0x0008a664
   848b0:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   848b4:	4602      	mov	r2, r0
   848b6:	460b      	mov	r3, r1
   848b8:	f005 fcac 	bl	8a214 <__aeabi_dcmpun>
   848bc:	2800      	cmp	r0, #0
   848be:	f040 85e9 	bne.w	85494 <_svfprintf_r+0x1950>
   848c2:	2e61      	cmp	r6, #97	; 0x61
   848c4:	f000 857d 	beq.w	853c2 <_svfprintf_r+0x187e>
   848c8:	2e41      	cmp	r6, #65	; 0x41
   848ca:	f000 848b 	beq.w	851e4 <_svfprintf_r+0x16a0>
   848ce:	9b07      	ldr	r3, [sp, #28]
   848d0:	3301      	adds	r3, #1
   848d2:	f000 838f 	beq.w	84ff4 <_svfprintf_r+0x14b0>
   848d6:	f026 0320 	bic.w	r3, r6, #32
   848da:	2b47      	cmp	r3, #71	; 0x47
   848dc:	9306      	str	r3, [sp, #24]
   848de:	f000 858f 	beq.w	85400 <_svfprintf_r+0x18bc>
   848e2:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   848e6:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   848ea:	930f      	str	r3, [sp, #60]	; 0x3c
   848ec:	4613      	mov	r3, r2
   848ee:	2b00      	cmp	r3, #0
   848f0:	f2c0 85b0 	blt.w	85454 <_svfprintf_r+0x1910>
   848f4:	930b      	str	r3, [sp, #44]	; 0x2c
   848f6:	2300      	movs	r3, #0
   848f8:	468b      	mov	fp, r1
   848fa:	931d      	str	r3, [sp, #116]	; 0x74
   848fc:	930d      	str	r3, [sp, #52]	; 0x34
   848fe:	9b06      	ldr	r3, [sp, #24]
   84900:	2b46      	cmp	r3, #70	; 0x46
   84902:	f000 83e9 	beq.w	850d8 <_svfprintf_r+0x1594>
   84906:	2b45      	cmp	r3, #69	; 0x45
   84908:	f000 8546 	beq.w	85398 <_svfprintf_r+0x1854>
   8490c:	9907      	ldr	r1, [sp, #28]
   8490e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84910:	9101      	str	r1, [sp, #4]
   84912:	2102      	movs	r1, #2
   84914:	9100      	str	r1, [sp, #0]
   84916:	a926      	add	r1, sp, #152	; 0x98
   84918:	9104      	str	r1, [sp, #16]
   8491a:	a923      	add	r1, sp, #140	; 0x8c
   8491c:	9103      	str	r1, [sp, #12]
   8491e:	a922      	add	r1, sp, #136	; 0x88
   84920:	465a      	mov	r2, fp
   84922:	980a      	ldr	r0, [sp, #40]	; 0x28
   84924:	9102      	str	r1, [sp, #8]
   84926:	f001 febb 	bl	866a0 <_dtoa_r>
   8492a:	9b06      	ldr	r3, [sp, #24]
   8492c:	4605      	mov	r5, r0
   8492e:	2b47      	cmp	r3, #71	; 0x47
   84930:	f040 863a 	bne.w	855a8 <_svfprintf_r+0x1a64>
   84934:	f017 0f01 	tst.w	r7, #1
   84938:	46b9      	mov	r9, r7
   8493a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8493c:	f040 84fe 	bne.w	8533c <_svfprintf_r+0x17f8>
   84940:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84942:	1b5b      	subs	r3, r3, r5
   84944:	9312      	str	r3, [sp, #72]	; 0x48
   84946:	9b06      	ldr	r3, [sp, #24]
   84948:	2b47      	cmp	r3, #71	; 0x47
   8494a:	f000 836e 	beq.w	8502a <_svfprintf_r+0x14e6>
   8494e:	9b06      	ldr	r3, [sp, #24]
   84950:	2b46      	cmp	r3, #70	; 0x46
   84952:	f000 83f0 	beq.w	85136 <_svfprintf_r+0x15f2>
   84956:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84958:	9310      	str	r3, [sp, #64]	; 0x40
   8495a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8495c:	9a06      	ldr	r2, [sp, #24]
   8495e:	3b01      	subs	r3, #1
   84960:	2a41      	cmp	r2, #65	; 0x41
   84962:	9322      	str	r3, [sp, #136]	; 0x88
   84964:	f000 85bb 	beq.w	854de <_svfprintf_r+0x199a>
   84968:	2100      	movs	r1, #0
   8496a:	b2f2      	uxtb	r2, r6
   8496c:	2b00      	cmp	r3, #0
   8496e:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
   84972:	bfb6      	itet	lt
   84974:	222d      	movlt	r2, #45	; 0x2d
   84976:	222b      	movge	r2, #43	; 0x2b
   84978:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
   8497a:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
   8497e:	bfb8      	it	lt
   84980:	f1c3 0301 	rsblt	r3, r3, #1
   84984:	2b09      	cmp	r3, #9
   84986:	f340 859b 	ble.w	854c0 <_svfprintf_r+0x197c>
   8498a:	f10d 0c9f 	add.w	ip, sp, #159	; 0x9f
   8498e:	4662      	mov	r2, ip
   84990:	4fb6      	ldr	r7, [pc, #728]	; (84c6c <_svfprintf_r+0x1128>)
   84992:	461c      	mov	r4, r3
   84994:	4610      	mov	r0, r2
   84996:	fb87 1203 	smull	r1, r2, r7, r3
   8499a:	17d9      	asrs	r1, r3, #31
   8499c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
   849a0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
   849a4:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   849a8:	3230      	adds	r2, #48	; 0x30
   849aa:	2c63      	cmp	r4, #99	; 0x63
   849ac:	f800 2c01 	strb.w	r2, [r0, #-1]
   849b0:	460b      	mov	r3, r1
   849b2:	f100 32ff 	add.w	r2, r0, #4294967295
   849b6:	dcec      	bgt.n	84992 <_svfprintf_r+0xe4e>
   849b8:	3330      	adds	r3, #48	; 0x30
   849ba:	1e81      	subs	r1, r0, #2
   849bc:	b2db      	uxtb	r3, r3
   849be:	458c      	cmp	ip, r1
   849c0:	f802 3c01 	strb.w	r3, [r2, #-1]
   849c4:	f240 85f9 	bls.w	855ba <_svfprintf_r+0x1a76>
   849c8:	f10d 0192 	add.w	r1, sp, #146	; 0x92
   849cc:	e001      	b.n	849d2 <_svfprintf_r+0xe8e>
   849ce:	f812 3b01 	ldrb.w	r3, [r2], #1
   849d2:	4594      	cmp	ip, r2
   849d4:	f801 3b01 	strb.w	r3, [r1], #1
   849d8:	d1f9      	bne.n	849ce <_svfprintf_r+0xe8a>
   849da:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
   849de:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   849e2:	1a1b      	subs	r3, r3, r0
   849e4:	4413      	add	r3, r2
   849e6:	aa24      	add	r2, sp, #144	; 0x90
   849e8:	1a9b      	subs	r3, r3, r2
   849ea:	931a      	str	r3, [sp, #104]	; 0x68
   849ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
   849ee:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   849f0:	2b01      	cmp	r3, #1
   849f2:	441a      	add	r2, r3
   849f4:	920b      	str	r2, [sp, #44]	; 0x2c
   849f6:	f340 8581 	ble.w	854fc <_svfprintf_r+0x19b8>
   849fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   849fc:	9a16      	ldr	r2, [sp, #88]	; 0x58
   849fe:	4413      	add	r3, r2
   84a00:	930b      	str	r3, [sp, #44]	; 0x2c
   84a02:	2300      	movs	r3, #0
   84a04:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84a06:	f429 6780 	bic.w	r7, r9, #1024	; 0x400
   84a0a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
   84a0e:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   84a12:	930f      	str	r3, [sp, #60]	; 0x3c
   84a14:	9206      	str	r2, [sp, #24]
   84a16:	9313      	str	r3, [sp, #76]	; 0x4c
   84a18:	9310      	str	r3, [sp, #64]	; 0x40
   84a1a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   84a1c:	2b00      	cmp	r3, #0
   84a1e:	f040 832c 	bne.w	8507a <_svfprintf_r+0x1536>
   84a22:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84a26:	9307      	str	r3, [sp, #28]
   84a28:	f7ff b994 	b.w	83d54 <_svfprintf_r+0x210>
   84a2c:	46bb      	mov	fp, r7
   84a2e:	f7ff bb2f 	b.w	84090 <_svfprintf_r+0x54c>
   84a32:	4b8f      	ldr	r3, [pc, #572]	; (84c70 <_svfprintf_r+0x112c>)
   84a34:	9318      	str	r3, [sp, #96]	; 0x60
   84a36:	f017 0920 	ands.w	r9, r7, #32
   84a3a:	f000 80f5 	beq.w	84c28 <_svfprintf_r+0x10e4>
   84a3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84a40:	3307      	adds	r3, #7
   84a42:	f023 0307 	bic.w	r3, r3, #7
   84a46:	f8d3 9004 	ldr.w	r9, [r3, #4]
   84a4a:	f853 4b08 	ldr.w	r4, [r3], #8
   84a4e:	930e      	str	r3, [sp, #56]	; 0x38
   84a50:	07f8      	lsls	r0, r7, #31
   84a52:	d509      	bpl.n	84a68 <_svfprintf_r+0xf24>
   84a54:	ea54 0309 	orrs.w	r3, r4, r9
   84a58:	d006      	beq.n	84a68 <_svfprintf_r+0xf24>
   84a5a:	2330      	movs	r3, #48	; 0x30
   84a5c:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   84a60:	f047 0702 	orr.w	r7, r7, #2
   84a64:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   84a68:	2302      	movs	r3, #2
   84a6a:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   84a6e:	f7ff b989 	b.w	83d84 <_svfprintf_r+0x240>
   84a72:	4b80      	ldr	r3, [pc, #512]	; (84c74 <_svfprintf_r+0x1130>)
   84a74:	9318      	str	r3, [sp, #96]	; 0x60
   84a76:	e7de      	b.n	84a36 <_svfprintf_r+0xef2>
   84a78:	990c      	ldr	r1, [sp, #48]	; 0x30
   84a7a:	980a      	ldr	r0, [sp, #40]	; 0x28
   84a7c:	aa28      	add	r2, sp, #160	; 0xa0
   84a7e:	f004 fc89 	bl	89394 <__ssprint_r>
   84a82:	2800      	cmp	r0, #0
   84a84:	f47f a9c1 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84a88:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84a8a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84a8e:	e418      	b.n	842c2 <_svfprintf_r+0x77e>
   84a90:	2140      	movs	r1, #64	; 0x40
   84a92:	980a      	ldr	r0, [sp, #40]	; 0x28
   84a94:	f003 faca 	bl	8802c <_malloc_r>
   84a98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84a9a:	6018      	str	r0, [r3, #0]
   84a9c:	6118      	str	r0, [r3, #16]
   84a9e:	2800      	cmp	r0, #0
   84aa0:	f000 8597 	beq.w	855d2 <_svfprintf_r+0x1a8e>
   84aa4:	2340      	movs	r3, #64	; 0x40
   84aa6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84aa8:	6153      	str	r3, [r2, #20]
   84aaa:	f7ff b862 	b.w	83b72 <_svfprintf_r+0x2e>
   84aae:	2e10      	cmp	r6, #16
   84ab0:	f340 8576 	ble.w	855a0 <_svfprintf_r+0x1a5c>
   84ab4:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 84c78 <_svfprintf_r+0x1134>
   84ab8:	4642      	mov	r2, r8
   84aba:	4648      	mov	r0, r9
   84abc:	4621      	mov	r1, r4
   84abe:	46a8      	mov	r8, r5
   84ac0:	46b9      	mov	r9, r7
   84ac2:	f04f 0b10 	mov.w	fp, #16
   84ac6:	4607      	mov	r7, r0
   84ac8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84aca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84acc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   84ace:	e004      	b.n	84ada <_svfprintf_r+0xf96>
   84ad0:	3208      	adds	r2, #8
   84ad2:	3e10      	subs	r6, #16
   84ad4:	2e10      	cmp	r6, #16
   84ad6:	f340 8213 	ble.w	84f00 <_svfprintf_r+0x13bc>
   84ada:	3301      	adds	r3, #1
   84adc:	3110      	adds	r1, #16
   84ade:	2b07      	cmp	r3, #7
   84ae0:	e9c2 7b00 	strd	r7, fp, [r2]
   84ae4:	e9cd 3129 	strd	r3, r1, [sp, #164]	; 0xa4
   84ae8:	ddf2      	ble.n	84ad0 <_svfprintf_r+0xf8c>
   84aea:	4629      	mov	r1, r5
   84aec:	4620      	mov	r0, r4
   84aee:	aa28      	add	r2, sp, #160	; 0xa0
   84af0:	f004 fc50 	bl	89394 <__ssprint_r>
   84af4:	2800      	cmp	r0, #0
   84af6:	f47f a988 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84afa:	e9dd 3129 	ldrd	r3, r1, [sp, #164]	; 0xa4
   84afe:	aa2b      	add	r2, sp, #172	; 0xac
   84b00:	e7e7      	b.n	84ad2 <_svfprintf_r+0xf8e>
   84b02:	4628      	mov	r0, r5
   84b04:	f8cd 901c 	str.w	r9, [sp, #28]
   84b08:	940e      	str	r4, [sp, #56]	; 0x38
   84b0a:	f7fe ffb9 	bl	83a80 <strlen>
   84b0e:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   84b12:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84b16:	900b      	str	r0, [sp, #44]	; 0x2c
   84b18:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   84b1c:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   84b20:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   84b24:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   84b28:	9306      	str	r3, [sp, #24]
   84b2a:	f7ff b913 	b.w	83d54 <_svfprintf_r+0x210>
   84b2e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84b30:	4642      	mov	r2, r8
   84b32:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
   84b36:	18eb      	adds	r3, r5, r3
   84b38:	465e      	mov	r6, fp
   84b3a:	9307      	str	r3, [sp, #28]
   84b3c:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   84b40:	9710      	str	r7, [sp, #64]	; 0x40
   84b42:	4621      	mov	r1, r4
   84b44:	9f19      	ldr	r7, [sp, #100]	; 0x64
   84b46:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
   84b4a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
   84b4e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84b52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84b54:	9513      	str	r5, [sp, #76]	; 0x4c
   84b56:	f1b8 0f00 	cmp.w	r8, #0
   84b5a:	d02e      	beq.n	84bba <_svfprintf_r+0x1076>
   84b5c:	bb83      	cbnz	r3, 84bc0 <_svfprintf_r+0x107c>
   84b5e:	3f01      	subs	r7, #1
   84b60:	f108 38ff 	add.w	r8, r8, #4294967295
   84b64:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   84b66:	4449      	add	r1, r9
   84b68:	e9c2 3900 	strd	r3, r9, [r2]
   84b6c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84b6e:	912a      	str	r1, [sp, #168]	; 0xa8
   84b70:	3301      	adds	r3, #1
   84b72:	2b07      	cmp	r3, #7
   84b74:	9329      	str	r3, [sp, #164]	; 0xa4
   84b76:	dc60      	bgt.n	84c3a <_svfprintf_r+0x10f6>
   84b78:	3208      	adds	r2, #8
   84b7a:	9b07      	ldr	r3, [sp, #28]
   84b7c:	7838      	ldrb	r0, [r7, #0]
   84b7e:	1b9b      	subs	r3, r3, r6
   84b80:	4283      	cmp	r3, r0
   84b82:	bfa8      	it	ge
   84b84:	4603      	movge	r3, r0
   84b86:	2b00      	cmp	r3, #0
   84b88:	461c      	mov	r4, r3
   84b8a:	dd0b      	ble.n	84ba4 <_svfprintf_r+0x1060>
   84b8c:	9829      	ldr	r0, [sp, #164]	; 0xa4
   84b8e:	4419      	add	r1, r3
   84b90:	3001      	adds	r0, #1
   84b92:	2807      	cmp	r0, #7
   84b94:	e9c2 6300 	strd	r6, r3, [r2]
   84b98:	912a      	str	r1, [sp, #168]	; 0xa8
   84b9a:	9029      	str	r0, [sp, #164]	; 0xa4
   84b9c:	f300 8114 	bgt.w	84dc8 <_svfprintf_r+0x1284>
   84ba0:	7838      	ldrb	r0, [r7, #0]
   84ba2:	3208      	adds	r2, #8
   84ba4:	2c00      	cmp	r4, #0
   84ba6:	bfb4      	ite	lt
   84ba8:	4605      	movlt	r5, r0
   84baa:	1b05      	subge	r5, r0, r4
   84bac:	2d00      	cmp	r5, #0
   84bae:	dc0b      	bgt.n	84bc8 <_svfprintf_r+0x1084>
   84bb0:	4406      	add	r6, r0
   84bb2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84bb4:	f1b8 0f00 	cmp.w	r8, #0
   84bb8:	d1d0      	bne.n	84b5c <_svfprintf_r+0x1018>
   84bba:	2b00      	cmp	r3, #0
   84bbc:	f000 8226 	beq.w	8500c <_svfprintf_r+0x14c8>
   84bc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84bc2:	3b01      	subs	r3, #1
   84bc4:	930f      	str	r3, [sp, #60]	; 0x3c
   84bc6:	e7cd      	b.n	84b64 <_svfprintf_r+0x1020>
   84bc8:	2d10      	cmp	r5, #16
   84bca:	f340 849d 	ble.w	85508 <_svfprintf_r+0x19c4>
   84bce:	2410      	movs	r4, #16
   84bd0:	9829      	ldr	r0, [sp, #164]	; 0xa4
   84bd2:	e004      	b.n	84bde <_svfprintf_r+0x109a>
   84bd4:	3d10      	subs	r5, #16
   84bd6:	2d10      	cmp	r5, #16
   84bd8:	f102 0208 	add.w	r2, r2, #8
   84bdc:	dd16      	ble.n	84c0c <_svfprintf_r+0x10c8>
   84bde:	3001      	adds	r0, #1
   84be0:	4b25      	ldr	r3, [pc, #148]	; (84c78 <_svfprintf_r+0x1134>)
   84be2:	3110      	adds	r1, #16
   84be4:	2807      	cmp	r0, #7
   84be6:	e9c2 3400 	strd	r3, r4, [r2]
   84bea:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   84bee:	ddf1      	ble.n	84bd4 <_svfprintf_r+0x1090>
   84bf0:	4659      	mov	r1, fp
   84bf2:	4650      	mov	r0, sl
   84bf4:	aa28      	add	r2, sp, #160	; 0xa0
   84bf6:	f004 fbcd 	bl	89394 <__ssprint_r>
   84bfa:	2800      	cmp	r0, #0
   84bfc:	f47f a905 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84c00:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
   84c04:	3d10      	subs	r5, #16
   84c06:	2d10      	cmp	r5, #16
   84c08:	aa2b      	add	r2, sp, #172	; 0xac
   84c0a:	dce8      	bgt.n	84bde <_svfprintf_r+0x109a>
   84c0c:	3001      	adds	r0, #1
   84c0e:	4b1a      	ldr	r3, [pc, #104]	; (84c78 <_svfprintf_r+0x1134>)
   84c10:	4429      	add	r1, r5
   84c12:	2807      	cmp	r0, #7
   84c14:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   84c18:	6055      	str	r5, [r2, #4]
   84c1a:	6013      	str	r3, [r2, #0]
   84c1c:	f300 8241 	bgt.w	850a2 <_svfprintf_r+0x155e>
   84c20:	7838      	ldrb	r0, [r7, #0]
   84c22:	3208      	adds	r2, #8
   84c24:	4406      	add	r6, r0
   84c26:	e7c4      	b.n	84bb2 <_svfprintf_r+0x106e>
   84c28:	f017 0310 	ands.w	r3, r7, #16
   84c2c:	f000 80a0 	beq.w	84d70 <_svfprintf_r+0x122c>
   84c30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84c32:	f853 4b04 	ldr.w	r4, [r3], #4
   84c36:	930e      	str	r3, [sp, #56]	; 0x38
   84c38:	e70a      	b.n	84a50 <_svfprintf_r+0xf0c>
   84c3a:	4659      	mov	r1, fp
   84c3c:	4650      	mov	r0, sl
   84c3e:	aa28      	add	r2, sp, #160	; 0xa0
   84c40:	f004 fba8 	bl	89394 <__ssprint_r>
   84c44:	2800      	cmp	r0, #0
   84c46:	f47f a8e0 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84c4a:	992a      	ldr	r1, [sp, #168]	; 0xa8
   84c4c:	aa2b      	add	r2, sp, #172	; 0xac
   84c4e:	e794      	b.n	84b7a <_svfprintf_r+0x1036>
   84c50:	2300      	movs	r3, #0
   84c52:	f40b 6280 	and.w	r2, fp, #1024	; 0x400
   84c56:	9606      	str	r6, [sp, #24]
   84c58:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   84c5c:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   84c60:	4692      	mov	sl, r2
   84c62:	461e      	mov	r6, r3
   84c64:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
   84c68:	af54      	add	r7, sp, #336	; 0x150
   84c6a:	e014      	b.n	84c96 <_svfprintf_r+0x1152>
   84c6c:	66666667 	.word	0x66666667
   84c70:	0008a620 	.word	0x0008a620
   84c74:	0008a634 	.word	0x0008a634
   84c78:	0008a664 	.word	0x0008a664
   84c7c:	2300      	movs	r3, #0
   84c7e:	4620      	mov	r0, r4
   84c80:	4649      	mov	r1, r9
   84c82:	220a      	movs	r2, #10
   84c84:	f005 fb04 	bl	8a290 <__aeabi_uldivmod>
   84c88:	2c0a      	cmp	r4, #10
   84c8a:	f179 0300 	sbcs.w	r3, r9, #0
   84c8e:	d31b      	bcc.n	84cc8 <_svfprintf_r+0x1184>
   84c90:	4604      	mov	r4, r0
   84c92:	4689      	mov	r9, r1
   84c94:	462f      	mov	r7, r5
   84c96:	4620      	mov	r0, r4
   84c98:	220a      	movs	r2, #10
   84c9a:	2300      	movs	r3, #0
   84c9c:	4649      	mov	r1, r9
   84c9e:	f005 faf7 	bl	8a290 <__aeabi_uldivmod>
   84ca2:	3230      	adds	r2, #48	; 0x30
   84ca4:	1e7d      	subs	r5, r7, #1
   84ca6:	3601      	adds	r6, #1
   84ca8:	f807 2c01 	strb.w	r2, [r7, #-1]
   84cac:	f1ba 0f00 	cmp.w	sl, #0
   84cb0:	d0e4      	beq.n	84c7c <_svfprintf_r+0x1138>
   84cb2:	f898 3000 	ldrb.w	r3, [r8]
   84cb6:	429e      	cmp	r6, r3
   84cb8:	d1e0      	bne.n	84c7c <_svfprintf_r+0x1138>
   84cba:	2eff      	cmp	r6, #255	; 0xff
   84cbc:	d0de      	beq.n	84c7c <_svfprintf_r+0x1138>
   84cbe:	2c0a      	cmp	r4, #10
   84cc0:	f179 0300 	sbcs.w	r3, r9, #0
   84cc4:	f080 8130 	bcs.w	84f28 <_svfprintf_r+0x13e4>
   84cc8:	ab54      	add	r3, sp, #336	; 0x150
   84cca:	1b5b      	subs	r3, r3, r5
   84ccc:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   84cd0:	f8cd 8064 	str.w	r8, [sp, #100]	; 0x64
   84cd4:	9612      	str	r6, [sp, #72]	; 0x48
   84cd6:	465f      	mov	r7, fp
   84cd8:	9e06      	ldr	r6, [sp, #24]
   84cda:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   84cde:	930b      	str	r3, [sp, #44]	; 0x2c
   84ce0:	f7ff b82b 	b.w	83d3a <_svfprintf_r+0x1f6>
   84ce4:	990c      	ldr	r1, [sp, #48]	; 0x30
   84ce6:	980a      	ldr	r0, [sp, #40]	; 0x28
   84ce8:	aa28      	add	r2, sp, #160	; 0xa0
   84cea:	931d      	str	r3, [sp, #116]	; 0x74
   84cec:	f004 fb52 	bl	89394 <__ssprint_r>
   84cf0:	2800      	cmp	r0, #0
   84cf2:	f47f a88a 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84cf6:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84cfa:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84cfc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   84cfe:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84d02:	f7ff b8b8 	b.w	83e76 <_svfprintf_r+0x332>
   84d06:	2301      	movs	r3, #1
   84d08:	f8c8 3004 	str.w	r3, [r8, #4]
   84d0c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84d0e:	4abc      	ldr	r2, [pc, #752]	; (85000 <_svfprintf_r+0x14bc>)
   84d10:	3301      	adds	r3, #1
   84d12:	3401      	adds	r4, #1
   84d14:	2b07      	cmp	r3, #7
   84d16:	942a      	str	r4, [sp, #168]	; 0xa8
   84d18:	9329      	str	r3, [sp, #164]	; 0xa4
   84d1a:	f8c8 2000 	str.w	r2, [r8]
   84d1e:	f300 8117 	bgt.w	84f50 <_svfprintf_r+0x140c>
   84d22:	f108 0808 	add.w	r8, r8, #8
   84d26:	2900      	cmp	r1, #0
   84d28:	f040 8086 	bne.w	84e38 <_svfprintf_r+0x12f4>
   84d2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84d2e:	f007 0301 	and.w	r3, r7, #1
   84d32:	4313      	orrs	r3, r2
   84d34:	f43f a8e0 	beq.w	83ef8 <_svfprintf_r+0x3b4>
   84d38:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84d3a:	9917      	ldr	r1, [sp, #92]	; 0x5c
   84d3c:	191a      	adds	r2, r3, r4
   84d3e:	e9c8 1300 	strd	r1, r3, [r8]
   84d42:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84d44:	922a      	str	r2, [sp, #168]	; 0xa8
   84d46:	3301      	adds	r3, #1
   84d48:	2b07      	cmp	r3, #7
   84d4a:	9329      	str	r3, [sp, #164]	; 0xa4
   84d4c:	f300 8137 	bgt.w	84fbe <_svfprintf_r+0x147a>
   84d50:	f108 0808 	add.w	r8, r8, #8
   84d54:	9912      	ldr	r1, [sp, #72]	; 0x48
   84d56:	3301      	adds	r3, #1
   84d58:	188c      	adds	r4, r1, r2
   84d5a:	2b07      	cmp	r3, #7
   84d5c:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84d60:	f8c8 5000 	str.w	r5, [r8]
   84d64:	f8c8 1004 	str.w	r1, [r8, #4]
   84d68:	f77f a8c4 	ble.w	83ef4 <_svfprintf_r+0x3b0>
   84d6c:	f7ff bbac 	b.w	844c8 <_svfprintf_r+0x984>
   84d70:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   84d74:	f000 80a5 	beq.w	84ec2 <_svfprintf_r+0x137e>
   84d78:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   84d7a:	4699      	mov	r9, r3
   84d7c:	f852 4b04 	ldr.w	r4, [r2], #4
   84d80:	920e      	str	r2, [sp, #56]	; 0x38
   84d82:	b2a4      	uxth	r4, r4
   84d84:	e664      	b.n	84a50 <_svfprintf_r+0xf0c>
   84d86:	46bb      	mov	fp, r7
   84d88:	f7fe bfca 	b.w	83d20 <_svfprintf_r+0x1dc>
   84d8c:	990c      	ldr	r1, [sp, #48]	; 0x30
   84d8e:	980a      	ldr	r0, [sp, #40]	; 0x28
   84d90:	aa28      	add	r2, sp, #160	; 0xa0
   84d92:	f004 faff 	bl	89394 <__ssprint_r>
   84d96:	2800      	cmp	r0, #0
   84d98:	f47f a837 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84d9c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84d9e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84da2:	f7ff ba7b 	b.w	8429c <_svfprintf_r+0x758>
   84da6:	4614      	mov	r4, r2
   84da8:	463a      	mov	r2, r7
   84daa:	464f      	mov	r7, r9
   84dac:	4691      	mov	r9, r2
   84dae:	3301      	adds	r3, #1
   84db0:	442c      	add	r4, r5
   84db2:	2b07      	cmp	r3, #7
   84db4:	f8c8 9000 	str.w	r9, [r8]
   84db8:	f8c8 5004 	str.w	r5, [r8, #4]
   84dbc:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84dc0:	f77f a898 	ble.w	83ef4 <_svfprintf_r+0x3b0>
   84dc4:	f7ff bb80 	b.w	844c8 <_svfprintf_r+0x984>
   84dc8:	4659      	mov	r1, fp
   84dca:	4650      	mov	r0, sl
   84dcc:	aa28      	add	r2, sp, #160	; 0xa0
   84dce:	f004 fae1 	bl	89394 <__ssprint_r>
   84dd2:	2800      	cmp	r0, #0
   84dd4:	f47f a819 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84dd8:	7838      	ldrb	r0, [r7, #0]
   84dda:	992a      	ldr	r1, [sp, #168]	; 0xa8
   84ddc:	aa2b      	add	r2, sp, #172	; 0xac
   84dde:	e6e1      	b.n	84ba4 <_svfprintf_r+0x1060>
   84de0:	990c      	ldr	r1, [sp, #48]	; 0x30
   84de2:	980a      	ldr	r0, [sp, #40]	; 0x28
   84de4:	aa28      	add	r2, sp, #160	; 0xa0
   84de6:	f004 fad5 	bl	89394 <__ssprint_r>
   84dea:	2800      	cmp	r0, #0
   84dec:	f47f a80d 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84df0:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84df2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84df6:	f7ff b865 	b.w	83ec4 <_svfprintf_r+0x380>
   84dfa:	2b01      	cmp	r3, #1
   84dfc:	46bb      	mov	fp, r7
   84dfe:	f47f a9f5 	bne.w	841ec <_svfprintf_r+0x6a8>
   84e02:	f7fe bf92 	b.w	83d2a <_svfprintf_r+0x1e6>
   84e06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84e08:	9908      	ldr	r1, [sp, #32]
   84e0a:	f853 2b04 	ldr.w	r2, [r3], #4
   84e0e:	4655      	mov	r5, sl
   84e10:	6011      	str	r1, [r2, #0]
   84e12:	930e      	str	r3, [sp, #56]	; 0x38
   84e14:	f7ff b88e 	b.w	83f34 <_svfprintf_r+0x3f0>
   84e18:	2b06      	cmp	r3, #6
   84e1a:	4629      	mov	r1, r5
   84e1c:	bf28      	it	cs
   84e1e:	2306      	movcs	r3, #6
   84e20:	462a      	mov	r2, r5
   84e22:	9507      	str	r5, [sp, #28]
   84e24:	950d      	str	r5, [sp, #52]	; 0x34
   84e26:	9306      	str	r3, [sp, #24]
   84e28:	4d76      	ldr	r5, [pc, #472]	; (85004 <_svfprintf_r+0x14c0>)
   84e2a:	940e      	str	r4, [sp, #56]	; 0x38
   84e2c:	930b      	str	r3, [sp, #44]	; 0x2c
   84e2e:	910f      	str	r1, [sp, #60]	; 0x3c
   84e30:	9113      	str	r1, [sp, #76]	; 0x4c
   84e32:	9110      	str	r1, [sp, #64]	; 0x40
   84e34:	f7fe bf8e 	b.w	83d54 <_svfprintf_r+0x210>
   84e38:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84e3a:	9817      	ldr	r0, [sp, #92]	; 0x5c
   84e3c:	191a      	adds	r2, r3, r4
   84e3e:	e9c8 0300 	strd	r0, r3, [r8]
   84e42:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84e44:	922a      	str	r2, [sp, #168]	; 0xa8
   84e46:	3301      	adds	r3, #1
   84e48:	2b07      	cmp	r3, #7
   84e4a:	9329      	str	r3, [sp, #164]	; 0xa4
   84e4c:	f300 80b7 	bgt.w	84fbe <_svfprintf_r+0x147a>
   84e50:	f108 0808 	add.w	r8, r8, #8
   84e54:	2900      	cmp	r1, #0
   84e56:	f6bf af7d 	bge.w	84d54 <_svfprintf_r+0x1210>
   84e5a:	424e      	negs	r6, r1
   84e5c:	3110      	adds	r1, #16
   84e5e:	f280 83a9 	bge.w	855b4 <_svfprintf_r+0x1a70>
   84e62:	4641      	mov	r1, r8
   84e64:	2410      	movs	r4, #16
   84e66:	46a8      	mov	r8, r5
   84e68:	f8df 919c 	ldr.w	r9, [pc, #412]	; 85008 <_svfprintf_r+0x14c4>
   84e6c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   84e70:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   84e72:	e004      	b.n	84e7e <_svfprintf_r+0x133a>
   84e74:	3108      	adds	r1, #8
   84e76:	3e10      	subs	r6, #16
   84e78:	2e10      	cmp	r6, #16
   84e7a:	f340 82a7 	ble.w	853cc <_svfprintf_r+0x1888>
   84e7e:	3301      	adds	r3, #1
   84e80:	3210      	adds	r2, #16
   84e82:	2b07      	cmp	r3, #7
   84e84:	e9c1 9400 	strd	r9, r4, [r1]
   84e88:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   84e8c:	ddf2      	ble.n	84e74 <_svfprintf_r+0x1330>
   84e8e:	4629      	mov	r1, r5
   84e90:	4658      	mov	r0, fp
   84e92:	aa28      	add	r2, sp, #160	; 0xa0
   84e94:	f004 fa7e 	bl	89394 <__ssprint_r>
   84e98:	2800      	cmp	r0, #0
   84e9a:	f47e afb6 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84e9e:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   84ea2:	a92b      	add	r1, sp, #172	; 0xac
   84ea4:	e7e7      	b.n	84e76 <_svfprintf_r+0x1332>
   84ea6:	4614      	mov	r4, r2
   84ea8:	9f07      	ldr	r7, [sp, #28]
   84eaa:	3601      	adds	r6, #1
   84eac:	442c      	add	r4, r5
   84eae:	2e07      	cmp	r6, #7
   84eb0:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   84eb4:	f8c8 9000 	str.w	r9, [r8]
   84eb8:	f8c8 5004 	str.w	r5, [r8, #4]
   84ebc:	f77f aaf5 	ble.w	844aa <_svfprintf_r+0x966>
   84ec0:	e44e      	b.n	84760 <_svfprintf_r+0xc1c>
   84ec2:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   84ec6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84ec8:	d066      	beq.n	84f98 <_svfprintf_r+0x1454>
   84eca:	f853 4b04 	ldr.w	r4, [r3], #4
   84ece:	4691      	mov	r9, r2
   84ed0:	930e      	str	r3, [sp, #56]	; 0x38
   84ed2:	b2e4      	uxtb	r4, r4
   84ed4:	e5bc      	b.n	84a50 <_svfprintf_r+0xf0c>
   84ed6:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   84eda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84edc:	d057      	beq.n	84f8e <_svfprintf_r+0x144a>
   84ede:	f853 4b04 	ldr.w	r4, [r3], #4
   84ee2:	4691      	mov	r9, r2
   84ee4:	930e      	str	r3, [sp, #56]	; 0x38
   84ee6:	b2e4      	uxtb	r4, r4
   84ee8:	f7fe bf49 	b.w	83d7e <_svfprintf_r+0x23a>
   84eec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   84eee:	f8df 9118 	ldr.w	r9, [pc, #280]	; 85008 <_svfprintf_r+0x14c4>
   84ef2:	f7ff ba95 	b.w	84420 <_svfprintf_r+0x8dc>
   84ef6:	222d      	movs	r2, #45	; 0x2d
   84ef8:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   84efc:	f7ff b857 	b.w	83fae <_svfprintf_r+0x46a>
   84f00:	4645      	mov	r5, r8
   84f02:	4690      	mov	r8, r2
   84f04:	463a      	mov	r2, r7
   84f06:	460c      	mov	r4, r1
   84f08:	464f      	mov	r7, r9
   84f0a:	4691      	mov	r9, r2
   84f0c:	3301      	adds	r3, #1
   84f0e:	4434      	add	r4, r6
   84f10:	2b07      	cmp	r3, #7
   84f12:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84f16:	f8c8 9000 	str.w	r9, [r8]
   84f1a:	f8c8 6004 	str.w	r6, [r8, #4]
   84f1e:	dc5c      	bgt.n	84fda <_svfprintf_r+0x1496>
   84f20:	f108 0808 	add.w	r8, r8, #8
   84f24:	f7ff bb9e 	b.w	84664 <_svfprintf_r+0xb20>
   84f28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   84f2a:	991b      	ldr	r1, [sp, #108]	; 0x6c
   84f2c:	1aed      	subs	r5, r5, r3
   84f2e:	461a      	mov	r2, r3
   84f30:	4628      	mov	r0, r5
   84f32:	f7fe fdd3 	bl	83adc <strncpy>
   84f36:	f898 3001 	ldrb.w	r3, [r8, #1]
   84f3a:	b10b      	cbz	r3, 84f40 <_svfprintf_r+0x13fc>
   84f3c:	f108 0801 	add.w	r8, r8, #1
   84f40:	4620      	mov	r0, r4
   84f42:	4649      	mov	r1, r9
   84f44:	220a      	movs	r2, #10
   84f46:	2300      	movs	r3, #0
   84f48:	2600      	movs	r6, #0
   84f4a:	f005 f9a1 	bl	8a290 <__aeabi_uldivmod>
   84f4e:	e69f      	b.n	84c90 <_svfprintf_r+0x114c>
   84f50:	990c      	ldr	r1, [sp, #48]	; 0x30
   84f52:	980a      	ldr	r0, [sp, #40]	; 0x28
   84f54:	aa28      	add	r2, sp, #160	; 0xa0
   84f56:	f004 fa1d 	bl	89394 <__ssprint_r>
   84f5a:	2800      	cmp	r0, #0
   84f5c:	f47e af55 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84f60:	9922      	ldr	r1, [sp, #136]	; 0x88
   84f62:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84f64:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84f68:	e6dd      	b.n	84d26 <_svfprintf_r+0x11e2>
   84f6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84f6c:	18ae      	adds	r6, r5, r2
   84f6e:	eba6 060b 	sub.w	r6, r6, fp
   84f72:	1ad5      	subs	r5, r2, r3
   84f74:	42ae      	cmp	r6, r5
   84f76:	bfa8      	it	ge
   84f78:	462e      	movge	r6, r5
   84f7a:	f7ff bba6 	b.w	846ca <_svfprintf_r+0xb86>
   84f7e:	f852 4b04 	ldr.w	r4, [r2], #4
   84f82:	4689      	mov	r9, r1
   84f84:	2301      	movs	r3, #1
   84f86:	920e      	str	r2, [sp, #56]	; 0x38
   84f88:	b2e4      	uxtb	r4, r4
   84f8a:	f7fe befb 	b.w	83d84 <_svfprintf_r+0x240>
   84f8e:	f853 4b04 	ldr.w	r4, [r3], #4
   84f92:	930e      	str	r3, [sp, #56]	; 0x38
   84f94:	f7fe bef3 	b.w	83d7e <_svfprintf_r+0x23a>
   84f98:	f853 4b04 	ldr.w	r4, [r3], #4
   84f9c:	930e      	str	r3, [sp, #56]	; 0x38
   84f9e:	e557      	b.n	84a50 <_svfprintf_r+0xf0c>
   84fa0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84fa2:	9908      	ldr	r1, [sp, #32]
   84fa4:	f853 2b04 	ldr.w	r2, [r3], #4
   84fa8:	4655      	mov	r5, sl
   84faa:	8011      	strh	r1, [r2, #0]
   84fac:	930e      	str	r3, [sp, #56]	; 0x38
   84fae:	f7fe bfc1 	b.w	83f34 <_svfprintf_r+0x3f0>
   84fb2:	f344 19c0 	sbfx	r9, r4, #7, #1
   84fb6:	464b      	mov	r3, r9
   84fb8:	b264      	sxtb	r4, r4
   84fba:	f7fe bea4 	b.w	83d06 <_svfprintf_r+0x1c2>
   84fbe:	990c      	ldr	r1, [sp, #48]	; 0x30
   84fc0:	980a      	ldr	r0, [sp, #40]	; 0x28
   84fc2:	aa28      	add	r2, sp, #160	; 0xa0
   84fc4:	f004 f9e6 	bl	89394 <__ssprint_r>
   84fc8:	2800      	cmp	r0, #0
   84fca:	f47e af1e 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84fce:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   84fd2:	9922      	ldr	r1, [sp, #136]	; 0x88
   84fd4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84fd8:	e73c      	b.n	84e54 <_svfprintf_r+0x1310>
   84fda:	990c      	ldr	r1, [sp, #48]	; 0x30
   84fdc:	980a      	ldr	r0, [sp, #40]	; 0x28
   84fde:	aa28      	add	r2, sp, #160	; 0xa0
   84fe0:	f004 f9d8 	bl	89394 <__ssprint_r>
   84fe4:	2800      	cmp	r0, #0
   84fe6:	f47e af10 	bne.w	83e0a <_svfprintf_r+0x2c6>
   84fea:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84fec:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84ff0:	f7ff bb38 	b.w	84664 <_svfprintf_r+0xb20>
   84ff4:	2306      	movs	r3, #6
   84ff6:	9307      	str	r3, [sp, #28]
   84ff8:	f026 0320 	bic.w	r3, r6, #32
   84ffc:	9306      	str	r3, [sp, #24]
   84ffe:	e470      	b.n	848e2 <_svfprintf_r+0xd9e>
   85000:	0008a650 	.word	0x0008a650
   85004:	0008a648 	.word	0x0008a648
   85008:	0008a664 	.word	0x0008a664
   8500c:	e9dd 3512 	ldrd	r3, r5, [sp, #72]	; 0x48
   85010:	18eb      	adds	r3, r5, r3
   85012:	429e      	cmp	r6, r3
   85014:	46b3      	mov	fp, r6
   85016:	9719      	str	r7, [sp, #100]	; 0x64
   85018:	4690      	mov	r8, r2
   8501a:	460c      	mov	r4, r1
   8501c:	bf28      	it	cs
   8501e:	469b      	movcs	fp, r3
   85020:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   85024:	9f10      	ldr	r7, [sp, #64]	; 0x40
   85026:	f7ff bb23 	b.w	84670 <_svfprintf_r+0xb2c>
   8502a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8502c:	1cda      	adds	r2, r3, #3
   8502e:	9310      	str	r3, [sp, #64]	; 0x40
   85030:	db02      	blt.n	85038 <_svfprintf_r+0x14f4>
   85032:	9a07      	ldr	r2, [sp, #28]
   85034:	4293      	cmp	r3, r2
   85036:	dd04      	ble.n	85042 <_svfprintf_r+0x14fe>
   85038:	3e02      	subs	r6, #2
   8503a:	f026 0320 	bic.w	r3, r6, #32
   8503e:	9306      	str	r3, [sp, #24]
   85040:	e48b      	b.n	8495a <_svfprintf_r+0xe16>
   85042:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85044:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85046:	4293      	cmp	r3, r2
   85048:	f2c0 80c2 	blt.w	851d0 <_svfprintf_r+0x168c>
   8504c:	f019 0f01 	tst.w	r9, #1
   85050:	f000 821d 	beq.w	8548e <_svfprintf_r+0x194a>
   85054:	9a16      	ldr	r2, [sp, #88]	; 0x58
   85056:	4413      	add	r3, r2
   85058:	930b      	str	r3, [sp, #44]	; 0x2c
   8505a:	f419 6f80 	tst.w	r9, #1024	; 0x400
   8505e:	f000 8214 	beq.w	8548a <_svfprintf_r+0x1946>
   85062:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85064:	2667      	movs	r6, #103	; 0x67
   85066:	2b00      	cmp	r3, #0
   85068:	dc76      	bgt.n	85158 <_svfprintf_r+0x1614>
   8506a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8506c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   85070:	9306      	str	r3, [sp, #24]
   85072:	2300      	movs	r3, #0
   85074:	930f      	str	r3, [sp, #60]	; 0x3c
   85076:	9313      	str	r3, [sp, #76]	; 0x4c
   85078:	e4cf      	b.n	84a1a <_svfprintf_r+0xed6>
   8507a:	222d      	movs	r2, #45	; 0x2d
   8507c:	2300      	movs	r3, #0
   8507e:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   85082:	9307      	str	r3, [sp, #28]
   85084:	f7fe be68 	b.w	83d58 <_svfprintf_r+0x214>
   85088:	990c      	ldr	r1, [sp, #48]	; 0x30
   8508a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8508c:	aa28      	add	r2, sp, #160	; 0xa0
   8508e:	f004 f981 	bl	89394 <__ssprint_r>
   85092:	2800      	cmp	r0, #0
   85094:	f47e aeb9 	bne.w	83e0a <_svfprintf_r+0x2c6>
   85098:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8509a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8509e:	f7ff bad8 	b.w	84652 <_svfprintf_r+0xb0e>
   850a2:	4659      	mov	r1, fp
   850a4:	4650      	mov	r0, sl
   850a6:	aa28      	add	r2, sp, #160	; 0xa0
   850a8:	f004 f974 	bl	89394 <__ssprint_r>
   850ac:	2800      	cmp	r0, #0
   850ae:	f47e aeac 	bne.w	83e0a <_svfprintf_r+0x2c6>
   850b2:	7838      	ldrb	r0, [r7, #0]
   850b4:	992a      	ldr	r1, [sp, #168]	; 0xa8
   850b6:	aa2b      	add	r2, sp, #172	; 0xac
   850b8:	4406      	add	r6, r0
   850ba:	e57a      	b.n	84bb2 <_svfprintf_r+0x106e>
   850bc:	990c      	ldr	r1, [sp, #48]	; 0x30
   850be:	980a      	ldr	r0, [sp, #40]	; 0x28
   850c0:	aa28      	add	r2, sp, #160	; 0xa0
   850c2:	f004 f967 	bl	89394 <__ssprint_r>
   850c6:	2800      	cmp	r0, #0
   850c8:	f47e ae9f 	bne.w	83e0a <_svfprintf_r+0x2c6>
   850cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   850ce:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   850d0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   850d4:	f7ff bae1 	b.w	8469a <_svfprintf_r+0xb56>
   850d8:	9907      	ldr	r1, [sp, #28]
   850da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   850dc:	9101      	str	r1, [sp, #4]
   850de:	2103      	movs	r1, #3
   850e0:	9100      	str	r1, [sp, #0]
   850e2:	a926      	add	r1, sp, #152	; 0x98
   850e4:	9104      	str	r1, [sp, #16]
   850e6:	a923      	add	r1, sp, #140	; 0x8c
   850e8:	9103      	str	r1, [sp, #12]
   850ea:	a922      	add	r1, sp, #136	; 0x88
   850ec:	465a      	mov	r2, fp
   850ee:	980a      	ldr	r0, [sp, #40]	; 0x28
   850f0:	9102      	str	r1, [sp, #8]
   850f2:	f001 fad5 	bl	866a0 <_dtoa_r>
   850f6:	7803      	ldrb	r3, [r0, #0]
   850f8:	4605      	mov	r5, r0
   850fa:	2b30      	cmp	r3, #48	; 0x30
   850fc:	f000 8216 	beq.w	8552c <_svfprintf_r+0x19e8>
   85100:	9b22      	ldr	r3, [sp, #136]	; 0x88
   85102:	9a07      	ldr	r2, [sp, #28]
   85104:	46b9      	mov	r9, r7
   85106:	4413      	add	r3, r2
   85108:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8510a:	18ec      	adds	r4, r5, r3
   8510c:	4658      	mov	r0, fp
   8510e:	2200      	movs	r2, #0
   85110:	2300      	movs	r3, #0
   85112:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85114:	f005 f84c 	bl	8a1b0 <__aeabi_dcmpeq>
   85118:	b108      	cbz	r0, 8511e <_svfprintf_r+0x15da>
   8511a:	4623      	mov	r3, r4
   8511c:	e411      	b.n	84942 <_svfprintf_r+0xdfe>
   8511e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85120:	42a3      	cmp	r3, r4
   85122:	f4bf ac0e 	bcs.w	84942 <_svfprintf_r+0xdfe>
   85126:	2130      	movs	r1, #48	; 0x30
   85128:	1c5a      	adds	r2, r3, #1
   8512a:	9226      	str	r2, [sp, #152]	; 0x98
   8512c:	7019      	strb	r1, [r3, #0]
   8512e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85130:	429c      	cmp	r4, r3
   85132:	d8f9      	bhi.n	85128 <_svfprintf_r+0x15e4>
   85134:	e405      	b.n	84942 <_svfprintf_r+0xdfe>
   85136:	9a22      	ldr	r2, [sp, #136]	; 0x88
   85138:	2a00      	cmp	r2, #0
   8513a:	9210      	str	r2, [sp, #64]	; 0x40
   8513c:	f340 820e 	ble.w	8555c <_svfprintf_r+0x1a18>
   85140:	9907      	ldr	r1, [sp, #28]
   85142:	f009 0301 	and.w	r3, r9, #1
   85146:	430b      	orrs	r3, r1
   85148:	f040 817e 	bne.w	85448 <_svfprintf_r+0x1904>
   8514c:	2666      	movs	r6, #102	; 0x66
   8514e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85150:	930b      	str	r3, [sp, #44]	; 0x2c
   85152:	f419 6f80 	tst.w	r9, #1024	; 0x400
   85156:	d088      	beq.n	8506a <_svfprintf_r+0x1526>
   85158:	9919      	ldr	r1, [sp, #100]	; 0x64
   8515a:	780b      	ldrb	r3, [r1, #0]
   8515c:	2bff      	cmp	r3, #255	; 0xff
   8515e:	f000 8225 	beq.w	855ac <_svfprintf_r+0x1a68>
   85162:	2400      	movs	r4, #0
   85164:	9a10      	ldr	r2, [sp, #64]	; 0x40
   85166:	4620      	mov	r0, r4
   85168:	e004      	b.n	85174 <_svfprintf_r+0x1630>
   8516a:	3001      	adds	r0, #1
   8516c:	3101      	adds	r1, #1
   8516e:	2bff      	cmp	r3, #255	; 0xff
   85170:	f000 8159 	beq.w	85426 <_svfprintf_r+0x18e2>
   85174:	4293      	cmp	r3, r2
   85176:	f280 8156 	bge.w	85426 <_svfprintf_r+0x18e2>
   8517a:	1ad2      	subs	r2, r2, r3
   8517c:	784b      	ldrb	r3, [r1, #1]
   8517e:	2b00      	cmp	r3, #0
   85180:	d1f3      	bne.n	8516a <_svfprintf_r+0x1626>
   85182:	780b      	ldrb	r3, [r1, #0]
   85184:	3401      	adds	r4, #1
   85186:	e7f2      	b.n	8516e <_svfprintf_r+0x162a>
   85188:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   8518c:	f7ff b9da 	b.w	84544 <_svfprintf_r+0xa00>
   85190:	9b07      	ldr	r3, [sp, #28]
   85192:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   85196:	940e      	str	r4, [sp, #56]	; 0x38
   85198:	9306      	str	r3, [sp, #24]
   8519a:	930b      	str	r3, [sp, #44]	; 0x2c
   8519c:	9007      	str	r0, [sp, #28]
   8519e:	900f      	str	r0, [sp, #60]	; 0x3c
   851a0:	9013      	str	r0, [sp, #76]	; 0x4c
   851a2:	9010      	str	r0, [sp, #64]	; 0x40
   851a4:	f7fe bdd6 	b.w	83d54 <_svfprintf_r+0x210>
   851a8:	990c      	ldr	r1, [sp, #48]	; 0x30
   851aa:	980a      	ldr	r0, [sp, #40]	; 0x28
   851ac:	aa28      	add	r2, sp, #160	; 0xa0
   851ae:	f004 f8f1 	bl	89394 <__ssprint_r>
   851b2:	2800      	cmp	r0, #0
   851b4:	f47e ae29 	bne.w	83e0a <_svfprintf_r+0x2c6>
   851b8:	9d22      	ldr	r5, [sp, #136]	; 0x88
   851ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
   851bc:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   851be:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   851c2:	1b5d      	subs	r5, r3, r5
   851c4:	f7ff ba81 	b.w	846ca <_svfprintf_r+0xb86>
   851c8:	2300      	movs	r3, #0
   851ca:	9307      	str	r3, [sp, #28]
   851cc:	f7fe bd0b 	b.w	83be6 <_svfprintf_r+0xa2>
   851d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   851d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
   851d4:	189a      	adds	r2, r3, r2
   851d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
   851d8:	920b      	str	r2, [sp, #44]	; 0x2c
   851da:	2b00      	cmp	r3, #0
   851dc:	f340 8185 	ble.w	854ea <_svfprintf_r+0x19a6>
   851e0:	2667      	movs	r6, #103	; 0x67
   851e2:	e7b6      	b.n	85152 <_svfprintf_r+0x160e>
   851e4:	2330      	movs	r3, #48	; 0x30
   851e6:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   851ea:	2358      	movs	r3, #88	; 0x58
   851ec:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
   851f0:	9b07      	ldr	r3, [sp, #28]
   851f2:	f047 0402 	orr.w	r4, r7, #2
   851f6:	2b63      	cmp	r3, #99	; 0x63
   851f8:	f300 80c4 	bgt.w	85384 <_svfprintf_r+0x1840>
   851fc:	2300      	movs	r3, #0
   851fe:	ad3b      	add	r5, sp, #236	; 0xec
   85200:	930d      	str	r3, [sp, #52]	; 0x34
   85202:	f447 7381 	orr.w	r3, r7, #258	; 0x102
   85206:	930f      	str	r3, [sp, #60]	; 0x3c
   85208:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   8520c:	4613      	mov	r3, r2
   8520e:	2b00      	cmp	r3, #0
   85210:	4627      	mov	r7, r4
   85212:	f2c0 8084 	blt.w	8531e <_svfprintf_r+0x17da>
   85216:	930b      	str	r3, [sp, #44]	; 0x2c
   85218:	2300      	movs	r3, #0
   8521a:	468b      	mov	fp, r1
   8521c:	931d      	str	r3, [sp, #116]	; 0x74
   8521e:	f026 0320 	bic.w	r3, r6, #32
   85222:	9306      	str	r3, [sp, #24]
   85224:	2e61      	cmp	r6, #97	; 0x61
   85226:	f000 8118 	beq.w	8545a <_svfprintf_r+0x1916>
   8522a:	2e41      	cmp	r6, #65	; 0x41
   8522c:	f47f ab67 	bne.w	848fe <_svfprintf_r+0xdba>
   85230:	aa22      	add	r2, sp, #136	; 0x88
   85232:	4658      	mov	r0, fp
   85234:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85236:	f004 f81d 	bl	89274 <frexp>
   8523a:	2200      	movs	r2, #0
   8523c:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   85240:	f004 fd4e 	bl	89ce0 <__aeabi_dmul>
   85244:	4602      	mov	r2, r0
   85246:	460b      	mov	r3, r1
   85248:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   8524c:	2200      	movs	r2, #0
   8524e:	2300      	movs	r3, #0
   85250:	f004 ffae 	bl	8a1b0 <__aeabi_dcmpeq>
   85254:	b108      	cbz	r0, 8525a <_svfprintf_r+0x1716>
   85256:	2301      	movs	r3, #1
   85258:	9322      	str	r3, [sp, #136]	; 0x88
   8525a:	4bad      	ldr	r3, [pc, #692]	; (85510 <_svfprintf_r+0x19cc>)
   8525c:	930b      	str	r3, [sp, #44]	; 0x2c
   8525e:	9b07      	ldr	r3, [sp, #28]
   85260:	e9cd a612 	strd	sl, r6, [sp, #72]	; 0x48
   85264:	e9cd 781e 	strd	r7, r8, [sp, #120]	; 0x78
   85268:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   8526c:	46ab      	mov	fp, r5
   8526e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   85272:	f103 39ff 	add.w	r9, r3, #4294967295
   85276:	9510      	str	r5, [sp, #64]	; 0x40
   85278:	e006      	b.n	85288 <_svfprintf_r+0x1744>
   8527a:	2200      	movs	r2, #0
   8527c:	2300      	movs	r3, #0
   8527e:	f109 39ff 	add.w	r9, r9, #4294967295
   85282:	f004 ff95 	bl	8a1b0 <__aeabi_dcmpeq>
   85286:	b9e8      	cbnz	r0, 852c4 <_svfprintf_r+0x1780>
   85288:	2200      	movs	r2, #0
   8528a:	4ba2      	ldr	r3, [pc, #648]	; (85514 <_svfprintf_r+0x19d0>)
   8528c:	4630      	mov	r0, r6
   8528e:	4639      	mov	r1, r7
   85290:	f004 fd26 	bl	89ce0 <__aeabi_dmul>
   85294:	460f      	mov	r7, r1
   85296:	4606      	mov	r6, r0
   85298:	f004 ffd2 	bl	8a240 <__aeabi_d2iz>
   8529c:	4604      	mov	r4, r0
   8529e:	f004 fcb5 	bl	89c0c <__aeabi_i2d>
   852a2:	460b      	mov	r3, r1
   852a4:	4602      	mov	r2, r0
   852a6:	4639      	mov	r1, r7
   852a8:	4630      	mov	r0, r6
   852aa:	f004 fb61 	bl	89970 <__aeabi_dsub>
   852ae:	f81a 3004 	ldrb.w	r3, [sl, r4]
   852b2:	f1b9 3fff 	cmp.w	r9, #4294967295
   852b6:	46d8      	mov	r8, fp
   852b8:	464d      	mov	r5, r9
   852ba:	4606      	mov	r6, r0
   852bc:	460f      	mov	r7, r1
   852be:	f80b 3b01 	strb.w	r3, [fp], #1
   852c2:	d1da      	bne.n	8527a <_svfprintf_r+0x1736>
   852c4:	4630      	mov	r0, r6
   852c6:	4639      	mov	r1, r7
   852c8:	2200      	movs	r2, #0
   852ca:	4b93      	ldr	r3, [pc, #588]	; (85518 <_svfprintf_r+0x19d4>)
   852cc:	46a9      	mov	r9, r5
   852ce:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
   852d2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   852d4:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
   852d8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   852dc:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
   852e0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   852e2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
   852e4:	f004 ff8c 	bl	8a200 <__aeabi_dcmpgt>
   852e8:	bb80      	cbnz	r0, 8534c <_svfprintf_r+0x1808>
   852ea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   852ee:	2200      	movs	r2, #0
   852f0:	4b89      	ldr	r3, [pc, #548]	; (85518 <_svfprintf_r+0x19d4>)
   852f2:	f004 ff5d 	bl	8a1b0 <__aeabi_dcmpeq>
   852f6:	b108      	cbz	r0, 852fc <_svfprintf_r+0x17b8>
   852f8:	07e1      	lsls	r1, r4, #31
   852fa:	d427      	bmi.n	8534c <_svfprintf_r+0x1808>
   852fc:	464b      	mov	r3, r9
   852fe:	2b00      	cmp	r3, #0
   85300:	db06      	blt.n	85310 <_svfprintf_r+0x17cc>
   85302:	2230      	movs	r2, #48	; 0x30
   85304:	3301      	adds	r3, #1
   85306:	445b      	add	r3, fp
   85308:	f80b 2b01 	strb.w	r2, [fp], #1
   8530c:	455b      	cmp	r3, fp
   8530e:	d1fb      	bne.n	85308 <_svfprintf_r+0x17c4>
   85310:	ebab 0305 	sub.w	r3, fp, r5
   85314:	46b9      	mov	r9, r7
   85316:	9312      	str	r3, [sp, #72]	; 0x48
   85318:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8531a:	f7ff bb14 	b.w	84946 <_svfprintf_r+0xe02>
   8531e:	f026 0320 	bic.w	r3, r6, #32
   85322:	9306      	str	r3, [sp, #24]
   85324:	222d      	movs	r2, #45	; 0x2d
   85326:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   8532a:	469b      	mov	fp, r3
   8532c:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
   85330:	921d      	str	r2, [sp, #116]	; 0x74
   85332:	930b      	str	r3, [sp, #44]	; 0x2c
   85334:	e776      	b.n	85224 <_svfprintf_r+0x16e0>
   85336:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85338:	f7ff b95c 	b.w	845f4 <_svfprintf_r+0xab0>
   8533c:	9b07      	ldr	r3, [sp, #28]
   8533e:	18ec      	adds	r4, r5, r3
   85340:	e6e4      	b.n	8510c <_svfprintf_r+0x15c8>
   85342:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   85344:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 8551c <_svfprintf_r+0x19d8>
   85348:	f7ff b827 	b.w	8439a <_svfprintf_r+0x856>
   8534c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8534e:	9326      	str	r3, [sp, #152]	; 0x98
   85350:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85352:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   85356:	7bd9      	ldrb	r1, [r3, #15]
   85358:	465b      	mov	r3, fp
   8535a:	428a      	cmp	r2, r1
   8535c:	d109      	bne.n	85372 <_svfprintf_r+0x182e>
   8535e:	2030      	movs	r0, #48	; 0x30
   85360:	f803 0c01 	strb.w	r0, [r3, #-1]
   85364:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85366:	1e5a      	subs	r2, r3, #1
   85368:	9226      	str	r2, [sp, #152]	; 0x98
   8536a:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   8536e:	4291      	cmp	r1, r2
   85370:	d0f6      	beq.n	85360 <_svfprintf_r+0x181c>
   85372:	2a39      	cmp	r2, #57	; 0x39
   85374:	bf0b      	itete	eq
   85376:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
   85378:	3201      	addne	r2, #1
   8537a:	7a92      	ldrbeq	r2, [r2, #10]
   8537c:	b2d2      	uxtbne	r2, r2
   8537e:	f803 2c01 	strb.w	r2, [r3, #-1]
   85382:	e7c5      	b.n	85310 <_svfprintf_r+0x17cc>
   85384:	980a      	ldr	r0, [sp, #40]	; 0x28
   85386:	1c59      	adds	r1, r3, #1
   85388:	f002 fe50 	bl	8802c <_malloc_r>
   8538c:	4605      	mov	r5, r0
   8538e:	2800      	cmp	r0, #0
   85390:	f000 8117 	beq.w	855c2 <_svfprintf_r+0x1a7e>
   85394:	900d      	str	r0, [sp, #52]	; 0x34
   85396:	e734      	b.n	85202 <_svfprintf_r+0x16be>
   85398:	2102      	movs	r1, #2
   8539a:	9100      	str	r1, [sp, #0]
   8539c:	9907      	ldr	r1, [sp, #28]
   8539e:	465a      	mov	r2, fp
   853a0:	1c4c      	adds	r4, r1, #1
   853a2:	a926      	add	r1, sp, #152	; 0x98
   853a4:	9104      	str	r1, [sp, #16]
   853a6:	a923      	add	r1, sp, #140	; 0x8c
   853a8:	9103      	str	r1, [sp, #12]
   853aa:	a922      	add	r1, sp, #136	; 0x88
   853ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   853ae:	980a      	ldr	r0, [sp, #40]	; 0x28
   853b0:	9401      	str	r4, [sp, #4]
   853b2:	9102      	str	r1, [sp, #8]
   853b4:	f001 f974 	bl	866a0 <_dtoa_r>
   853b8:	4605      	mov	r5, r0
   853ba:	46b9      	mov	r9, r7
   853bc:	442c      	add	r4, r5
   853be:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   853c0:	e6a4      	b.n	8510c <_svfprintf_r+0x15c8>
   853c2:	2330      	movs	r3, #48	; 0x30
   853c4:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   853c8:	2378      	movs	r3, #120	; 0x78
   853ca:	e70f      	b.n	851ec <_svfprintf_r+0x16a8>
   853cc:	4645      	mov	r5, r8
   853ce:	4688      	mov	r8, r1
   853d0:	3301      	adds	r3, #1
   853d2:	4432      	add	r2, r6
   853d4:	2b07      	cmp	r3, #7
   853d6:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   853da:	f8c8 9000 	str.w	r9, [r8]
   853de:	f8c8 6004 	str.w	r6, [r8, #4]
   853e2:	f77f acb5 	ble.w	84d50 <_svfprintf_r+0x120c>
   853e6:	990c      	ldr	r1, [sp, #48]	; 0x30
   853e8:	980a      	ldr	r0, [sp, #40]	; 0x28
   853ea:	aa28      	add	r2, sp, #160	; 0xa0
   853ec:	f003 ffd2 	bl	89394 <__ssprint_r>
   853f0:	2800      	cmp	r0, #0
   853f2:	f47e ad0a 	bne.w	83e0a <_svfprintf_r+0x2c6>
   853f6:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   853fa:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   853fe:	e4a9      	b.n	84d54 <_svfprintf_r+0x1210>
   85400:	9b07      	ldr	r3, [sp, #28]
   85402:	2b00      	cmp	r3, #0
   85404:	bf08      	it	eq
   85406:	2301      	moveq	r3, #1
   85408:	9307      	str	r3, [sp, #28]
   8540a:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   8540e:	930f      	str	r3, [sp, #60]	; 0x3c
   85410:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85412:	2b00      	cmp	r3, #0
   85414:	f2c0 80b6 	blt.w	85584 <_svfprintf_r+0x1a40>
   85418:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
   8541c:	900d      	str	r0, [sp, #52]	; 0x34
   8541e:	930b      	str	r3, [sp, #44]	; 0x2c
   85420:	901d      	str	r0, [sp, #116]	; 0x74
   85422:	f7ff ba73 	b.w	8490c <_svfprintf_r+0xdc8>
   85426:	9119      	str	r1, [sp, #100]	; 0x64
   85428:	9210      	str	r2, [sp, #64]	; 0x40
   8542a:	9013      	str	r0, [sp, #76]	; 0x4c
   8542c:	940f      	str	r4, [sp, #60]	; 0x3c
   8542e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85430:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   85432:	991c      	ldr	r1, [sp, #112]	; 0x70
   85434:	4413      	add	r3, r2
   85436:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85438:	fb01 2303 	mla	r3, r1, r3, r2
   8543c:	930b      	str	r3, [sp, #44]	; 0x2c
   8543e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   85442:	9306      	str	r3, [sp, #24]
   85444:	f7ff bae9 	b.w	84a1a <_svfprintf_r+0xed6>
   85448:	9b16      	ldr	r3, [sp, #88]	; 0x58
   8544a:	2666      	movs	r6, #102	; 0x66
   8544c:	18d3      	adds	r3, r2, r3
   8544e:	4419      	add	r1, r3
   85450:	910b      	str	r1, [sp, #44]	; 0x2c
   85452:	e67e      	b.n	85152 <_svfprintf_r+0x160e>
   85454:	2300      	movs	r3, #0
   85456:	930d      	str	r3, [sp, #52]	; 0x34
   85458:	e764      	b.n	85324 <_svfprintf_r+0x17e0>
   8545a:	aa22      	add	r2, sp, #136	; 0x88
   8545c:	4658      	mov	r0, fp
   8545e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85460:	f003 ff08 	bl	89274 <frexp>
   85464:	2200      	movs	r2, #0
   85466:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   8546a:	f004 fc39 	bl	89ce0 <__aeabi_dmul>
   8546e:	4602      	mov	r2, r0
   85470:	460b      	mov	r3, r1
   85472:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   85476:	2200      	movs	r2, #0
   85478:	2300      	movs	r3, #0
   8547a:	f004 fe99 	bl	8a1b0 <__aeabi_dcmpeq>
   8547e:	b108      	cbz	r0, 85484 <_svfprintf_r+0x1940>
   85480:	2301      	movs	r3, #1
   85482:	9322      	str	r3, [sp, #136]	; 0x88
   85484:	4b26      	ldr	r3, [pc, #152]	; (85520 <_svfprintf_r+0x19dc>)
   85486:	930b      	str	r3, [sp, #44]	; 0x2c
   85488:	e6e9      	b.n	8525e <_svfprintf_r+0x171a>
   8548a:	2667      	movs	r6, #103	; 0x67
   8548c:	e5ed      	b.n	8506a <_svfprintf_r+0x1526>
   8548e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85490:	930b      	str	r3, [sp, #44]	; 0x2c
   85492:	e5e2      	b.n	8505a <_svfprintf_r+0x1516>
   85494:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85496:	2003      	movs	r0, #3
   85498:	2b00      	cmp	r3, #0
   8549a:	bfb8      	it	lt
   8549c:	222d      	movlt	r2, #45	; 0x2d
   8549e:	f04f 0300 	mov.w	r3, #0
   854a2:	bfa8      	it	ge
   854a4:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
   854a8:	4619      	mov	r1, r3
   854aa:	930d      	str	r3, [sp, #52]	; 0x34
   854ac:	4d1d      	ldr	r5, [pc, #116]	; (85524 <_svfprintf_r+0x19e0>)
   854ae:	4b1e      	ldr	r3, [pc, #120]	; (85528 <_svfprintf_r+0x19e4>)
   854b0:	bfb8      	it	lt
   854b2:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
   854b6:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   854ba:	9006      	str	r0, [sp, #24]
   854bc:	f7fe bd7f 	b.w	83fbe <_svfprintf_r+0x47a>
   854c0:	2900      	cmp	r1, #0
   854c2:	d144      	bne.n	8554e <_svfprintf_r+0x1a0a>
   854c4:	2230      	movs	r2, #48	; 0x30
   854c6:	f88d 2092 	strb.w	r2, [sp, #146]	; 0x92
   854ca:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   854ce:	3330      	adds	r3, #48	; 0x30
   854d0:	f802 3b01 	strb.w	r3, [r2], #1
   854d4:	ab24      	add	r3, sp, #144	; 0x90
   854d6:	1ad3      	subs	r3, r2, r3
   854d8:	931a      	str	r3, [sp, #104]	; 0x68
   854da:	f7ff ba87 	b.w	849ec <_svfprintf_r+0xea8>
   854de:	f106 020f 	add.w	r2, r6, #15
   854e2:	2101      	movs	r1, #1
   854e4:	b2d2      	uxtb	r2, r2
   854e6:	f7ff ba41 	b.w	8496c <_svfprintf_r+0xe28>
   854ea:	f1c3 0301 	rsb	r3, r3, #1
   854ee:	441a      	add	r2, r3
   854f0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   854f4:	2667      	movs	r6, #103	; 0x67
   854f6:	920b      	str	r2, [sp, #44]	; 0x2c
   854f8:	9306      	str	r3, [sp, #24]
   854fa:	e5ba      	b.n	85072 <_svfprintf_r+0x152e>
   854fc:	f019 0f01 	tst.w	r9, #1
   85500:	f43f aa7f 	beq.w	84a02 <_svfprintf_r+0xebe>
   85504:	f7ff ba79 	b.w	849fa <_svfprintf_r+0xeb6>
   85508:	9829      	ldr	r0, [sp, #164]	; 0xa4
   8550a:	f7ff bb7f 	b.w	84c0c <_svfprintf_r+0x10c8>
   8550e:	bf00      	nop
   85510:	0008a634 	.word	0x0008a634
   85514:	40300000 	.word	0x40300000
   85518:	3fe00000 	.word	0x3fe00000
   8551c:	0008a664 	.word	0x0008a664
   85520:	0008a620 	.word	0x0008a620
   85524:	0008a618 	.word	0x0008a618
   85528:	0008a61c 	.word	0x0008a61c
   8552c:	4658      	mov	r0, fp
   8552e:	2200      	movs	r2, #0
   85530:	2300      	movs	r3, #0
   85532:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85534:	f004 fe3c 	bl	8a1b0 <__aeabi_dcmpeq>
   85538:	2800      	cmp	r0, #0
   8553a:	f47f ade1 	bne.w	85100 <_svfprintf_r+0x15bc>
   8553e:	9b07      	ldr	r3, [sp, #28]
   85540:	f1c3 0301 	rsb	r3, r3, #1
   85544:	9322      	str	r3, [sp, #136]	; 0x88
   85546:	e5dc      	b.n	85102 <_svfprintf_r+0x15be>
   85548:	f8df 9098 	ldr.w	r9, [pc, #152]	; 855e4 <_svfprintf_r+0x1aa0>
   8554c:	e4ad      	b.n	84eaa <_svfprintf_r+0x1366>
   8554e:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   85552:	e7bc      	b.n	854ce <_svfprintf_r+0x198a>
   85554:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85556:	f8df 908c 	ldr.w	r9, [pc, #140]	; 855e4 <_svfprintf_r+0x1aa0>
   8555a:	e428      	b.n	84dae <_svfprintf_r+0x126a>
   8555c:	9a07      	ldr	r2, [sp, #28]
   8555e:	f009 0901 	and.w	r9, r9, #1
   85562:	ea59 0302 	orrs.w	r3, r9, r2
   85566:	d104      	bne.n	85572 <_svfprintf_r+0x1a2e>
   85568:	2301      	movs	r3, #1
   8556a:	2666      	movs	r6, #102	; 0x66
   8556c:	9306      	str	r3, [sp, #24]
   8556e:	930b      	str	r3, [sp, #44]	; 0x2c
   85570:	e57f      	b.n	85072 <_svfprintf_r+0x152e>
   85572:	9b16      	ldr	r3, [sp, #88]	; 0x58
   85574:	2666      	movs	r6, #102	; 0x66
   85576:	3301      	adds	r3, #1
   85578:	441a      	add	r2, r3
   8557a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   8557e:	920b      	str	r2, [sp, #44]	; 0x2c
   85580:	9306      	str	r3, [sp, #24]
   85582:	e576      	b.n	85072 <_svfprintf_r+0x152e>
   85584:	900d      	str	r0, [sp, #52]	; 0x34
   85586:	e6cd      	b.n	85324 <_svfprintf_r+0x17e0>
   85588:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8558a:	f89a 6001 	ldrb.w	r6, [sl, #1]
   8558e:	4692      	mov	sl, r2
   85590:	f853 2b04 	ldr.w	r2, [r3], #4
   85594:	930e      	str	r3, [sp, #56]	; 0x38
   85596:	ea42 73e2 	orr.w	r3, r2, r2, asr #31
   8559a:	9307      	str	r3, [sp, #28]
   8559c:	f7fe bb21 	b.w	83be2 <_svfprintf_r+0x9e>
   855a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   855a2:	f8df 9040 	ldr.w	r9, [pc, #64]	; 855e4 <_svfprintf_r+0x1aa0>
   855a6:	e4b1      	b.n	84f0c <_svfprintf_r+0x13c8>
   855a8:	9c07      	ldr	r4, [sp, #28]
   855aa:	e706      	b.n	853ba <_svfprintf_r+0x1876>
   855ac:	2300      	movs	r3, #0
   855ae:	930f      	str	r3, [sp, #60]	; 0x3c
   855b0:	9313      	str	r3, [sp, #76]	; 0x4c
   855b2:	e73c      	b.n	8542e <_svfprintf_r+0x18ea>
   855b4:	f8df 902c 	ldr.w	r9, [pc, #44]	; 855e4 <_svfprintf_r+0x1aa0>
   855b8:	e70a      	b.n	853d0 <_svfprintf_r+0x188c>
   855ba:	2302      	movs	r3, #2
   855bc:	931a      	str	r3, [sp, #104]	; 0x68
   855be:	f7ff ba15 	b.w	849ec <_svfprintf_r+0xea8>
   855c2:	990c      	ldr	r1, [sp, #48]	; 0x30
   855c4:	898b      	ldrh	r3, [r1, #12]
   855c6:	f043 0240 	orr.w	r2, r3, #64	; 0x40
   855ca:	4613      	mov	r3, r2
   855cc:	818a      	strh	r2, [r1, #12]
   855ce:	f7fe bc24 	b.w	83e1a <_svfprintf_r+0x2d6>
   855d2:	f04f 32ff 	mov.w	r2, #4294967295
   855d6:	230c      	movs	r3, #12
   855d8:	9208      	str	r2, [sp, #32]
   855da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   855dc:	6013      	str	r3, [r2, #0]
   855de:	f7fe bc23 	b.w	83e28 <_svfprintf_r+0x2e4>
   855e2:	bf00      	nop
   855e4:	0008a664 	.word	0x0008a664

000855e8 <__sprint_r.part.0>:
   855e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   855ec:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   855ee:	4690      	mov	r8, r2
   855f0:	049c      	lsls	r4, r3, #18
   855f2:	d52d      	bpl.n	85650 <__sprint_r.part.0+0x68>
   855f4:	6893      	ldr	r3, [r2, #8]
   855f6:	6812      	ldr	r2, [r2, #0]
   855f8:	b343      	cbz	r3, 8564c <__sprint_r.part.0+0x64>
   855fa:	468b      	mov	fp, r1
   855fc:	4606      	mov	r6, r0
   855fe:	f102 0908 	add.w	r9, r2, #8
   85602:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
   85606:	ea5f 079a 	movs.w	r7, sl, lsr #2
   8560a:	d015      	beq.n	85638 <__sprint_r.part.0+0x50>
   8560c:	2400      	movs	r4, #0
   8560e:	3d04      	subs	r5, #4
   85610:	e001      	b.n	85616 <__sprint_r.part.0+0x2e>
   85612:	42a7      	cmp	r7, r4
   85614:	d00e      	beq.n	85634 <__sprint_r.part.0+0x4c>
   85616:	465a      	mov	r2, fp
   85618:	4630      	mov	r0, r6
   8561a:	f855 1f04 	ldr.w	r1, [r5, #4]!
   8561e:	f002 f963 	bl	878e8 <_fputwc_r>
   85622:	1c43      	adds	r3, r0, #1
   85624:	f104 0401 	add.w	r4, r4, #1
   85628:	d1f3      	bne.n	85612 <__sprint_r.part.0+0x2a>
   8562a:	2300      	movs	r3, #0
   8562c:	e9c8 3301 	strd	r3, r3, [r8, #4]
   85630:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85634:	f8d8 3008 	ldr.w	r3, [r8, #8]
   85638:	f02a 0a03 	bic.w	sl, sl, #3
   8563c:	eba3 030a 	sub.w	r3, r3, sl
   85640:	f8c8 3008 	str.w	r3, [r8, #8]
   85644:	f109 0908 	add.w	r9, r9, #8
   85648:	2b00      	cmp	r3, #0
   8564a:	d1da      	bne.n	85602 <__sprint_r.part.0+0x1a>
   8564c:	2000      	movs	r0, #0
   8564e:	e7ec      	b.n	8562a <__sprint_r.part.0+0x42>
   85650:	f002 face 	bl	87bf0 <__sfvwrite_r>
   85654:	2300      	movs	r3, #0
   85656:	e9c8 3301 	strd	r3, r3, [r8, #4]
   8565a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8565e:	bf00      	nop

00085660 <_vfiprintf_r>:
   85660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85664:	b0bd      	sub	sp, #244	; 0xf4
   85666:	461c      	mov	r4, r3
   85668:	4617      	mov	r7, r2
   8566a:	e9cd 3005 	strd	r3, r0, [sp, #20]
   8566e:	9102      	str	r1, [sp, #8]
   85670:	b118      	cbz	r0, 8567a <_vfiprintf_r+0x1a>
   85672:	6b83      	ldr	r3, [r0, #56]	; 0x38
   85674:	2b00      	cmp	r3, #0
   85676:	f000 8277 	beq.w	85b68 <_vfiprintf_r+0x508>
   8567a:	9a02      	ldr	r2, [sp, #8]
   8567c:	6e53      	ldr	r3, [r2, #100]	; 0x64
   8567e:	07de      	lsls	r6, r3, #31
   85680:	f140 8184 	bpl.w	8598c <_vfiprintf_r+0x32c>
   85684:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
   85688:	b28a      	uxth	r2, r1
   8568a:	0490      	lsls	r0, r2, #18
   8568c:	d408      	bmi.n	856a0 <_vfiprintf_r+0x40>
   8568e:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
   85692:	9902      	ldr	r1, [sp, #8]
   85694:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   85696:	818a      	strh	r2, [r1, #12]
   85698:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   8569c:	b292      	uxth	r2, r2
   8569e:	664b      	str	r3, [r1, #100]	; 0x64
   856a0:	0711      	lsls	r1, r2, #28
   856a2:	f140 80ec 	bpl.w	8587e <_vfiprintf_r+0x21e>
   856a6:	9b02      	ldr	r3, [sp, #8]
   856a8:	691b      	ldr	r3, [r3, #16]
   856aa:	2b00      	cmp	r3, #0
   856ac:	f000 80e7 	beq.w	8587e <_vfiprintf_r+0x21e>
   856b0:	f002 031a 	and.w	r3, r2, #26
   856b4:	2b0a      	cmp	r3, #10
   856b6:	f000 80f0 	beq.w	8589a <_vfiprintf_r+0x23a>
   856ba:	ab13      	add	r3, sp, #76	; 0x4c
   856bc:	9310      	str	r3, [sp, #64]	; 0x40
   856be:	2300      	movs	r3, #0
   856c0:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
   856c4:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
   856c8:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
   856cc:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   856d0:	9304      	str	r3, [sp, #16]
   856d2:	783b      	ldrb	r3, [r7, #0]
   856d4:	2b00      	cmp	r3, #0
   856d6:	f000 8146 	beq.w	85966 <_vfiprintf_r+0x306>
   856da:	463c      	mov	r4, r7
   856dc:	e004      	b.n	856e8 <_vfiprintf_r+0x88>
   856de:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   856e2:	2b00      	cmp	r3, #0
   856e4:	f000 8121 	beq.w	8592a <_vfiprintf_r+0x2ca>
   856e8:	2b25      	cmp	r3, #37	; 0x25
   856ea:	d1f8      	bne.n	856de <_vfiprintf_r+0x7e>
   856ec:	1be5      	subs	r5, r4, r7
   856ee:	f040 811e 	bne.w	8592e <_vfiprintf_r+0x2ce>
   856f2:	7823      	ldrb	r3, [r4, #0]
   856f4:	2b00      	cmp	r3, #0
   856f6:	f000 8136 	beq.w	85966 <_vfiprintf_r+0x306>
   856fa:	f04f 0300 	mov.w	r3, #0
   856fe:	2500      	movs	r5, #0
   85700:	f04f 3bff 	mov.w	fp, #4294967295
   85704:	f04f 082b 	mov.w	r8, #43	; 0x2b
   85708:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   8570c:	7863      	ldrb	r3, [r4, #1]
   8570e:	9503      	str	r5, [sp, #12]
   85710:	1c67      	adds	r7, r4, #1
   85712:	3701      	adds	r7, #1
   85714:	f1a3 0220 	sub.w	r2, r3, #32
   85718:	2a5a      	cmp	r2, #90	; 0x5a
   8571a:	f200 8146 	bhi.w	859aa <_vfiprintf_r+0x34a>
   8571e:	e8df f012 	tbh	[pc, r2, lsl #1]
   85722:	02a1      	.short	0x02a1
   85724:	01440144 	.word	0x01440144
   85728:	0144029d 	.word	0x0144029d
   8572c:	01440144 	.word	0x01440144
   85730:	0144027c 	.word	0x0144027c
   85734:	006a0144 	.word	0x006a0144
   85738:	01440253 	.word	0x01440253
   8573c:	02af0229 	.word	0x02af0229
   85740:	02ab0144 	.word	0x02ab0144
   85744:	005b005b 	.word	0x005b005b
   85748:	005b005b 	.word	0x005b005b
   8574c:	005b005b 	.word	0x005b005b
   85750:	005b005b 	.word	0x005b005b
   85754:	0144005b 	.word	0x0144005b
   85758:	01440144 	.word	0x01440144
   8575c:	01440144 	.word	0x01440144
   85760:	01440144 	.word	0x01440144
   85764:	01440144 	.word	0x01440144
   85768:	00780213 	.word	0x00780213
   8576c:	01440144 	.word	0x01440144
   85770:	01440144 	.word	0x01440144
   85774:	01440144 	.word	0x01440144
   85778:	01440144 	.word	0x01440144
   8577c:	01440144 	.word	0x01440144
   85780:	014400d1 	.word	0x014400d1
   85784:	01440144 	.word	0x01440144
   85788:	014401f7 	.word	0x014401f7
   8578c:	01440241 	.word	0x01440241
   85790:	05210144 	.word	0x05210144
   85794:	01440144 	.word	0x01440144
   85798:	01440144 	.word	0x01440144
   8579c:	01440144 	.word	0x01440144
   857a0:	01440144 	.word	0x01440144
   857a4:	01440144 	.word	0x01440144
   857a8:	007a0213 	.word	0x007a0213
   857ac:	01440144 	.word	0x01440144
   857b0:	02370144 	.word	0x02370144
   857b4:	0074007a 	.word	0x0074007a
   857b8:	022d0144 	.word	0x022d0144
   857bc:	02690144 	.word	0x02690144
   857c0:	025700d3 	.word	0x025700d3
   857c4:	01440074 	.word	0x01440074
   857c8:	007201f7 	.word	0x007201f7
   857cc:	01440541 	.word	0x01440541
   857d0:	05430144 	.word	0x05430144
   857d4:	00720144 	.word	0x00720144
   857d8:	2100      	movs	r1, #0
   857da:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   857de:	f817 3b01 	ldrb.w	r3, [r7], #1
   857e2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   857e6:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   857ea:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   857ee:	2a09      	cmp	r2, #9
   857f0:	d9f5      	bls.n	857de <_vfiprintf_r+0x17e>
   857f2:	9103      	str	r1, [sp, #12]
   857f4:	e78e      	b.n	85714 <_vfiprintf_r+0xb4>
   857f6:	9b05      	ldr	r3, [sp, #20]
   857f8:	f853 2b04 	ldr.w	r2, [r3], #4
   857fc:	2a00      	cmp	r2, #0
   857fe:	9203      	str	r2, [sp, #12]
   85800:	9305      	str	r3, [sp, #20]
   85802:	f2c0 81b4 	blt.w	85b6e <_vfiprintf_r+0x50e>
   85806:	783b      	ldrb	r3, [r7, #0]
   85808:	e783      	b.n	85712 <_vfiprintf_r+0xb2>
   8580a:	783b      	ldrb	r3, [r7, #0]
   8580c:	f045 0520 	orr.w	r5, r5, #32
   85810:	e77f      	b.n	85712 <_vfiprintf_r+0xb2>
   85812:	f045 0510 	orr.w	r5, r5, #16
   85816:	06ac      	lsls	r4, r5, #26
   85818:	9e05      	ldr	r6, [sp, #20]
   8581a:	f140 816b 	bpl.w	85af4 <_vfiprintf_r+0x494>
   8581e:	3607      	adds	r6, #7
   85820:	f026 0607 	bic.w	r6, r6, #7
   85824:	4632      	mov	r2, r6
   85826:	6873      	ldr	r3, [r6, #4]
   85828:	f852 6b08 	ldr.w	r6, [r2], #8
   8582c:	4698      	mov	r8, r3
   8582e:	9205      	str	r2, [sp, #20]
   85830:	2b00      	cmp	r3, #0
   85832:	f2c0 8449 	blt.w	860c8 <_vfiprintf_r+0xa68>
   85836:	f1bb 3fff 	cmp.w	fp, #4294967295
   8583a:	f000 8531 	beq.w	862a0 <_vfiprintf_r+0xc40>
   8583e:	ea56 0308 	orrs.w	r3, r6, r8
   85842:	f025 0a80 	bic.w	sl, r5, #128	; 0x80
   85846:	f000 8425 	beq.w	86094 <_vfiprintf_r+0xa34>
   8584a:	2e0a      	cmp	r6, #10
   8584c:	f178 0300 	sbcs.w	r3, r8, #0
   85850:	f080 84e1 	bcs.w	86216 <_vfiprintf_r+0xbb6>
   85854:	2301      	movs	r3, #1
   85856:	4655      	mov	r5, sl
   85858:	3630      	adds	r6, #48	; 0x30
   8585a:	f88d 60ef 	strb.w	r6, [sp, #239]	; 0xef
   8585e:	9301      	str	r3, [sp, #4]
   85860:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   85864:	f8dd 8004 	ldr.w	r8, [sp, #4]
   85868:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   8586c:	45d8      	cmp	r8, fp
   8586e:	bfb8      	it	lt
   85870:	46d8      	movlt	r8, fp
   85872:	2b00      	cmp	r3, #0
   85874:	f000 80a8 	beq.w	859c8 <_vfiprintf_r+0x368>
   85878:	f108 0801 	add.w	r8, r8, #1
   8587c:	e0a4      	b.n	859c8 <_vfiprintf_r+0x368>
   8587e:	9d02      	ldr	r5, [sp, #8]
   85880:	9806      	ldr	r0, [sp, #24]
   85882:	4629      	mov	r1, r5
   85884:	f000 fdfa 	bl	8647c <__swsetup_r>
   85888:	2800      	cmp	r0, #0
   8588a:	f040 8594 	bne.w	863b6 <_vfiprintf_r+0xd56>
   8588e:	89aa      	ldrh	r2, [r5, #12]
   85890:	f002 031a 	and.w	r3, r2, #26
   85894:	2b0a      	cmp	r3, #10
   85896:	f47f af10 	bne.w	856ba <_vfiprintf_r+0x5a>
   8589a:	9902      	ldr	r1, [sp, #8]
   8589c:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
   858a0:	2b00      	cmp	r3, #0
   858a2:	f6ff af0a 	blt.w	856ba <_vfiprintf_r+0x5a>
   858a6:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   858a8:	07de      	lsls	r6, r3, #31
   858aa:	d402      	bmi.n	858b2 <_vfiprintf_r+0x252>
   858ac:	0595      	lsls	r5, r2, #22
   858ae:	f140 8562 	bpl.w	86376 <_vfiprintf_r+0xd16>
   858b2:	4623      	mov	r3, r4
   858b4:	463a      	mov	r2, r7
   858b6:	9902      	ldr	r1, [sp, #8]
   858b8:	9806      	ldr	r0, [sp, #24]
   858ba:	b03d      	add	sp, #244	; 0xf4
   858bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   858c0:	f000 bd9a 	b.w	863f8 <__sbprintf>
   858c4:	f045 0510 	orr.w	r5, r5, #16
   858c8:	f015 0820 	ands.w	r8, r5, #32
   858cc:	f000 8103 	beq.w	85ad6 <_vfiprintf_r+0x476>
   858d0:	9e05      	ldr	r6, [sp, #20]
   858d2:	3607      	adds	r6, #7
   858d4:	f026 0607 	bic.w	r6, r6, #7
   858d8:	4633      	mov	r3, r6
   858da:	f8d6 8004 	ldr.w	r8, [r6, #4]
   858de:	f853 6b08 	ldr.w	r6, [r3], #8
   858e2:	9305      	str	r3, [sp, #20]
   858e4:	2300      	movs	r3, #0
   858e6:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
   858ea:	f04f 0200 	mov.w	r2, #0
   858ee:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
   858f2:	f1bb 3fff 	cmp.w	fp, #4294967295
   858f6:	f000 81dd 	beq.w	85cb4 <_vfiprintf_r+0x654>
   858fa:	ea56 0208 	orrs.w	r2, r6, r8
   858fe:	f02a 0580 	bic.w	r5, sl, #128	; 0x80
   85902:	f040 81d6 	bne.w	85cb2 <_vfiprintf_r+0x652>
   85906:	f1bb 0f00 	cmp.w	fp, #0
   8590a:	f040 84cc 	bne.w	862a6 <_vfiprintf_r+0xc46>
   8590e:	2b00      	cmp	r3, #0
   85910:	f040 83c5 	bne.w	8609e <_vfiprintf_r+0xa3e>
   85914:	f01a 0301 	ands.w	r3, sl, #1
   85918:	9301      	str	r3, [sp, #4]
   8591a:	f000 83ec 	beq.w	860f6 <_vfiprintf_r+0xa96>
   8591e:	2330      	movs	r3, #48	; 0x30
   85920:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   85924:	f88d 30ef 	strb.w	r3, [sp, #239]	; 0xef
   85928:	e79c      	b.n	85864 <_vfiprintf_r+0x204>
   8592a:	1be5      	subs	r5, r4, r7
   8592c:	d01b      	beq.n	85966 <_vfiprintf_r+0x306>
   8592e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85930:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85932:	3301      	adds	r3, #1
   85934:	442a      	add	r2, r5
   85936:	2b07      	cmp	r3, #7
   85938:	e9c9 7500 	strd	r7, r5, [r9]
   8593c:	9212      	str	r2, [sp, #72]	; 0x48
   8593e:	9311      	str	r3, [sp, #68]	; 0x44
   85940:	dc05      	bgt.n	8594e <_vfiprintf_r+0x2ee>
   85942:	f109 0908 	add.w	r9, r9, #8
   85946:	9b04      	ldr	r3, [sp, #16]
   85948:	442b      	add	r3, r5
   8594a:	9304      	str	r3, [sp, #16]
   8594c:	e6d1      	b.n	856f2 <_vfiprintf_r+0x92>
   8594e:	2a00      	cmp	r2, #0
   85950:	f000 839c 	beq.w	8608c <_vfiprintf_r+0xa2c>
   85954:	9902      	ldr	r1, [sp, #8]
   85956:	9806      	ldr	r0, [sp, #24]
   85958:	aa10      	add	r2, sp, #64	; 0x40
   8595a:	f7ff fe45 	bl	855e8 <__sprint_r.part.0>
   8595e:	b940      	cbnz	r0, 85972 <_vfiprintf_r+0x312>
   85960:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85964:	e7ef      	b.n	85946 <_vfiprintf_r+0x2e6>
   85966:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85968:	2b00      	cmp	r3, #0
   8596a:	f040 8515 	bne.w	86398 <_vfiprintf_r+0xd38>
   8596e:	2300      	movs	r3, #0
   85970:	9311      	str	r3, [sp, #68]	; 0x44
   85972:	9a02      	ldr	r2, [sp, #8]
   85974:	6e53      	ldr	r3, [r2, #100]	; 0x64
   85976:	07d9      	lsls	r1, r3, #31
   85978:	f140 80a2 	bpl.w	85ac0 <_vfiprintf_r+0x460>
   8597c:	8993      	ldrh	r3, [r2, #12]
   8597e:	065b      	lsls	r3, r3, #25
   85980:	f100 8525 	bmi.w	863ce <_vfiprintf_r+0xd6e>
   85984:	9804      	ldr	r0, [sp, #16]
   85986:	b03d      	add	sp, #244	; 0xf4
   85988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8598c:	9b02      	ldr	r3, [sp, #8]
   8598e:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
   85992:	058d      	lsls	r5, r1, #22
   85994:	b28a      	uxth	r2, r1
   85996:	f53f ae78 	bmi.w	8568a <_vfiprintf_r+0x2a>
   8599a:	461d      	mov	r5, r3
   8599c:	6d98      	ldr	r0, [r3, #88]	; 0x58
   8599e:	f002 fad1 	bl	87f44 <__retarget_lock_acquire_recursive>
   859a2:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
   859a6:	b28a      	uxth	r2, r1
   859a8:	e66f      	b.n	8568a <_vfiprintf_r+0x2a>
   859aa:	2b00      	cmp	r3, #0
   859ac:	d0db      	beq.n	85966 <_vfiprintf_r+0x306>
   859ae:	f04f 0801 	mov.w	r8, #1
   859b2:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   859b6:	f04f 0300 	mov.w	r3, #0
   859ba:	ac23      	add	r4, sp, #140	; 0x8c
   859bc:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   859c0:	f8cd 8004 	str.w	r8, [sp, #4]
   859c4:	f04f 0b00 	mov.w	fp, #0
   859c8:	f015 0302 	ands.w	r3, r5, #2
   859cc:	9307      	str	r3, [sp, #28]
   859ce:	bf18      	it	ne
   859d0:	f108 0802 	addne.w	r8, r8, #2
   859d4:	f015 0384 	ands.w	r3, r5, #132	; 0x84
   859d8:	9308      	str	r3, [sp, #32]
   859da:	d105      	bne.n	859e8 <_vfiprintf_r+0x388>
   859dc:	9b03      	ldr	r3, [sp, #12]
   859de:	eba3 0608 	sub.w	r6, r3, r8
   859e2:	2e00      	cmp	r6, #0
   859e4:	f300 828a 	bgt.w	85efc <_vfiprintf_r+0x89c>
   859e8:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   859ec:	1c48      	adds	r0, r1, #1
   859ee:	f89d 603b 	ldrb.w	r6, [sp, #59]	; 0x3b
   859f2:	b176      	cbz	r6, 85a12 <_vfiprintf_r+0x3b2>
   859f4:	2101      	movs	r1, #1
   859f6:	3201      	adds	r2, #1
   859f8:	f10d 063b 	add.w	r6, sp, #59	; 0x3b
   859fc:	2807      	cmp	r0, #7
   859fe:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85a02:	e9c9 6100 	strd	r6, r1, [r9]
   85a06:	f300 8258 	bgt.w	85eba <_vfiprintf_r+0x85a>
   85a0a:	4601      	mov	r1, r0
   85a0c:	f109 0908 	add.w	r9, r9, #8
   85a10:	3001      	adds	r0, #1
   85a12:	9b07      	ldr	r3, [sp, #28]
   85a14:	b1d3      	cbz	r3, 85a4c <_vfiprintf_r+0x3ec>
   85a16:	2302      	movs	r3, #2
   85a18:	3202      	adds	r2, #2
   85a1a:	f8c9 3004 	str.w	r3, [r9, #4]
   85a1e:	2807      	cmp	r0, #7
   85a20:	ab0f      	add	r3, sp, #60	; 0x3c
   85a22:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85a26:	f8c9 3000 	str.w	r3, [r9]
   85a2a:	f340 8262 	ble.w	85ef2 <_vfiprintf_r+0x892>
   85a2e:	2a00      	cmp	r2, #0
   85a30:	f000 8327 	beq.w	86082 <_vfiprintf_r+0xa22>
   85a34:	9902      	ldr	r1, [sp, #8]
   85a36:	9806      	ldr	r0, [sp, #24]
   85a38:	aa10      	add	r2, sp, #64	; 0x40
   85a3a:	f7ff fdd5 	bl	855e8 <__sprint_r.part.0>
   85a3e:	2800      	cmp	r0, #0
   85a40:	d197      	bne.n	85972 <_vfiprintf_r+0x312>
   85a42:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85a46:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85a4a:	1c48      	adds	r0, r1, #1
   85a4c:	9b08      	ldr	r3, [sp, #32]
   85a4e:	2b80      	cmp	r3, #128	; 0x80
   85a50:	f000 8171 	beq.w	85d36 <_vfiprintf_r+0x6d6>
   85a54:	9b01      	ldr	r3, [sp, #4]
   85a56:	ebab 0603 	sub.w	r6, fp, r3
   85a5a:	2e00      	cmp	r6, #0
   85a5c:	f300 81cf 	bgt.w	85dfe <_vfiprintf_r+0x79e>
   85a60:	9b01      	ldr	r3, [sp, #4]
   85a62:	2807      	cmp	r0, #7
   85a64:	441a      	add	r2, r3
   85a66:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85a6a:	f8c9 4000 	str.w	r4, [r9]
   85a6e:	f8c9 3004 	str.w	r3, [r9, #4]
   85a72:	f340 815d 	ble.w	85d30 <_vfiprintf_r+0x6d0>
   85a76:	2a00      	cmp	r2, #0
   85a78:	f000 8293 	beq.w	85fa2 <_vfiprintf_r+0x942>
   85a7c:	9902      	ldr	r1, [sp, #8]
   85a7e:	9806      	ldr	r0, [sp, #24]
   85a80:	aa10      	add	r2, sp, #64	; 0x40
   85a82:	f7ff fdb1 	bl	855e8 <__sprint_r.part.0>
   85a86:	2800      	cmp	r0, #0
   85a88:	f47f af73 	bne.w	85972 <_vfiprintf_r+0x312>
   85a8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85a8e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85a92:	0768      	lsls	r0, r5, #29
   85a94:	d505      	bpl.n	85aa2 <_vfiprintf_r+0x442>
   85a96:	9b03      	ldr	r3, [sp, #12]
   85a98:	eba3 0408 	sub.w	r4, r3, r8
   85a9c:	2c00      	cmp	r4, #0
   85a9e:	f300 828a 	bgt.w	85fb6 <_vfiprintf_r+0x956>
   85aa2:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
   85aa6:	4541      	cmp	r1, r8
   85aa8:	bfac      	ite	ge
   85aaa:	185b      	addge	r3, r3, r1
   85aac:	4443      	addlt	r3, r8
   85aae:	9304      	str	r3, [sp, #16]
   85ab0:	2a00      	cmp	r2, #0
   85ab2:	f040 81f3 	bne.w	85e9c <_vfiprintf_r+0x83c>
   85ab6:	2300      	movs	r3, #0
   85ab8:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85abc:	9311      	str	r3, [sp, #68]	; 0x44
   85abe:	e608      	b.n	856d2 <_vfiprintf_r+0x72>
   85ac0:	9b02      	ldr	r3, [sp, #8]
   85ac2:	899b      	ldrh	r3, [r3, #12]
   85ac4:	059a      	lsls	r2, r3, #22
   85ac6:	f53f af5a 	bmi.w	8597e <_vfiprintf_r+0x31e>
   85aca:	9c02      	ldr	r4, [sp, #8]
   85acc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   85ace:	f002 fa3b 	bl	87f48 <__retarget_lock_release_recursive>
   85ad2:	89a3      	ldrh	r3, [r4, #12]
   85ad4:	e753      	b.n	8597e <_vfiprintf_r+0x31e>
   85ad6:	f015 0310 	ands.w	r3, r5, #16
   85ada:	f040 8318 	bne.w	8610e <_vfiprintf_r+0xaae>
   85ade:	f015 0240 	ands.w	r2, r5, #64	; 0x40
   85ae2:	f000 8310 	beq.w	86106 <_vfiprintf_r+0xaa6>
   85ae6:	9e05      	ldr	r6, [sp, #20]
   85ae8:	4698      	mov	r8, r3
   85aea:	f856 3b04 	ldr.w	r3, [r6], #4
   85aee:	9605      	str	r6, [sp, #20]
   85af0:	b29e      	uxth	r6, r3
   85af2:	e6f7      	b.n	858e4 <_vfiprintf_r+0x284>
   85af4:	f856 3b04 	ldr.w	r3, [r6], #4
   85af8:	06e8      	lsls	r0, r5, #27
   85afa:	9605      	str	r6, [sp, #20]
   85afc:	f100 8310 	bmi.w	86120 <_vfiprintf_r+0xac0>
   85b00:	0669      	lsls	r1, r5, #25
   85b02:	f140 830a 	bpl.w	8611a <_vfiprintf_r+0xaba>
   85b06:	f343 38c0 	sbfx	r8, r3, #15, #1
   85b0a:	b21e      	sxth	r6, r3
   85b0c:	4643      	mov	r3, r8
   85b0e:	e68f      	b.n	85830 <_vfiprintf_r+0x1d0>
   85b10:	f04f 0300 	mov.w	r3, #0
   85b14:	9e05      	ldr	r6, [sp, #20]
   85b16:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85b1a:	f856 4b04 	ldr.w	r4, [r6], #4
   85b1e:	2c00      	cmp	r4, #0
   85b20:	f000 83cf 	beq.w	862c2 <_vfiprintf_r+0xc62>
   85b24:	f1bb 3fff 	cmp.w	fp, #4294967295
   85b28:	f000 8341 	beq.w	861ae <_vfiprintf_r+0xb4e>
   85b2c:	465a      	mov	r2, fp
   85b2e:	2100      	movs	r1, #0
   85b30:	4620      	mov	r0, r4
   85b32:	f002 fd3d 	bl	885b0 <memchr>
   85b36:	2800      	cmp	r0, #0
   85b38:	f000 8422 	beq.w	86380 <_vfiprintf_r+0xd20>
   85b3c:	1b03      	subs	r3, r0, r4
   85b3e:	f04f 0b00 	mov.w	fp, #0
   85b42:	9605      	str	r6, [sp, #20]
   85b44:	9301      	str	r3, [sp, #4]
   85b46:	e68d      	b.n	85864 <_vfiprintf_r+0x204>
   85b48:	f04f 0300 	mov.w	r3, #0
   85b4c:	f04f 0801 	mov.w	r8, #1
   85b50:	9e05      	ldr	r6, [sp, #20]
   85b52:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85b56:	f856 3b04 	ldr.w	r3, [r6], #4
   85b5a:	ac23      	add	r4, sp, #140	; 0x8c
   85b5c:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   85b60:	9605      	str	r6, [sp, #20]
   85b62:	f8cd 8004 	str.w	r8, [sp, #4]
   85b66:	e72d      	b.n	859c4 <_vfiprintf_r+0x364>
   85b68:	f001 fdc6 	bl	876f8 <__sinit>
   85b6c:	e585      	b.n	8567a <_vfiprintf_r+0x1a>
   85b6e:	9b03      	ldr	r3, [sp, #12]
   85b70:	425b      	negs	r3, r3
   85b72:	9303      	str	r3, [sp, #12]
   85b74:	783b      	ldrb	r3, [r7, #0]
   85b76:	f045 0504 	orr.w	r5, r5, #4
   85b7a:	e5ca      	b.n	85712 <_vfiprintf_r+0xb2>
   85b7c:	783b      	ldrb	r3, [r7, #0]
   85b7e:	2b6c      	cmp	r3, #108	; 0x6c
   85b80:	bf03      	ittte	eq
   85b82:	787b      	ldrbeq	r3, [r7, #1]
   85b84:	f045 0520 	orreq.w	r5, r5, #32
   85b88:	3701      	addeq	r7, #1
   85b8a:	f045 0510 	orrne.w	r5, r5, #16
   85b8e:	e5c0      	b.n	85712 <_vfiprintf_r+0xb2>
   85b90:	783b      	ldrb	r3, [r7, #0]
   85b92:	2b68      	cmp	r3, #104	; 0x68
   85b94:	bf03      	ittte	eq
   85b96:	787b      	ldrbeq	r3, [r7, #1]
   85b98:	f445 7500 	orreq.w	r5, r5, #512	; 0x200
   85b9c:	3701      	addeq	r7, #1
   85b9e:	f045 0540 	orrne.w	r5, r5, #64	; 0x40
   85ba2:	e5b6      	b.n	85712 <_vfiprintf_r+0xb2>
   85ba4:	f045 0a10 	orr.w	sl, r5, #16
   85ba8:	f01a 0820 	ands.w	r8, sl, #32
   85bac:	f000 827e 	beq.w	860ac <_vfiprintf_r+0xa4c>
   85bb0:	9e05      	ldr	r6, [sp, #20]
   85bb2:	2301      	movs	r3, #1
   85bb4:	3607      	adds	r6, #7
   85bb6:	f026 0607 	bic.w	r6, r6, #7
   85bba:	4632      	mov	r2, r6
   85bbc:	f8d6 8004 	ldr.w	r8, [r6, #4]
   85bc0:	f852 6b08 	ldr.w	r6, [r2], #8
   85bc4:	9205      	str	r2, [sp, #20]
   85bc6:	e690      	b.n	858ea <_vfiprintf_r+0x28a>
   85bc8:	783b      	ldrb	r3, [r7, #0]
   85bca:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
   85bce:	e5a0      	b.n	85712 <_vfiprintf_r+0xb2>
   85bd0:	2230      	movs	r2, #48	; 0x30
   85bd2:	f88d 203c 	strb.w	r2, [sp, #60]	; 0x3c
   85bd6:	2278      	movs	r2, #120	; 0x78
   85bd8:	9b05      	ldr	r3, [sp, #20]
   85bda:	f88d 203d 	strb.w	r2, [sp, #61]	; 0x3d
   85bde:	f853 6b04 	ldr.w	r6, [r3], #4
   85be2:	4abe      	ldr	r2, [pc, #760]	; (85edc <_vfiprintf_r+0x87c>)
   85be4:	9305      	str	r3, [sp, #20]
   85be6:	f04f 0800 	mov.w	r8, #0
   85bea:	2302      	movs	r3, #2
   85bec:	f045 0a02 	orr.w	sl, r5, #2
   85bf0:	9209      	str	r2, [sp, #36]	; 0x24
   85bf2:	e67a      	b.n	858ea <_vfiprintf_r+0x28a>
   85bf4:	06ae      	lsls	r6, r5, #26
   85bf6:	f100 82a4 	bmi.w	86142 <_vfiprintf_r+0xae2>
   85bfa:	06ec      	lsls	r4, r5, #27
   85bfc:	f100 8359 	bmi.w	862b2 <_vfiprintf_r+0xc52>
   85c00:	0668      	lsls	r0, r5, #25
   85c02:	f100 83b0 	bmi.w	86366 <_vfiprintf_r+0xd06>
   85c06:	05a9      	lsls	r1, r5, #22
   85c08:	f140 8353 	bpl.w	862b2 <_vfiprintf_r+0xc52>
   85c0c:	9e05      	ldr	r6, [sp, #20]
   85c0e:	9a04      	ldr	r2, [sp, #16]
   85c10:	f856 3b04 	ldr.w	r3, [r6], #4
   85c14:	701a      	strb	r2, [r3, #0]
   85c16:	9605      	str	r6, [sp, #20]
   85c18:	e55b      	b.n	856d2 <_vfiprintf_r+0x72>
   85c1a:	9c06      	ldr	r4, [sp, #24]
   85c1c:	4620      	mov	r0, r4
   85c1e:	f002 f989 	bl	87f34 <_localeconv_r>
   85c22:	6843      	ldr	r3, [r0, #4]
   85c24:	4618      	mov	r0, r3
   85c26:	930b      	str	r3, [sp, #44]	; 0x2c
   85c28:	f7fd ff2a 	bl	83a80 <strlen>
   85c2c:	4603      	mov	r3, r0
   85c2e:	4620      	mov	r0, r4
   85c30:	930c      	str	r3, [sp, #48]	; 0x30
   85c32:	461c      	mov	r4, r3
   85c34:	f002 f97e 	bl	87f34 <_localeconv_r>
   85c38:	6883      	ldr	r3, [r0, #8]
   85c3a:	930a      	str	r3, [sp, #40]	; 0x28
   85c3c:	2c00      	cmp	r4, #0
   85c3e:	f43f ade2 	beq.w	85806 <_vfiprintf_r+0x1a6>
   85c42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85c44:	2b00      	cmp	r3, #0
   85c46:	f43f adde 	beq.w	85806 <_vfiprintf_r+0x1a6>
   85c4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85c4c:	781b      	ldrb	r3, [r3, #0]
   85c4e:	2b00      	cmp	r3, #0
   85c50:	f43f add9 	beq.w	85806 <_vfiprintf_r+0x1a6>
   85c54:	783b      	ldrb	r3, [r7, #0]
   85c56:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
   85c5a:	e55a      	b.n	85712 <_vfiprintf_r+0xb2>
   85c5c:	783b      	ldrb	r3, [r7, #0]
   85c5e:	f045 0501 	orr.w	r5, r5, #1
   85c62:	e556      	b.n	85712 <_vfiprintf_r+0xb2>
   85c64:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   85c68:	2b00      	cmp	r3, #0
   85c6a:	f47f adcc 	bne.w	85806 <_vfiprintf_r+0x1a6>
   85c6e:	2320      	movs	r3, #32
   85c70:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85c74:	783b      	ldrb	r3, [r7, #0]
   85c76:	e54c      	b.n	85712 <_vfiprintf_r+0xb2>
   85c78:	783b      	ldrb	r3, [r7, #0]
   85c7a:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   85c7e:	e548      	b.n	85712 <_vfiprintf_r+0xb2>
   85c80:	4639      	mov	r1, r7
   85c82:	f811 3b01 	ldrb.w	r3, [r1], #1
   85c86:	2b2a      	cmp	r3, #42	; 0x2a
   85c88:	f000 83a6 	beq.w	863d8 <_vfiprintf_r+0xd78>
   85c8c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   85c90:	2a09      	cmp	r2, #9
   85c92:	460f      	mov	r7, r1
   85c94:	f04f 0b00 	mov.w	fp, #0
   85c98:	f63f ad3c 	bhi.w	85714 <_vfiprintf_r+0xb4>
   85c9c:	f817 3b01 	ldrb.w	r3, [r7], #1
   85ca0:	eb0b 0b8b 	add.w	fp, fp, fp, lsl #2
   85ca4:	eb02 0b4b 	add.w	fp, r2, fp, lsl #1
   85ca8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   85cac:	2a09      	cmp	r2, #9
   85cae:	d9f5      	bls.n	85c9c <_vfiprintf_r+0x63c>
   85cb0:	e530      	b.n	85714 <_vfiprintf_r+0xb4>
   85cb2:	46aa      	mov	sl, r5
   85cb4:	2b01      	cmp	r3, #1
   85cb6:	f43f adc8 	beq.w	8584a <_vfiprintf_r+0x1ea>
   85cba:	2b02      	cmp	r3, #2
   85cbc:	ac3c      	add	r4, sp, #240	; 0xf0
   85cbe:	d112      	bne.n	85ce6 <_vfiprintf_r+0x686>
   85cc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   85cc2:	f006 030f 	and.w	r3, r6, #15
   85cc6:	5cd3      	ldrb	r3, [r2, r3]
   85cc8:	0936      	lsrs	r6, r6, #4
   85cca:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
   85cce:	ea4f 1818 	mov.w	r8, r8, lsr #4
   85cd2:	f804 3d01 	strb.w	r3, [r4, #-1]!
   85cd6:	ea56 0308 	orrs.w	r3, r6, r8
   85cda:	d1f2      	bne.n	85cc2 <_vfiprintf_r+0x662>
   85cdc:	ab3c      	add	r3, sp, #240	; 0xf0
   85cde:	1b1b      	subs	r3, r3, r4
   85ce0:	4655      	mov	r5, sl
   85ce2:	9301      	str	r3, [sp, #4]
   85ce4:	e5be      	b.n	85864 <_vfiprintf_r+0x204>
   85ce6:	f006 0307 	and.w	r3, r6, #7
   85cea:	08f6      	lsrs	r6, r6, #3
   85cec:	ea46 7648 	orr.w	r6, r6, r8, lsl #29
   85cf0:	ea4f 08d8 	mov.w	r8, r8, lsr #3
   85cf4:	3330      	adds	r3, #48	; 0x30
   85cf6:	ea56 0108 	orrs.w	r1, r6, r8
   85cfa:	4622      	mov	r2, r4
   85cfc:	f804 3d01 	strb.w	r3, [r4, #-1]!
   85d00:	d1f1      	bne.n	85ce6 <_vfiprintf_r+0x686>
   85d02:	f01a 0f01 	tst.w	sl, #1
   85d06:	d0e9      	beq.n	85cdc <_vfiprintf_r+0x67c>
   85d08:	2b30      	cmp	r3, #48	; 0x30
   85d0a:	d0e7      	beq.n	85cdc <_vfiprintf_r+0x67c>
   85d0c:	2330      	movs	r3, #48	; 0x30
   85d0e:	3a02      	subs	r2, #2
   85d10:	f804 3c01 	strb.w	r3, [r4, #-1]
   85d14:	ab3c      	add	r3, sp, #240	; 0xf0
   85d16:	1a9b      	subs	r3, r3, r2
   85d18:	4655      	mov	r5, sl
   85d1a:	4614      	mov	r4, r2
   85d1c:	9301      	str	r3, [sp, #4]
   85d1e:	e5a1      	b.n	85864 <_vfiprintf_r+0x204>
   85d20:	2301      	movs	r3, #1
   85d22:	9a01      	ldr	r2, [sp, #4]
   85d24:	9413      	str	r4, [sp, #76]	; 0x4c
   85d26:	9311      	str	r3, [sp, #68]	; 0x44
   85d28:	9214      	str	r2, [sp, #80]	; 0x50
   85d2a:	9212      	str	r2, [sp, #72]	; 0x48
   85d2c:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85d30:	f109 0908 	add.w	r9, r9, #8
   85d34:	e6ad      	b.n	85a92 <_vfiprintf_r+0x432>
   85d36:	9b03      	ldr	r3, [sp, #12]
   85d38:	eba3 0608 	sub.w	r6, r3, r8
   85d3c:	2e00      	cmp	r6, #0
   85d3e:	f77f ae89 	ble.w	85a54 <_vfiprintf_r+0x3f4>
   85d42:	2e10      	cmp	r6, #16
   85d44:	f8df a198 	ldr.w	sl, [pc, #408]	; 85ee0 <_vfiprintf_r+0x880>
   85d48:	dd38      	ble.n	85dbc <_vfiprintf_r+0x75c>
   85d4a:	4653      	mov	r3, sl
   85d4c:	46cc      	mov	ip, r9
   85d4e:	46ba      	mov	sl, r7
   85d50:	46c1      	mov	r9, r8
   85d52:	9407      	str	r4, [sp, #28]
   85d54:	46a8      	mov	r8, r5
   85d56:	461f      	mov	r7, r3
   85d58:	9c06      	ldr	r4, [sp, #24]
   85d5a:	9d02      	ldr	r5, [sp, #8]
   85d5c:	e007      	b.n	85d6e <_vfiprintf_r+0x70e>
   85d5e:	f101 0e02 	add.w	lr, r1, #2
   85d62:	4601      	mov	r1, r0
   85d64:	f10c 0c08 	add.w	ip, ip, #8
   85d68:	3e10      	subs	r6, #16
   85d6a:	2e10      	cmp	r6, #16
   85d6c:	dd1e      	ble.n	85dac <_vfiprintf_r+0x74c>
   85d6e:	2310      	movs	r3, #16
   85d70:	1c48      	adds	r0, r1, #1
   85d72:	3210      	adds	r2, #16
   85d74:	2807      	cmp	r0, #7
   85d76:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85d7a:	f8cc 7000 	str.w	r7, [ip]
   85d7e:	f8cc 3004 	str.w	r3, [ip, #4]
   85d82:	ddec      	ble.n	85d5e <_vfiprintf_r+0x6fe>
   85d84:	2a00      	cmp	r2, #0
   85d86:	f000 8092 	beq.w	85eae <_vfiprintf_r+0x84e>
   85d8a:	4629      	mov	r1, r5
   85d8c:	4620      	mov	r0, r4
   85d8e:	aa10      	add	r2, sp, #64	; 0x40
   85d90:	f7ff fc2a 	bl	855e8 <__sprint_r.part.0>
   85d94:	2800      	cmp	r0, #0
   85d96:	f47f adec 	bne.w	85972 <_vfiprintf_r+0x312>
   85d9a:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85d9e:	3e10      	subs	r6, #16
   85da0:	2e10      	cmp	r6, #16
   85da2:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85da6:	f101 0e01 	add.w	lr, r1, #1
   85daa:	dce0      	bgt.n	85d6e <_vfiprintf_r+0x70e>
   85dac:	463b      	mov	r3, r7
   85dae:	4645      	mov	r5, r8
   85db0:	4657      	mov	r7, sl
   85db2:	46c8      	mov	r8, r9
   85db4:	4670      	mov	r0, lr
   85db6:	46e1      	mov	r9, ip
   85db8:	469a      	mov	sl, r3
   85dba:	9c07      	ldr	r4, [sp, #28]
   85dbc:	4432      	add	r2, r6
   85dbe:	2807      	cmp	r0, #7
   85dc0:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85dc4:	f8c9 a000 	str.w	sl, [r9]
   85dc8:	f8c9 6004 	str.w	r6, [r9, #4]
   85dcc:	f340 8196 	ble.w	860fc <_vfiprintf_r+0xa9c>
   85dd0:	2a00      	cmp	r2, #0
   85dd2:	f000 829a 	beq.w	8630a <_vfiprintf_r+0xcaa>
   85dd6:	9902      	ldr	r1, [sp, #8]
   85dd8:	9806      	ldr	r0, [sp, #24]
   85dda:	aa10      	add	r2, sp, #64	; 0x40
   85ddc:	f7ff fc04 	bl	855e8 <__sprint_r.part.0>
   85de0:	2800      	cmp	r0, #0
   85de2:	f47f adc6 	bne.w	85972 <_vfiprintf_r+0x312>
   85de6:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85dea:	9b01      	ldr	r3, [sp, #4]
   85dec:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85df0:	ebab 0603 	sub.w	r6, fp, r3
   85df4:	2e00      	cmp	r6, #0
   85df6:	f101 0001 	add.w	r0, r1, #1
   85dfa:	f77f ae31 	ble.w	85a60 <_vfiprintf_r+0x400>
   85dfe:	2e10      	cmp	r6, #16
   85e00:	f340 826b 	ble.w	862da <_vfiprintf_r+0xc7a>
   85e04:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 85ee0 <_vfiprintf_r+0x880>
   85e08:	46cc      	mov	ip, r9
   85e0a:	4653      	mov	r3, sl
   85e0c:	46c1      	mov	r9, r8
   85e0e:	46ba      	mov	sl, r7
   85e10:	46a8      	mov	r8, r5
   85e12:	9407      	str	r4, [sp, #28]
   85e14:	f04f 0b10 	mov.w	fp, #16
   85e18:	461f      	mov	r7, r3
   85e1a:	9c06      	ldr	r4, [sp, #24]
   85e1c:	9d02      	ldr	r5, [sp, #8]
   85e1e:	e007      	b.n	85e30 <_vfiprintf_r+0x7d0>
   85e20:	f101 0e02 	add.w	lr, r1, #2
   85e24:	4601      	mov	r1, r0
   85e26:	f10c 0c08 	add.w	ip, ip, #8
   85e2a:	3e10      	subs	r6, #16
   85e2c:	2e10      	cmp	r6, #16
   85e2e:	dd19      	ble.n	85e64 <_vfiprintf_r+0x804>
   85e30:	1c48      	adds	r0, r1, #1
   85e32:	3210      	adds	r2, #16
   85e34:	2807      	cmp	r0, #7
   85e36:	e9cc 7b00 	strd	r7, fp, [ip]
   85e3a:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85e3e:	ddef      	ble.n	85e20 <_vfiprintf_r+0x7c0>
   85e40:	b332      	cbz	r2, 85e90 <_vfiprintf_r+0x830>
   85e42:	4629      	mov	r1, r5
   85e44:	4620      	mov	r0, r4
   85e46:	aa10      	add	r2, sp, #64	; 0x40
   85e48:	f7ff fbce 	bl	855e8 <__sprint_r.part.0>
   85e4c:	2800      	cmp	r0, #0
   85e4e:	f47f ad90 	bne.w	85972 <_vfiprintf_r+0x312>
   85e52:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85e56:	3e10      	subs	r6, #16
   85e58:	2e10      	cmp	r6, #16
   85e5a:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85e5e:	f101 0e01 	add.w	lr, r1, #1
   85e62:	dce5      	bgt.n	85e30 <_vfiprintf_r+0x7d0>
   85e64:	463b      	mov	r3, r7
   85e66:	4645      	mov	r5, r8
   85e68:	4657      	mov	r7, sl
   85e6a:	46c8      	mov	r8, r9
   85e6c:	4670      	mov	r0, lr
   85e6e:	46e1      	mov	r9, ip
   85e70:	469a      	mov	sl, r3
   85e72:	9c07      	ldr	r4, [sp, #28]
   85e74:	4432      	add	r2, r6
   85e76:	2807      	cmp	r0, #7
   85e78:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85e7c:	f8c9 a000 	str.w	sl, [r9]
   85e80:	f8c9 6004 	str.w	r6, [r9, #4]
   85e84:	f300 80e9 	bgt.w	8605a <_vfiprintf_r+0x9fa>
   85e88:	f109 0908 	add.w	r9, r9, #8
   85e8c:	3001      	adds	r0, #1
   85e8e:	e5e7      	b.n	85a60 <_vfiprintf_r+0x400>
   85e90:	f04f 0e01 	mov.w	lr, #1
   85e94:	4611      	mov	r1, r2
   85e96:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85e9a:	e7c6      	b.n	85e2a <_vfiprintf_r+0x7ca>
   85e9c:	9902      	ldr	r1, [sp, #8]
   85e9e:	9806      	ldr	r0, [sp, #24]
   85ea0:	aa10      	add	r2, sp, #64	; 0x40
   85ea2:	f7ff fba1 	bl	855e8 <__sprint_r.part.0>
   85ea6:	2800      	cmp	r0, #0
   85ea8:	f43f ae05 	beq.w	85ab6 <_vfiprintf_r+0x456>
   85eac:	e561      	b.n	85972 <_vfiprintf_r+0x312>
   85eae:	f04f 0e01 	mov.w	lr, #1
   85eb2:	4611      	mov	r1, r2
   85eb4:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85eb8:	e756      	b.n	85d68 <_vfiprintf_r+0x708>
   85eba:	2a00      	cmp	r2, #0
   85ebc:	f000 80de 	beq.w	8607c <_vfiprintf_r+0xa1c>
   85ec0:	9902      	ldr	r1, [sp, #8]
   85ec2:	9806      	ldr	r0, [sp, #24]
   85ec4:	aa10      	add	r2, sp, #64	; 0x40
   85ec6:	f7ff fb8f 	bl	855e8 <__sprint_r.part.0>
   85eca:	2800      	cmp	r0, #0
   85ecc:	f47f ad51 	bne.w	85972 <_vfiprintf_r+0x312>
   85ed0:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85ed4:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85ed8:	1c48      	adds	r0, r1, #1
   85eda:	e59a      	b.n	85a12 <_vfiprintf_r+0x3b2>
   85edc:	0008a620 	.word	0x0008a620
   85ee0:	0008a684 	.word	0x0008a684
   85ee4:	2202      	movs	r2, #2
   85ee6:	2001      	movs	r0, #1
   85ee8:	ab0f      	add	r3, sp, #60	; 0x3c
   85eea:	9313      	str	r3, [sp, #76]	; 0x4c
   85eec:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85ef0:	9214      	str	r2, [sp, #80]	; 0x50
   85ef2:	4601      	mov	r1, r0
   85ef4:	f109 0908 	add.w	r9, r9, #8
   85ef8:	1c48      	adds	r0, r1, #1
   85efa:	e5a7      	b.n	85a4c <_vfiprintf_r+0x3ec>
   85efc:	2e10      	cmp	r6, #16
   85efe:	f340 8245 	ble.w	8638c <_vfiprintf_r+0xd2c>
   85f02:	e9dd 3211 	ldrd	r3, r2, [sp, #68]	; 0x44
   85f06:	f8df a2f0 	ldr.w	sl, [pc, #752]	; 861f8 <_vfiprintf_r+0xb98>
   85f0a:	4619      	mov	r1, r3
   85f0c:	4653      	mov	r3, sl
   85f0e:	46cc      	mov	ip, r9
   85f10:	46ba      	mov	sl, r7
   85f12:	46c1      	mov	r9, r8
   85f14:	940d      	str	r4, [sp, #52]	; 0x34
   85f16:	46a8      	mov	r8, r5
   85f18:	461f      	mov	r7, r3
   85f1a:	9c06      	ldr	r4, [sp, #24]
   85f1c:	9d02      	ldr	r5, [sp, #8]
   85f1e:	e007      	b.n	85f30 <_vfiprintf_r+0x8d0>
   85f20:	f101 0e02 	add.w	lr, r1, #2
   85f24:	4601      	mov	r1, r0
   85f26:	f10c 0c08 	add.w	ip, ip, #8
   85f2a:	3e10      	subs	r6, #16
   85f2c:	2e10      	cmp	r6, #16
   85f2e:	dd1c      	ble.n	85f6a <_vfiprintf_r+0x90a>
   85f30:	2310      	movs	r3, #16
   85f32:	1c48      	adds	r0, r1, #1
   85f34:	3210      	adds	r2, #16
   85f36:	2807      	cmp	r0, #7
   85f38:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85f3c:	f8cc 7000 	str.w	r7, [ip]
   85f40:	f8cc 3004 	str.w	r3, [ip, #4]
   85f44:	ddec      	ble.n	85f20 <_vfiprintf_r+0x8c0>
   85f46:	b332      	cbz	r2, 85f96 <_vfiprintf_r+0x936>
   85f48:	4629      	mov	r1, r5
   85f4a:	4620      	mov	r0, r4
   85f4c:	aa10      	add	r2, sp, #64	; 0x40
   85f4e:	f7ff fb4b 	bl	855e8 <__sprint_r.part.0>
   85f52:	2800      	cmp	r0, #0
   85f54:	f47f ad0d 	bne.w	85972 <_vfiprintf_r+0x312>
   85f58:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85f5c:	3e10      	subs	r6, #16
   85f5e:	2e10      	cmp	r6, #16
   85f60:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85f64:	f101 0e01 	add.w	lr, r1, #1
   85f68:	dce2      	bgt.n	85f30 <_vfiprintf_r+0x8d0>
   85f6a:	463b      	mov	r3, r7
   85f6c:	4645      	mov	r5, r8
   85f6e:	4657      	mov	r7, sl
   85f70:	46c8      	mov	r8, r9
   85f72:	4671      	mov	r1, lr
   85f74:	46e1      	mov	r9, ip
   85f76:	469a      	mov	sl, r3
   85f78:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   85f7a:	4432      	add	r2, r6
   85f7c:	2907      	cmp	r1, #7
   85f7e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
   85f82:	f8c9 a000 	str.w	sl, [r9]
   85f86:	f8c9 6004 	str.w	r6, [r9, #4]
   85f8a:	f300 80a7 	bgt.w	860dc <_vfiprintf_r+0xa7c>
   85f8e:	f109 0908 	add.w	r9, r9, #8
   85f92:	1c48      	adds	r0, r1, #1
   85f94:	e52b      	b.n	859ee <_vfiprintf_r+0x38e>
   85f96:	4611      	mov	r1, r2
   85f98:	f04f 0e01 	mov.w	lr, #1
   85f9c:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85fa0:	e7c3      	b.n	85f2a <_vfiprintf_r+0x8ca>
   85fa2:	076c      	lsls	r4, r5, #29
   85fa4:	9211      	str	r2, [sp, #68]	; 0x44
   85fa6:	d550      	bpl.n	8604a <_vfiprintf_r+0x9ea>
   85fa8:	9b03      	ldr	r3, [sp, #12]
   85faa:	eba3 0408 	sub.w	r4, r3, r8
   85fae:	2c00      	cmp	r4, #0
   85fb0:	dd4b      	ble.n	8604a <_vfiprintf_r+0x9ea>
   85fb2:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85fb6:	2c10      	cmp	r4, #16
   85fb8:	f340 81f8 	ble.w	863ac <_vfiprintf_r+0xd4c>
   85fbc:	f8df a238 	ldr.w	sl, [pc, #568]	; 861f8 <_vfiprintf_r+0xb98>
   85fc0:	2510      	movs	r5, #16
   85fc2:	4653      	mov	r3, sl
   85fc4:	9911      	ldr	r1, [sp, #68]	; 0x44
   85fc6:	46ba      	mov	sl, r7
   85fc8:	9e06      	ldr	r6, [sp, #24]
   85fca:	461f      	mov	r7, r3
   85fcc:	f8dd b008 	ldr.w	fp, [sp, #8]
   85fd0:	e006      	b.n	85fe0 <_vfiprintf_r+0x980>
   85fd2:	1c88      	adds	r0, r1, #2
   85fd4:	4619      	mov	r1, r3
   85fd6:	f109 0908 	add.w	r9, r9, #8
   85fda:	3c10      	subs	r4, #16
   85fdc:	2c10      	cmp	r4, #16
   85fde:	dd19      	ble.n	86014 <_vfiprintf_r+0x9b4>
   85fe0:	1c4b      	adds	r3, r1, #1
   85fe2:	3210      	adds	r2, #16
   85fe4:	2b07      	cmp	r3, #7
   85fe6:	e9c9 7500 	strd	r7, r5, [r9]
   85fea:	e9cd 3211 	strd	r3, r2, [sp, #68]	; 0x44
   85fee:	ddf0      	ble.n	85fd2 <_vfiprintf_r+0x972>
   85ff0:	b332      	cbz	r2, 86040 <_vfiprintf_r+0x9e0>
   85ff2:	4659      	mov	r1, fp
   85ff4:	4630      	mov	r0, r6
   85ff6:	aa10      	add	r2, sp, #64	; 0x40
   85ff8:	f7ff faf6 	bl	855e8 <__sprint_r.part.0>
   85ffc:	2800      	cmp	r0, #0
   85ffe:	f47f acb8 	bne.w	85972 <_vfiprintf_r+0x312>
   86002:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   86006:	3c10      	subs	r4, #16
   86008:	2c10      	cmp	r4, #16
   8600a:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   8600e:	f101 0001 	add.w	r0, r1, #1
   86012:	dce5      	bgt.n	85fe0 <_vfiprintf_r+0x980>
   86014:	463b      	mov	r3, r7
   86016:	4657      	mov	r7, sl
   86018:	469a      	mov	sl, r3
   8601a:	4422      	add	r2, r4
   8601c:	2807      	cmp	r0, #7
   8601e:	e9c9 a400 	strd	sl, r4, [r9]
   86022:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   86026:	f77f ad3c 	ble.w	85aa2 <_vfiprintf_r+0x442>
   8602a:	b172      	cbz	r2, 8604a <_vfiprintf_r+0x9ea>
   8602c:	9902      	ldr	r1, [sp, #8]
   8602e:	9806      	ldr	r0, [sp, #24]
   86030:	aa10      	add	r2, sp, #64	; 0x40
   86032:	f7ff fad9 	bl	855e8 <__sprint_r.part.0>
   86036:	2800      	cmp	r0, #0
   86038:	f47f ac9b 	bne.w	85972 <_vfiprintf_r+0x312>
   8603c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8603e:	e530      	b.n	85aa2 <_vfiprintf_r+0x442>
   86040:	2001      	movs	r0, #1
   86042:	4611      	mov	r1, r2
   86044:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86048:	e7c7      	b.n	85fda <_vfiprintf_r+0x97a>
   8604a:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
   8604e:	4542      	cmp	r2, r8
   86050:	bfac      	ite	ge
   86052:	189b      	addge	r3, r3, r2
   86054:	4443      	addlt	r3, r8
   86056:	9304      	str	r3, [sp, #16]
   86058:	e52d      	b.n	85ab6 <_vfiprintf_r+0x456>
   8605a:	2a00      	cmp	r2, #0
   8605c:	f43f ae60 	beq.w	85d20 <_vfiprintf_r+0x6c0>
   86060:	9902      	ldr	r1, [sp, #8]
   86062:	9806      	ldr	r0, [sp, #24]
   86064:	aa10      	add	r2, sp, #64	; 0x40
   86066:	f7ff fabf 	bl	855e8 <__sprint_r.part.0>
   8606a:	2800      	cmp	r0, #0
   8606c:	f47f ac81 	bne.w	85972 <_vfiprintf_r+0x312>
   86070:	9811      	ldr	r0, [sp, #68]	; 0x44
   86072:	9a12      	ldr	r2, [sp, #72]	; 0x48
   86074:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86078:	3001      	adds	r0, #1
   8607a:	e4f1      	b.n	85a60 <_vfiprintf_r+0x400>
   8607c:	9b07      	ldr	r3, [sp, #28]
   8607e:	2b00      	cmp	r3, #0
   86080:	d169      	bne.n	86156 <_vfiprintf_r+0xaf6>
   86082:	2001      	movs	r0, #1
   86084:	4611      	mov	r1, r2
   86086:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   8608a:	e4df      	b.n	85a4c <_vfiprintf_r+0x3ec>
   8608c:	9211      	str	r2, [sp, #68]	; 0x44
   8608e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86092:	e458      	b.n	85946 <_vfiprintf_r+0x2e6>
   86094:	f1bb 0f00 	cmp.w	fp, #0
   86098:	f47f abdc 	bne.w	85854 <_vfiprintf_r+0x1f4>
   8609c:	4655      	mov	r5, sl
   8609e:	f04f 0b00 	mov.w	fp, #0
   860a2:	ac3c      	add	r4, sp, #240	; 0xf0
   860a4:	f8cd b004 	str.w	fp, [sp, #4]
   860a8:	f7ff bbdc 	b.w	85864 <_vfiprintf_r+0x204>
   860ac:	f01a 0310 	ands.w	r3, sl, #16
   860b0:	d140      	bne.n	86134 <_vfiprintf_r+0xad4>
   860b2:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
   860b6:	d039      	beq.n	8612c <_vfiprintf_r+0xacc>
   860b8:	9e05      	ldr	r6, [sp, #20]
   860ba:	4698      	mov	r8, r3
   860bc:	f856 2b04 	ldr.w	r2, [r6], #4
   860c0:	2301      	movs	r3, #1
   860c2:	9605      	str	r6, [sp, #20]
   860c4:	b296      	uxth	r6, r2
   860c6:	e410      	b.n	858ea <_vfiprintf_r+0x28a>
   860c8:	232d      	movs	r3, #45	; 0x2d
   860ca:	4276      	negs	r6, r6
   860cc:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   860d0:	46aa      	mov	sl, r5
   860d2:	f04f 0301 	mov.w	r3, #1
   860d6:	eb68 0848 	sbc.w	r8, r8, r8, lsl #1
   860da:	e40a      	b.n	858f2 <_vfiprintf_r+0x292>
   860dc:	2a00      	cmp	r2, #0
   860de:	d06f      	beq.n	861c0 <_vfiprintf_r+0xb60>
   860e0:	9902      	ldr	r1, [sp, #8]
   860e2:	9806      	ldr	r0, [sp, #24]
   860e4:	aa10      	add	r2, sp, #64	; 0x40
   860e6:	f7ff fa7f 	bl	855e8 <__sprint_r.part.0>
   860ea:	2800      	cmp	r0, #0
   860ec:	f47f ac41 	bne.w	85972 <_vfiprintf_r+0x312>
   860f0:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   860f4:	e478      	b.n	859e8 <_vfiprintf_r+0x388>
   860f6:	ac3c      	add	r4, sp, #240	; 0xf0
   860f8:	f7ff bbb4 	b.w	85864 <_vfiprintf_r+0x204>
   860fc:	4601      	mov	r1, r0
   860fe:	f109 0908 	add.w	r9, r9, #8
   86102:	3001      	adds	r0, #1
   86104:	e4a6      	b.n	85a54 <_vfiprintf_r+0x3f4>
   86106:	f415 7800 	ands.w	r8, r5, #512	; 0x200
   8610a:	f040 811d 	bne.w	86348 <_vfiprintf_r+0xce8>
   8610e:	9b05      	ldr	r3, [sp, #20]
   86110:	f853 6b04 	ldr.w	r6, [r3], #4
   86114:	9305      	str	r3, [sp, #20]
   86116:	f7ff bbe5 	b.w	858e4 <_vfiprintf_r+0x284>
   8611a:	05aa      	lsls	r2, r5, #22
   8611c:	f100 810e 	bmi.w	8633c <_vfiprintf_r+0xcdc>
   86120:	ea4f 78e3 	mov.w	r8, r3, asr #31
   86124:	461e      	mov	r6, r3
   86126:	4643      	mov	r3, r8
   86128:	f7ff bb82 	b.w	85830 <_vfiprintf_r+0x1d0>
   8612c:	f41a 7800 	ands.w	r8, sl, #512	; 0x200
   86130:	f040 80fb 	bne.w	8632a <_vfiprintf_r+0xcca>
   86134:	9a05      	ldr	r2, [sp, #20]
   86136:	2301      	movs	r3, #1
   86138:	f852 6b04 	ldr.w	r6, [r2], #4
   8613c:	9205      	str	r2, [sp, #20]
   8613e:	f7ff bbd4 	b.w	858ea <_vfiprintf_r+0x28a>
   86142:	e9dd 1604 	ldrd	r1, r6, [sp, #16]
   86146:	f856 2b04 	ldr.w	r2, [r6], #4
   8614a:	17cb      	asrs	r3, r1, #31
   8614c:	e9c2 1300 	strd	r1, r3, [r2]
   86150:	9605      	str	r6, [sp, #20]
   86152:	f7ff babe 	b.w	856d2 <_vfiprintf_r+0x72>
   86156:	2202      	movs	r2, #2
   86158:	ab0f      	add	r3, sp, #60	; 0x3c
   8615a:	9313      	str	r3, [sp, #76]	; 0x4c
   8615c:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86160:	9214      	str	r2, [sp, #80]	; 0x50
   86162:	e6c7      	b.n	85ef4 <_vfiprintf_r+0x894>
   86164:	4a25      	ldr	r2, [pc, #148]	; (861fc <_vfiprintf_r+0xb9c>)
   86166:	9209      	str	r2, [sp, #36]	; 0x24
   86168:	f015 0820 	ands.w	r8, r5, #32
   8616c:	d036      	beq.n	861dc <_vfiprintf_r+0xb7c>
   8616e:	9e05      	ldr	r6, [sp, #20]
   86170:	3607      	adds	r6, #7
   86172:	f026 0607 	bic.w	r6, r6, #7
   86176:	4632      	mov	r2, r6
   86178:	f8d6 8004 	ldr.w	r8, [r6, #4]
   8617c:	f852 6b08 	ldr.w	r6, [r2], #8
   86180:	9205      	str	r2, [sp, #20]
   86182:	07ea      	lsls	r2, r5, #31
   86184:	d509      	bpl.n	8619a <_vfiprintf_r+0xb3a>
   86186:	ea56 0208 	orrs.w	r2, r6, r8
   8618a:	d006      	beq.n	8619a <_vfiprintf_r+0xb3a>
   8618c:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
   86190:	2330      	movs	r3, #48	; 0x30
   86192:	f045 0502 	orr.w	r5, r5, #2
   86196:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
   8619a:	2302      	movs	r3, #2
   8619c:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
   861a0:	f7ff bba3 	b.w	858ea <_vfiprintf_r+0x28a>
   861a4:	46aa      	mov	sl, r5
   861a6:	e4ff      	b.n	85ba8 <_vfiprintf_r+0x548>
   861a8:	4a15      	ldr	r2, [pc, #84]	; (86200 <_vfiprintf_r+0xba0>)
   861aa:	9209      	str	r2, [sp, #36]	; 0x24
   861ac:	e7dc      	b.n	86168 <_vfiprintf_r+0xb08>
   861ae:	4620      	mov	r0, r4
   861b0:	9605      	str	r6, [sp, #20]
   861b2:	f7fd fc65 	bl	83a80 <strlen>
   861b6:	f04f 0b00 	mov.w	fp, #0
   861ba:	9001      	str	r0, [sp, #4]
   861bc:	f7ff bb52 	b.w	85864 <_vfiprintf_r+0x204>
   861c0:	f89d 103b 	ldrb.w	r1, [sp, #59]	; 0x3b
   861c4:	2900      	cmp	r1, #0
   861c6:	f000 80a6 	beq.w	86316 <_vfiprintf_r+0xcb6>
   861ca:	2001      	movs	r0, #1
   861cc:	f10d 023b 	add.w	r2, sp, #59	; 0x3b
   861d0:	9213      	str	r2, [sp, #76]	; 0x4c
   861d2:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   861d6:	4602      	mov	r2, r0
   861d8:	9014      	str	r0, [sp, #80]	; 0x50
   861da:	e416      	b.n	85a0a <_vfiprintf_r+0x3aa>
   861dc:	f015 0210 	ands.w	r2, r5, #16
   861e0:	d114      	bne.n	8620c <_vfiprintf_r+0xbac>
   861e2:	f015 0140 	ands.w	r1, r5, #64	; 0x40
   861e6:	d00d      	beq.n	86204 <_vfiprintf_r+0xba4>
   861e8:	9e05      	ldr	r6, [sp, #20]
   861ea:	4690      	mov	r8, r2
   861ec:	f856 2b04 	ldr.w	r2, [r6], #4
   861f0:	9605      	str	r6, [sp, #20]
   861f2:	b296      	uxth	r6, r2
   861f4:	e7c5      	b.n	86182 <_vfiprintf_r+0xb22>
   861f6:	bf00      	nop
   861f8:	0008a674 	.word	0x0008a674
   861fc:	0008a634 	.word	0x0008a634
   86200:	0008a620 	.word	0x0008a620
   86204:	f415 7800 	ands.w	r8, r5, #512	; 0x200
   86208:	f040 80a6 	bne.w	86358 <_vfiprintf_r+0xcf8>
   8620c:	9a05      	ldr	r2, [sp, #20]
   8620e:	f852 6b04 	ldr.w	r6, [r2], #4
   86212:	9205      	str	r2, [sp, #20]
   86214:	e7b5      	b.n	86182 <_vfiprintf_r+0xb22>
   86216:	2300      	movs	r3, #0
   86218:	f40a 6280 	and.w	r2, sl, #1024	; 0x400
   8621c:	f8cd b004 	str.w	fp, [sp, #4]
   86220:	f8cd a01c 	str.w	sl, [sp, #28]
   86224:	46bb      	mov	fp, r7
   86226:	f8cd 9020 	str.w	r9, [sp, #32]
   8622a:	469a      	mov	sl, r3
   8622c:	4617      	mov	r7, r2
   8622e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   86232:	ad3c      	add	r5, sp, #240	; 0xf0
   86234:	e00c      	b.n	86250 <_vfiprintf_r+0xbf0>
   86236:	2300      	movs	r3, #0
   86238:	4630      	mov	r0, r6
   8623a:	4641      	mov	r1, r8
   8623c:	220a      	movs	r2, #10
   8623e:	f004 f827 	bl	8a290 <__aeabi_uldivmod>
   86242:	2e0a      	cmp	r6, #10
   86244:	f178 0300 	sbcs.w	r3, r8, #0
   86248:	d31b      	bcc.n	86282 <_vfiprintf_r+0xc22>
   8624a:	4606      	mov	r6, r0
   8624c:	4688      	mov	r8, r1
   8624e:	4625      	mov	r5, r4
   86250:	4630      	mov	r0, r6
   86252:	4641      	mov	r1, r8
   86254:	220a      	movs	r2, #10
   86256:	2300      	movs	r3, #0
   86258:	f004 f81a 	bl	8a290 <__aeabi_uldivmod>
   8625c:	3230      	adds	r2, #48	; 0x30
   8625e:	1e6c      	subs	r4, r5, #1
   86260:	f10a 0a01 	add.w	sl, sl, #1
   86264:	f805 2c01 	strb.w	r2, [r5, #-1]
   86268:	2f00      	cmp	r7, #0
   8626a:	d0e4      	beq.n	86236 <_vfiprintf_r+0xbd6>
   8626c:	f899 3000 	ldrb.w	r3, [r9]
   86270:	4553      	cmp	r3, sl
   86272:	d1e0      	bne.n	86236 <_vfiprintf_r+0xbd6>
   86274:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
   86278:	d0dd      	beq.n	86236 <_vfiprintf_r+0xbd6>
   8627a:	2e0a      	cmp	r6, #10
   8627c:	f178 0300 	sbcs.w	r3, r8, #0
   86280:	d22e      	bcs.n	862e0 <_vfiprintf_r+0xc80>
   86282:	f8dd a01c 	ldr.w	sl, [sp, #28]
   86286:	ab3c      	add	r3, sp, #240	; 0xf0
   86288:	1b1b      	subs	r3, r3, r4
   8628a:	465f      	mov	r7, fp
   8628c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   86290:	f8dd b004 	ldr.w	fp, [sp, #4]
   86294:	4655      	mov	r5, sl
   86296:	f8dd 9020 	ldr.w	r9, [sp, #32]
   8629a:	9301      	str	r3, [sp, #4]
   8629c:	f7ff bae2 	b.w	85864 <_vfiprintf_r+0x204>
   862a0:	46aa      	mov	sl, r5
   862a2:	f7ff bad2 	b.w	8584a <_vfiprintf_r+0x1ea>
   862a6:	2b01      	cmp	r3, #1
   862a8:	46aa      	mov	sl, r5
   862aa:	f47f ad06 	bne.w	85cba <_vfiprintf_r+0x65a>
   862ae:	f7ff bad1 	b.w	85854 <_vfiprintf_r+0x1f4>
   862b2:	9e05      	ldr	r6, [sp, #20]
   862b4:	9a04      	ldr	r2, [sp, #16]
   862b6:	f856 3b04 	ldr.w	r3, [r6], #4
   862ba:	601a      	str	r2, [r3, #0]
   862bc:	9605      	str	r6, [sp, #20]
   862be:	f7ff ba08 	b.w	856d2 <_vfiprintf_r+0x72>
   862c2:	f1bb 0f06 	cmp.w	fp, #6
   862c6:	46d8      	mov	r8, fp
   862c8:	bf28      	it	cs
   862ca:	f04f 0806 	movcs.w	r8, #6
   862ce:	4c47      	ldr	r4, [pc, #284]	; (863ec <_vfiprintf_r+0xd8c>)
   862d0:	f8cd 8004 	str.w	r8, [sp, #4]
   862d4:	9605      	str	r6, [sp, #20]
   862d6:	f7ff bb75 	b.w	859c4 <_vfiprintf_r+0x364>
   862da:	f8df a114 	ldr.w	sl, [pc, #276]	; 863f0 <_vfiprintf_r+0xd90>
   862de:	e5c9      	b.n	85e74 <_vfiprintf_r+0x814>
   862e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   862e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   862e4:	1ae4      	subs	r4, r4, r3
   862e6:	461a      	mov	r2, r3
   862e8:	4620      	mov	r0, r4
   862ea:	f7fd fbf7 	bl	83adc <strncpy>
   862ee:	f899 3001 	ldrb.w	r3, [r9, #1]
   862f2:	b10b      	cbz	r3, 862f8 <_vfiprintf_r+0xc98>
   862f4:	f109 0901 	add.w	r9, r9, #1
   862f8:	4630      	mov	r0, r6
   862fa:	4641      	mov	r1, r8
   862fc:	220a      	movs	r2, #10
   862fe:	2300      	movs	r3, #0
   86300:	f04f 0a00 	mov.w	sl, #0
   86304:	f003 ffc4 	bl	8a290 <__aeabi_uldivmod>
   86308:	e79f      	b.n	8624a <_vfiprintf_r+0xbea>
   8630a:	2001      	movs	r0, #1
   8630c:	4611      	mov	r1, r2
   8630e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86312:	f7ff bb9f 	b.w	85a54 <_vfiprintf_r+0x3f4>
   86316:	9b07      	ldr	r3, [sp, #28]
   86318:	2b00      	cmp	r3, #0
   8631a:	f47f ade3 	bne.w	85ee4 <_vfiprintf_r+0x884>
   8631e:	4611      	mov	r1, r2
   86320:	2001      	movs	r0, #1
   86322:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86326:	f7ff bb95 	b.w	85a54 <_vfiprintf_r+0x3f4>
   8632a:	9e05      	ldr	r6, [sp, #20]
   8632c:	4690      	mov	r8, r2
   8632e:	f856 2b04 	ldr.w	r2, [r6], #4
   86332:	2301      	movs	r3, #1
   86334:	9605      	str	r6, [sp, #20]
   86336:	b2d6      	uxtb	r6, r2
   86338:	f7ff bad7 	b.w	858ea <_vfiprintf_r+0x28a>
   8633c:	f343 18c0 	sbfx	r8, r3, #7, #1
   86340:	b25e      	sxtb	r6, r3
   86342:	4643      	mov	r3, r8
   86344:	f7ff ba74 	b.w	85830 <_vfiprintf_r+0x1d0>
   86348:	9e05      	ldr	r6, [sp, #20]
   8634a:	4690      	mov	r8, r2
   8634c:	f856 3b04 	ldr.w	r3, [r6], #4
   86350:	9605      	str	r6, [sp, #20]
   86352:	b2de      	uxtb	r6, r3
   86354:	f7ff bac6 	b.w	858e4 <_vfiprintf_r+0x284>
   86358:	9e05      	ldr	r6, [sp, #20]
   8635a:	4688      	mov	r8, r1
   8635c:	f856 2b04 	ldr.w	r2, [r6], #4
   86360:	9605      	str	r6, [sp, #20]
   86362:	b2d6      	uxtb	r6, r2
   86364:	e70d      	b.n	86182 <_vfiprintf_r+0xb22>
   86366:	9e05      	ldr	r6, [sp, #20]
   86368:	9a04      	ldr	r2, [sp, #16]
   8636a:	f856 3b04 	ldr.w	r3, [r6], #4
   8636e:	801a      	strh	r2, [r3, #0]
   86370:	9605      	str	r6, [sp, #20]
   86372:	f7ff b9ae 	b.w	856d2 <_vfiprintf_r+0x72>
   86376:	6d88      	ldr	r0, [r1, #88]	; 0x58
   86378:	f001 fde6 	bl	87f48 <__retarget_lock_release_recursive>
   8637c:	f7ff ba99 	b.w	858b2 <_vfiprintf_r+0x252>
   86380:	f8cd b004 	str.w	fp, [sp, #4]
   86384:	9605      	str	r6, [sp, #20]
   86386:	4683      	mov	fp, r0
   86388:	f7ff ba6c 	b.w	85864 <_vfiprintf_r+0x204>
   8638c:	9911      	ldr	r1, [sp, #68]	; 0x44
   8638e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   86390:	f8df a060 	ldr.w	sl, [pc, #96]	; 863f4 <_vfiprintf_r+0xd94>
   86394:	3101      	adds	r1, #1
   86396:	e5f0      	b.n	85f7a <_vfiprintf_r+0x91a>
   86398:	9902      	ldr	r1, [sp, #8]
   8639a:	9806      	ldr	r0, [sp, #24]
   8639c:	aa10      	add	r2, sp, #64	; 0x40
   8639e:	f7ff f923 	bl	855e8 <__sprint_r.part.0>
   863a2:	2800      	cmp	r0, #0
   863a4:	f43f aae3 	beq.w	8596e <_vfiprintf_r+0x30e>
   863a8:	f7ff bae3 	b.w	85972 <_vfiprintf_r+0x312>
   863ac:	9811      	ldr	r0, [sp, #68]	; 0x44
   863ae:	f8df a044 	ldr.w	sl, [pc, #68]	; 863f4 <_vfiprintf_r+0xd94>
   863b2:	3001      	adds	r0, #1
   863b4:	e631      	b.n	8601a <_vfiprintf_r+0x9ba>
   863b6:	9b02      	ldr	r3, [sp, #8]
   863b8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   863ba:	07db      	lsls	r3, r3, #31
   863bc:	d407      	bmi.n	863ce <_vfiprintf_r+0xd6e>
   863be:	9b02      	ldr	r3, [sp, #8]
   863c0:	899b      	ldrh	r3, [r3, #12]
   863c2:	059f      	lsls	r7, r3, #22
   863c4:	d403      	bmi.n	863ce <_vfiprintf_r+0xd6e>
   863c6:	9b02      	ldr	r3, [sp, #8]
   863c8:	6d98      	ldr	r0, [r3, #88]	; 0x58
   863ca:	f001 fdbd 	bl	87f48 <__retarget_lock_release_recursive>
   863ce:	f04f 33ff 	mov.w	r3, #4294967295
   863d2:	9304      	str	r3, [sp, #16]
   863d4:	f7ff bad6 	b.w	85984 <_vfiprintf_r+0x324>
   863d8:	9a05      	ldr	r2, [sp, #20]
   863da:	787b      	ldrb	r3, [r7, #1]
   863dc:	460f      	mov	r7, r1
   863de:	f852 1b04 	ldr.w	r1, [r2], #4
   863e2:	9205      	str	r2, [sp, #20]
   863e4:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
   863e8:	f7ff b993 	b.w	85712 <_vfiprintf_r+0xb2>
   863ec:	0008a648 	.word	0x0008a648
   863f0:	0008a684 	.word	0x0008a684
   863f4:	0008a674 	.word	0x0008a674

000863f8 <__sbprintf>:
   863f8:	b5f0      	push	{r4, r5, r6, r7, lr}
   863fa:	f44f 6c80 	mov.w	ip, #1024	; 0x400
   863fe:	4615      	mov	r5, r2
   86400:	2400      	movs	r4, #0
   86402:	4606      	mov	r6, r0
   86404:	461f      	mov	r7, r3
   86406:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
   8640a:	ab1a      	add	r3, sp, #104	; 0x68
   8640c:	9300      	str	r3, [sp, #0]
   8640e:	9304      	str	r3, [sp, #16]
   86410:	898b      	ldrh	r3, [r1, #12]
   86412:	a816      	add	r0, sp, #88	; 0x58
   86414:	f023 0302 	bic.w	r3, r3, #2
   86418:	f8ad 300c 	strh.w	r3, [sp, #12]
   8641c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   8641e:	9406      	str	r4, [sp, #24]
   86420:	9319      	str	r3, [sp, #100]	; 0x64
   86422:	89cb      	ldrh	r3, [r1, #14]
   86424:	460c      	mov	r4, r1
   86426:	f8ad 300e 	strh.w	r3, [sp, #14]
   8642a:	69cb      	ldr	r3, [r1, #28]
   8642c:	f8cd c008 	str.w	ip, [sp, #8]
   86430:	9307      	str	r3, [sp, #28]
   86432:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   86434:	f8cd c014 	str.w	ip, [sp, #20]
   86438:	9309      	str	r3, [sp, #36]	; 0x24
   8643a:	f001 fd7f 	bl	87f3c <__retarget_lock_init_recursive>
   8643e:	462a      	mov	r2, r5
   86440:	463b      	mov	r3, r7
   86442:	4669      	mov	r1, sp
   86444:	4630      	mov	r0, r6
   86446:	f7ff f90b 	bl	85660 <_vfiprintf_r>
   8644a:	1e05      	subs	r5, r0, #0
   8644c:	db07      	blt.n	8645e <__sbprintf+0x66>
   8644e:	4669      	mov	r1, sp
   86450:	4630      	mov	r0, r6
   86452:	f001 f91d 	bl	87690 <_fflush_r>
   86456:	2800      	cmp	r0, #0
   86458:	bf18      	it	ne
   8645a:	f04f 35ff 	movne.w	r5, #4294967295
   8645e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   86462:	065b      	lsls	r3, r3, #25
   86464:	d503      	bpl.n	8646e <__sbprintf+0x76>
   86466:	89a3      	ldrh	r3, [r4, #12]
   86468:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8646c:	81a3      	strh	r3, [r4, #12]
   8646e:	9816      	ldr	r0, [sp, #88]	; 0x58
   86470:	f001 fd66 	bl	87f40 <__retarget_lock_close_recursive>
   86474:	4628      	mov	r0, r5
   86476:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
   8647a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0008647c <__swsetup_r>:
   8647c:	b538      	push	{r3, r4, r5, lr}
   8647e:	4b33      	ldr	r3, [pc, #204]	; (8654c <__swsetup_r+0xd0>)
   86480:	4605      	mov	r5, r0
   86482:	681b      	ldr	r3, [r3, #0]
   86484:	460c      	mov	r4, r1
   86486:	b10b      	cbz	r3, 8648c <__swsetup_r+0x10>
   86488:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   8648a:	b312      	cbz	r2, 864d2 <__swsetup_r+0x56>
   8648c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   86490:	0718      	lsls	r0, r3, #28
   86492:	b29a      	uxth	r2, r3
   86494:	d525      	bpl.n	864e2 <__swsetup_r+0x66>
   86496:	6921      	ldr	r1, [r4, #16]
   86498:	2900      	cmp	r1, #0
   8649a:	d02d      	beq.n	864f8 <__swsetup_r+0x7c>
   8649c:	f012 0001 	ands.w	r0, r2, #1
   864a0:	d007      	beq.n	864b2 <__swsetup_r+0x36>
   864a2:	2500      	movs	r5, #0
   864a4:	6960      	ldr	r0, [r4, #20]
   864a6:	60a5      	str	r5, [r4, #8]
   864a8:	4240      	negs	r0, r0
   864aa:	61a0      	str	r0, [r4, #24]
   864ac:	b139      	cbz	r1, 864be <__swsetup_r+0x42>
   864ae:	2000      	movs	r0, #0
   864b0:	bd38      	pop	{r3, r4, r5, pc}
   864b2:	0795      	lsls	r5, r2, #30
   864b4:	bf58      	it	pl
   864b6:	6960      	ldrpl	r0, [r4, #20]
   864b8:	60a0      	str	r0, [r4, #8]
   864ba:	2900      	cmp	r1, #0
   864bc:	d1f7      	bne.n	864ae <__swsetup_r+0x32>
   864be:	0612      	lsls	r2, r2, #24
   864c0:	bf58      	it	pl
   864c2:	4608      	movpl	r0, r1
   864c4:	d5f4      	bpl.n	864b0 <__swsetup_r+0x34>
   864c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   864ca:	f04f 30ff 	mov.w	r0, #4294967295
   864ce:	81a3      	strh	r3, [r4, #12]
   864d0:	bd38      	pop	{r3, r4, r5, pc}
   864d2:	4618      	mov	r0, r3
   864d4:	f001 f910 	bl	876f8 <__sinit>
   864d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   864dc:	0718      	lsls	r0, r3, #28
   864de:	b29a      	uxth	r2, r3
   864e0:	d4d9      	bmi.n	86496 <__swsetup_r+0x1a>
   864e2:	06d1      	lsls	r1, r2, #27
   864e4:	d52a      	bpl.n	8653c <__swsetup_r+0xc0>
   864e6:	0752      	lsls	r2, r2, #29
   864e8:	d414      	bmi.n	86514 <__swsetup_r+0x98>
   864ea:	6921      	ldr	r1, [r4, #16]
   864ec:	f043 0308 	orr.w	r3, r3, #8
   864f0:	81a3      	strh	r3, [r4, #12]
   864f2:	b29a      	uxth	r2, r3
   864f4:	2900      	cmp	r1, #0
   864f6:	d1d1      	bne.n	8649c <__swsetup_r+0x20>
   864f8:	f402 7020 	and.w	r0, r2, #640	; 0x280
   864fc:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
   86500:	d0cc      	beq.n	8649c <__swsetup_r+0x20>
   86502:	4621      	mov	r1, r4
   86504:	4628      	mov	r0, r5
   86506:	f001 fd21 	bl	87f4c <__smakebuf_r>
   8650a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8650e:	6921      	ldr	r1, [r4, #16]
   86510:	b29a      	uxth	r2, r3
   86512:	e7c3      	b.n	8649c <__swsetup_r+0x20>
   86514:	6b21      	ldr	r1, [r4, #48]	; 0x30
   86516:	b151      	cbz	r1, 8652e <__swsetup_r+0xb2>
   86518:	f104 0240 	add.w	r2, r4, #64	; 0x40
   8651c:	4291      	cmp	r1, r2
   8651e:	d004      	beq.n	8652a <__swsetup_r+0xae>
   86520:	4628      	mov	r0, r5
   86522:	f001 fa65 	bl	879f0 <_free_r>
   86526:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8652a:	2200      	movs	r2, #0
   8652c:	6322      	str	r2, [r4, #48]	; 0x30
   8652e:	2200      	movs	r2, #0
   86530:	6921      	ldr	r1, [r4, #16]
   86532:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   86536:	e9c4 1200 	strd	r1, r2, [r4]
   8653a:	e7d7      	b.n	864ec <__swsetup_r+0x70>
   8653c:	2209      	movs	r2, #9
   8653e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86542:	602a      	str	r2, [r5, #0]
   86544:	f04f 30ff 	mov.w	r0, #4294967295
   86548:	81a3      	strh	r3, [r4, #12]
   8654a:	bd38      	pop	{r3, r4, r5, pc}
   8654c:	200003a0 	.word	0x200003a0

00086550 <register_fini>:
   86550:	4b02      	ldr	r3, [pc, #8]	; (8655c <register_fini+0xc>)
   86552:	b113      	cbz	r3, 8655a <register_fini+0xa>
   86554:	4802      	ldr	r0, [pc, #8]	; (86560 <register_fini+0x10>)
   86556:	f000 b805 	b.w	86564 <atexit>
   8655a:	4770      	bx	lr
   8655c:	00000000 	.word	0x00000000
   86560:	0008781d 	.word	0x0008781d

00086564 <atexit>:
   86564:	2300      	movs	r3, #0
   86566:	4601      	mov	r1, r0
   86568:	461a      	mov	r2, r3
   8656a:	4618      	mov	r0, r3
   8656c:	f003 b82a 	b.w	895c4 <__register_exitproc>

00086570 <quorem>:
   86570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86574:	6903      	ldr	r3, [r0, #16]
   86576:	690c      	ldr	r4, [r1, #16]
   86578:	b085      	sub	sp, #20
   8657a:	42a3      	cmp	r3, r4
   8657c:	f2c0 8089 	blt.w	86692 <quorem+0x122>
   86580:	3c01      	subs	r4, #1
   86582:	f101 0514 	add.w	r5, r1, #20
   86586:	00a3      	lsls	r3, r4, #2
   86588:	f100 0814 	add.w	r8, r0, #20
   8658c:	9301      	str	r3, [sp, #4]
   8658e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
   86592:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   86596:	3301      	adds	r3, #1
   86598:	468a      	mov	sl, r1
   8659a:	429a      	cmp	r2, r3
   8659c:	eb08 0184 	add.w	r1, r8, r4, lsl #2
   865a0:	4681      	mov	r9, r0
   865a2:	fbb2 f6f3 	udiv	r6, r2, r3
   865a6:	eb05 0784 	add.w	r7, r5, r4, lsl #2
   865aa:	9102      	str	r1, [sp, #8]
   865ac:	d33a      	bcc.n	86624 <quorem+0xb4>
   865ae:	2100      	movs	r1, #0
   865b0:	46ae      	mov	lr, r5
   865b2:	4640      	mov	r0, r8
   865b4:	460a      	mov	r2, r1
   865b6:	46a3      	mov	fp, r4
   865b8:	9503      	str	r5, [sp, #12]
   865ba:	f85e 5b04 	ldr.w	r5, [lr], #4
   865be:	6804      	ldr	r4, [r0, #0]
   865c0:	b2ab      	uxth	r3, r5
   865c2:	fb06 1303 	mla	r3, r6, r3, r1
   865c6:	0c2d      	lsrs	r5, r5, #16
   865c8:	0c19      	lsrs	r1, r3, #16
   865ca:	fb06 1105 	mla	r1, r6, r5, r1
   865ce:	b29b      	uxth	r3, r3
   865d0:	1ad2      	subs	r2, r2, r3
   865d2:	fa1f fc84 	uxth.w	ip, r4
   865d6:	4494      	add	ip, r2
   865d8:	b28a      	uxth	r2, r1
   865da:	ebc2 4214 	rsb	r2, r2, r4, lsr #16
   865de:	eb02 422c 	add.w	r2, r2, ip, asr #16
   865e2:	fa1f fc8c 	uxth.w	ip, ip
   865e6:	ea4c 4302 	orr.w	r3, ip, r2, lsl #16
   865ea:	4577      	cmp	r7, lr
   865ec:	f840 3b04 	str.w	r3, [r0], #4
   865f0:	ea4f 4111 	mov.w	r1, r1, lsr #16
   865f4:	ea4f 4222 	mov.w	r2, r2, asr #16
   865f8:	d2df      	bcs.n	865ba <quorem+0x4a>
   865fa:	9b01      	ldr	r3, [sp, #4]
   865fc:	465c      	mov	r4, fp
   865fe:	f858 3003 	ldr.w	r3, [r8, r3]
   86602:	9d03      	ldr	r5, [sp, #12]
   86604:	b973      	cbnz	r3, 86624 <quorem+0xb4>
   86606:	9b02      	ldr	r3, [sp, #8]
   86608:	3b04      	subs	r3, #4
   8660a:	4598      	cmp	r8, r3
   8660c:	d304      	bcc.n	86618 <quorem+0xa8>
   8660e:	e007      	b.n	86620 <quorem+0xb0>
   86610:	4598      	cmp	r8, r3
   86612:	f104 34ff 	add.w	r4, r4, #4294967295
   86616:	d203      	bcs.n	86620 <quorem+0xb0>
   86618:	f853 2904 	ldr.w	r2, [r3], #-4
   8661c:	2a00      	cmp	r2, #0
   8661e:	d0f7      	beq.n	86610 <quorem+0xa0>
   86620:	f8c9 4010 	str.w	r4, [r9, #16]
   86624:	4651      	mov	r1, sl
   86626:	4648      	mov	r0, r9
   86628:	f002 fb0e 	bl	88c48 <__mcmp>
   8662c:	2800      	cmp	r0, #0
   8662e:	db2c      	blt.n	8668a <quorem+0x11a>
   86630:	4640      	mov	r0, r8
   86632:	2300      	movs	r3, #0
   86634:	3601      	adds	r6, #1
   86636:	f855 1b04 	ldr.w	r1, [r5], #4
   8663a:	f8d0 c000 	ldr.w	ip, [r0]
   8663e:	b28a      	uxth	r2, r1
   86640:	1a9a      	subs	r2, r3, r2
   86642:	fa1f fe8c 	uxth.w	lr, ip
   86646:	0c0b      	lsrs	r3, r1, #16
   86648:	4472      	add	r2, lr
   8664a:	ebc3 431c 	rsb	r3, r3, ip, lsr #16
   8664e:	eb03 4322 	add.w	r3, r3, r2, asr #16
   86652:	b292      	uxth	r2, r2
   86654:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   86658:	42af      	cmp	r7, r5
   8665a:	f840 2b04 	str.w	r2, [r0], #4
   8665e:	ea4f 4323 	mov.w	r3, r3, asr #16
   86662:	d2e8      	bcs.n	86636 <quorem+0xc6>
   86664:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   86668:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   8666c:	b96a      	cbnz	r2, 8668a <quorem+0x11a>
   8666e:	3b04      	subs	r3, #4
   86670:	4598      	cmp	r8, r3
   86672:	d304      	bcc.n	8667e <quorem+0x10e>
   86674:	e007      	b.n	86686 <quorem+0x116>
   86676:	4598      	cmp	r8, r3
   86678:	f104 34ff 	add.w	r4, r4, #4294967295
   8667c:	d203      	bcs.n	86686 <quorem+0x116>
   8667e:	f853 2904 	ldr.w	r2, [r3], #-4
   86682:	2a00      	cmp	r2, #0
   86684:	d0f7      	beq.n	86676 <quorem+0x106>
   86686:	f8c9 4010 	str.w	r4, [r9, #16]
   8668a:	4630      	mov	r0, r6
   8668c:	b005      	add	sp, #20
   8668e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86692:	2000      	movs	r0, #0
   86694:	b005      	add	sp, #20
   86696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8669a:	bf00      	nop
   8669c:	0000      	movs	r0, r0
   8669e:	0000      	movs	r0, r0

000866a0 <_dtoa_r>:
   866a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   866a4:	4690      	mov	r8, r2
   866a6:	4699      	mov	r9, r3
   866a8:	6c01      	ldr	r1, [r0, #64]	; 0x40
   866aa:	b099      	sub	sp, #100	; 0x64
   866ac:	4604      	mov	r4, r0
   866ae:	e9cd 8904 	strd	r8, r9, [sp, #16]
   866b2:	9d25      	ldr	r5, [sp, #148]	; 0x94
   866b4:	b141      	cbz	r1, 866c8 <_dtoa_r+0x28>
   866b6:	2301      	movs	r3, #1
   866b8:	6c42      	ldr	r2, [r0, #68]	; 0x44
   866ba:	4093      	lsls	r3, r2
   866bc:	608b      	str	r3, [r1, #8]
   866be:	604a      	str	r2, [r1, #4]
   866c0:	f002 f86c 	bl	8879c <_Bfree>
   866c4:	2300      	movs	r3, #0
   866c6:	6423      	str	r3, [r4, #64]	; 0x40
   866c8:	f1b9 0a00 	subs.w	sl, r9, #0
   866cc:	bfb4      	ite	lt
   866ce:	2301      	movlt	r3, #1
   866d0:	2300      	movge	r3, #0
   866d2:	602b      	str	r3, [r5, #0]
   866d4:	4b76      	ldr	r3, [pc, #472]	; (868b0 <_dtoa_r+0x210>)
   866d6:	bfbc      	itt	lt
   866d8:	f02a 4a00 	biclt.w	sl, sl, #2147483648	; 0x80000000
   866dc:	f8cd a014 	strlt.w	sl, [sp, #20]
   866e0:	ea33 030a 	bics.w	r3, r3, sl
   866e4:	f000 80aa 	beq.w	8683c <_dtoa_r+0x19c>
   866e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   866ec:	4610      	mov	r0, r2
   866ee:	4619      	mov	r1, r3
   866f0:	2200      	movs	r2, #0
   866f2:	2300      	movs	r3, #0
   866f4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   866f8:	f003 fd5a 	bl	8a1b0 <__aeabi_dcmpeq>
   866fc:	4607      	mov	r7, r0
   866fe:	b170      	cbz	r0, 8671e <_dtoa_r+0x7e>
   86700:	2301      	movs	r3, #1
   86702:	9a24      	ldr	r2, [sp, #144]	; 0x90
   86704:	6013      	str	r3, [r2, #0]
   86706:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86708:	2b00      	cmp	r3, #0
   8670a:	f000 82e6 	beq.w	86cda <_dtoa_r+0x63a>
   8670e:	4869      	ldr	r0, [pc, #420]	; (868b4 <_dtoa_r+0x214>)
   86710:	6018      	str	r0, [r3, #0]
   86712:	1e43      	subs	r3, r0, #1
   86714:	9303      	str	r3, [sp, #12]
   86716:	9803      	ldr	r0, [sp, #12]
   86718:	b019      	add	sp, #100	; 0x64
   8671a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8671e:	ab16      	add	r3, sp, #88	; 0x58
   86720:	9301      	str	r3, [sp, #4]
   86722:	ab17      	add	r3, sp, #92	; 0x5c
   86724:	9300      	str	r3, [sp, #0]
   86726:	4620      	mov	r0, r4
   86728:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   8672c:	f002 fb52 	bl	88dd4 <__d2b>
   86730:	ea5f 561a 	movs.w	r6, sl, lsr #20
   86734:	4605      	mov	r5, r0
   86736:	f040 8097 	bne.w	86868 <_dtoa_r+0x1c8>
   8673a:	e9dd 7616 	ldrd	r7, r6, [sp, #88]	; 0x58
   8673e:	443e      	add	r6, r7
   86740:	f206 4032 	addw	r0, r6, #1074	; 0x432
   86744:	2820      	cmp	r0, #32
   86746:	f340 83b7 	ble.w	86eb8 <_dtoa_r+0x818>
   8674a:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
   8674e:	fa0a fa00 	lsl.w	sl, sl, r0
   86752:	f206 4012 	addw	r0, r6, #1042	; 0x412
   86756:	fa28 f000 	lsr.w	r0, r8, r0
   8675a:	ea4a 0000 	orr.w	r0, sl, r0
   8675e:	f003 fa45 	bl	89bec <__aeabi_ui2d>
   86762:	2301      	movs	r3, #1
   86764:	3e01      	subs	r6, #1
   86766:	930f      	str	r3, [sp, #60]	; 0x3c
   86768:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   8676c:	2200      	movs	r2, #0
   8676e:	4b52      	ldr	r3, [pc, #328]	; (868b8 <_dtoa_r+0x218>)
   86770:	f003 f8fe 	bl	89970 <__aeabi_dsub>
   86774:	a348      	add	r3, pc, #288	; (adr r3, 86898 <_dtoa_r+0x1f8>)
   86776:	e9d3 2300 	ldrd	r2, r3, [r3]
   8677a:	f003 fab1 	bl	89ce0 <__aeabi_dmul>
   8677e:	a348      	add	r3, pc, #288	; (adr r3, 868a0 <_dtoa_r+0x200>)
   86780:	e9d3 2300 	ldrd	r2, r3, [r3]
   86784:	f003 f8f6 	bl	89974 <__adddf3>
   86788:	4680      	mov	r8, r0
   8678a:	4630      	mov	r0, r6
   8678c:	4689      	mov	r9, r1
   8678e:	f003 fa3d 	bl	89c0c <__aeabi_i2d>
   86792:	a345      	add	r3, pc, #276	; (adr r3, 868a8 <_dtoa_r+0x208>)
   86794:	e9d3 2300 	ldrd	r2, r3, [r3]
   86798:	f003 faa2 	bl	89ce0 <__aeabi_dmul>
   8679c:	4602      	mov	r2, r0
   8679e:	460b      	mov	r3, r1
   867a0:	4640      	mov	r0, r8
   867a2:	4649      	mov	r1, r9
   867a4:	f003 f8e6 	bl	89974 <__adddf3>
   867a8:	4680      	mov	r8, r0
   867aa:	4689      	mov	r9, r1
   867ac:	f003 fd48 	bl	8a240 <__aeabi_d2iz>
   867b0:	2200      	movs	r2, #0
   867b2:	4683      	mov	fp, r0
   867b4:	2300      	movs	r3, #0
   867b6:	4640      	mov	r0, r8
   867b8:	4649      	mov	r1, r9
   867ba:	f003 fd03 	bl	8a1c4 <__aeabi_dcmplt>
   867be:	2800      	cmp	r0, #0
   867c0:	f040 827e 	bne.w	86cc0 <_dtoa_r+0x620>
   867c4:	f1bb 0f16 	cmp.w	fp, #22
   867c8:	f200 826d 	bhi.w	86ca6 <_dtoa_r+0x606>
   867cc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   867d0:	4b3a      	ldr	r3, [pc, #232]	; (868bc <_dtoa_r+0x21c>)
   867d2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   867d6:	e9d3 2300 	ldrd	r2, r3, [r3]
   867da:	f003 fcf3 	bl	8a1c4 <__aeabi_dcmplt>
   867de:	2800      	cmp	r0, #0
   867e0:	d072      	beq.n	868c8 <_dtoa_r+0x228>
   867e2:	2300      	movs	r3, #0
   867e4:	1bbe      	subs	r6, r7, r6
   867e6:	930e      	str	r3, [sp, #56]	; 0x38
   867e8:	1e73      	subs	r3, r6, #1
   867ea:	f10b 3bff 	add.w	fp, fp, #4294967295
   867ee:	9306      	str	r3, [sp, #24]
   867f0:	f100 8260 	bmi.w	86cb4 <_dtoa_r+0x614>
   867f4:	2300      	movs	r3, #0
   867f6:	9309      	str	r3, [sp, #36]	; 0x24
   867f8:	f1bb 0f00 	cmp.w	fp, #0
   867fc:	da6b      	bge.n	868d6 <_dtoa_r+0x236>
   867fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86800:	f8cd b01c 	str.w	fp, [sp, #28]
   86804:	eba3 030b 	sub.w	r3, r3, fp
   86808:	9309      	str	r3, [sp, #36]	; 0x24
   8680a:	f1cb 0300 	rsb	r3, fp, #0
   8680e:	930d      	str	r3, [sp, #52]	; 0x34
   86810:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86812:	f04f 0b00 	mov.w	fp, #0
   86816:	2b09      	cmp	r3, #9
   86818:	d866      	bhi.n	868e8 <_dtoa_r+0x248>
   8681a:	2b05      	cmp	r3, #5
   8681c:	f340 834a 	ble.w	86eb4 <_dtoa_r+0x814>
   86820:	2600      	movs	r6, #0
   86822:	3b04      	subs	r3, #4
   86824:	9322      	str	r3, [sp, #136]	; 0x88
   86826:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86828:	3b02      	subs	r3, #2
   8682a:	2b03      	cmp	r3, #3
   8682c:	f200 866c 	bhi.w	87508 <_dtoa_r+0xe68>
   86830:	e8df f013 	tbh	[pc, r3, lsl #1]
   86834:	045e0461 	.word	0x045e0461
   86838:	04380455 	.word	0x04380455
   8683c:	f242 730f 	movw	r3, #9999	; 0x270f
   86840:	9a24      	ldr	r2, [sp, #144]	; 0x90
   86842:	f3ca 0a13 	ubfx	sl, sl, #0, #20
   86846:	6013      	str	r3, [r2, #0]
   86848:	ea5a 0308 	orrs.w	r3, sl, r8
   8684c:	d11a      	bne.n	86884 <_dtoa_r+0x1e4>
   8684e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86850:	2b00      	cmp	r3, #0
   86852:	f000 8668 	beq.w	87526 <_dtoa_r+0xe86>
   86856:	4b1a      	ldr	r3, [pc, #104]	; (868c0 <_dtoa_r+0x220>)
   86858:	9303      	str	r3, [sp, #12]
   8685a:	3308      	adds	r3, #8
   8685c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8685e:	9803      	ldr	r0, [sp, #12]
   86860:	6013      	str	r3, [r2, #0]
   86862:	b019      	add	sp, #100	; 0x64
   86864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86868:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
   8686c:	f3c2 0313 	ubfx	r3, r2, #0, #20
   86870:	4608      	mov	r0, r1
   86872:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   86876:	970f      	str	r7, [sp, #60]	; 0x3c
   86878:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   8687c:	9f16      	ldr	r7, [sp, #88]	; 0x58
   8687e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   86882:	e773      	b.n	8676c <_dtoa_r+0xcc>
   86884:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86886:	2b00      	cmp	r3, #0
   86888:	f040 83ef 	bne.w	8706a <_dtoa_r+0x9ca>
   8688c:	4b0d      	ldr	r3, [pc, #52]	; (868c4 <_dtoa_r+0x224>)
   8688e:	9303      	str	r3, [sp, #12]
   86890:	e741      	b.n	86716 <_dtoa_r+0x76>
   86892:	bf00      	nop
   86894:	f3af 8000 	nop.w
   86898:	636f4361 	.word	0x636f4361
   8689c:	3fd287a7 	.word	0x3fd287a7
   868a0:	8b60c8b3 	.word	0x8b60c8b3
   868a4:	3fc68a28 	.word	0x3fc68a28
   868a8:	509f79fb 	.word	0x509f79fb
   868ac:	3fd34413 	.word	0x3fd34413
   868b0:	7ff00000 	.word	0x7ff00000
   868b4:	0008a651 	.word	0x0008a651
   868b8:	3ff80000 	.word	0x3ff80000
   868bc:	0008a7f0 	.word	0x0008a7f0
   868c0:	0008a698 	.word	0x0008a698
   868c4:	0008a694 	.word	0x0008a694
   868c8:	1bbe      	subs	r6, r7, r6
   868ca:	1e73      	subs	r3, r6, #1
   868cc:	9306      	str	r3, [sp, #24]
   868ce:	f100 848a 	bmi.w	871e6 <_dtoa_r+0xb46>
   868d2:	900e      	str	r0, [sp, #56]	; 0x38
   868d4:	9009      	str	r0, [sp, #36]	; 0x24
   868d6:	9b06      	ldr	r3, [sp, #24]
   868d8:	445b      	add	r3, fp
   868da:	e9cd 3b06 	strd	r3, fp, [sp, #24]
   868de:	2300      	movs	r3, #0
   868e0:	930d      	str	r3, [sp, #52]	; 0x34
   868e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
   868e4:	2b09      	cmp	r3, #9
   868e6:	d998      	bls.n	8681a <_dtoa_r+0x17a>
   868e8:	2300      	movs	r3, #0
   868ea:	9322      	str	r3, [sp, #136]	; 0x88
   868ec:	f04f 33ff 	mov.w	r3, #4294967295
   868f0:	2601      	movs	r6, #1
   868f2:	9308      	str	r3, [sp, #32]
   868f4:	2300      	movs	r3, #0
   868f6:	960c      	str	r6, [sp, #48]	; 0x30
   868f8:	9323      	str	r3, [sp, #140]	; 0x8c
   868fa:	2100      	movs	r1, #0
   868fc:	9b08      	ldr	r3, [sp, #32]
   868fe:	6461      	str	r1, [r4, #68]	; 0x44
   86900:	9312      	str	r3, [sp, #72]	; 0x48
   86902:	4620      	mov	r0, r4
   86904:	f001 ff24 	bl	88750 <_Balloc>
   86908:	9003      	str	r0, [sp, #12]
   8690a:	2800      	cmp	r0, #0
   8690c:	f000 8604 	beq.w	87518 <_dtoa_r+0xe78>
   86910:	9b03      	ldr	r3, [sp, #12]
   86912:	6423      	str	r3, [r4, #64]	; 0x40
   86914:	9b08      	ldr	r3, [sp, #32]
   86916:	2b0e      	cmp	r3, #14
   86918:	f200 8114 	bhi.w	86b44 <_dtoa_r+0x4a4>
   8691c:	2e00      	cmp	r6, #0
   8691e:	f000 8111 	beq.w	86b44 <_dtoa_r+0x4a4>
   86922:	9907      	ldr	r1, [sp, #28]
   86924:	2900      	cmp	r1, #0
   86926:	f340 8460 	ble.w	871ea <_dtoa_r+0xb4a>
   8692a:	4baf      	ldr	r3, [pc, #700]	; (86be8 <_dtoa_r+0x548>)
   8692c:	f001 020f 	and.w	r2, r1, #15
   86930:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86934:	460a      	mov	r2, r1
   86936:	e9d3 6700 	ldrd	r6, r7, [r3]
   8693a:	ea4f 1821 	mov.w	r8, r1, asr #4
   8693e:	05d1      	lsls	r1, r2, #23
   86940:	f140 8417 	bpl.w	87172 <_dtoa_r+0xad2>
   86944:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86948:	4ba8      	ldr	r3, [pc, #672]	; (86bec <_dtoa_r+0x54c>)
   8694a:	f04f 0a03 	mov.w	sl, #3
   8694e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   86952:	f003 faef 	bl	89f34 <__aeabi_ddiv>
   86956:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8695a:	f008 080f 	and.w	r8, r8, #15
   8695e:	f1b8 0f00 	cmp.w	r8, #0
   86962:	d013      	beq.n	8698c <_dtoa_r+0x2ec>
   86964:	f8df 9284 	ldr.w	r9, [pc, #644]	; 86bec <_dtoa_r+0x54c>
   86968:	f018 0f01 	tst.w	r8, #1
   8696c:	d009      	beq.n	86982 <_dtoa_r+0x2e2>
   8696e:	e9d9 2300 	ldrd	r2, r3, [r9]
   86972:	4630      	mov	r0, r6
   86974:	4639      	mov	r1, r7
   86976:	f003 f9b3 	bl	89ce0 <__aeabi_dmul>
   8697a:	4606      	mov	r6, r0
   8697c:	460f      	mov	r7, r1
   8697e:	f10a 0a01 	add.w	sl, sl, #1
   86982:	ea5f 0868 	movs.w	r8, r8, asr #1
   86986:	f109 0908 	add.w	r9, r9, #8
   8698a:	d1ed      	bne.n	86968 <_dtoa_r+0x2c8>
   8698c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86990:	4632      	mov	r2, r6
   86992:	463b      	mov	r3, r7
   86994:	f003 face 	bl	89f34 <__aeabi_ddiv>
   86998:	4680      	mov	r8, r0
   8699a:	4689      	mov	r9, r1
   8699c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8699e:	b143      	cbz	r3, 869b2 <_dtoa_r+0x312>
   869a0:	2200      	movs	r2, #0
   869a2:	4640      	mov	r0, r8
   869a4:	4649      	mov	r1, r9
   869a6:	4b92      	ldr	r3, [pc, #584]	; (86bf0 <_dtoa_r+0x550>)
   869a8:	f003 fc0c 	bl	8a1c4 <__aeabi_dcmplt>
   869ac:	2800      	cmp	r0, #0
   869ae:	f040 8535 	bne.w	8741c <_dtoa_r+0xd7c>
   869b2:	4650      	mov	r0, sl
   869b4:	f003 f92a 	bl	89c0c <__aeabi_i2d>
   869b8:	4642      	mov	r2, r8
   869ba:	464b      	mov	r3, r9
   869bc:	f003 f990 	bl	89ce0 <__aeabi_dmul>
   869c0:	4b8c      	ldr	r3, [pc, #560]	; (86bf4 <_dtoa_r+0x554>)
   869c2:	2200      	movs	r2, #0
   869c4:	f002 ffd6 	bl	89974 <__adddf3>
   869c8:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   869cc:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   869d0:	9311      	str	r3, [sp, #68]	; 0x44
   869d2:	9b08      	ldr	r3, [sp, #32]
   869d4:	2b00      	cmp	r3, #0
   869d6:	f000 8097 	beq.w	86b08 <_dtoa_r+0x468>
   869da:	9b07      	ldr	r3, [sp, #28]
   869dc:	9314      	str	r3, [sp, #80]	; 0x50
   869de:	9b08      	ldr	r3, [sp, #32]
   869e0:	9313      	str	r3, [sp, #76]	; 0x4c
   869e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   869e4:	2b00      	cmp	r3, #0
   869e6:	f000 84a9 	beq.w	8733c <_dtoa_r+0xc9c>
   869ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   869ec:	4b7e      	ldr	r3, [pc, #504]	; (86be8 <_dtoa_r+0x548>)
   869ee:	2000      	movs	r0, #0
   869f0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   869f4:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   869f8:	497f      	ldr	r1, [pc, #508]	; (86bf8 <_dtoa_r+0x558>)
   869fa:	f003 fa9b 	bl	89f34 <__aeabi_ddiv>
   869fe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   86a02:	f002 ffb5 	bl	89970 <__aeabi_dsub>
   86a06:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   86a0a:	4649      	mov	r1, r9
   86a0c:	4640      	mov	r0, r8
   86a0e:	f003 fc17 	bl	8a240 <__aeabi_d2iz>
   86a12:	4607      	mov	r7, r0
   86a14:	f003 f8fa 	bl	89c0c <__aeabi_i2d>
   86a18:	4602      	mov	r2, r0
   86a1a:	460b      	mov	r3, r1
   86a1c:	4640      	mov	r0, r8
   86a1e:	4649      	mov	r1, r9
   86a20:	f002 ffa6 	bl	89970 <__aeabi_dsub>
   86a24:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   86a28:	9e03      	ldr	r6, [sp, #12]
   86a2a:	3730      	adds	r7, #48	; 0x30
   86a2c:	f806 7b01 	strb.w	r7, [r6], #1
   86a30:	4680      	mov	r8, r0
   86a32:	4689      	mov	r9, r1
   86a34:	f003 fbc6 	bl	8a1c4 <__aeabi_dcmplt>
   86a38:	2800      	cmp	r0, #0
   86a3a:	f040 852e 	bne.w	8749a <_dtoa_r+0xdfa>
   86a3e:	f8cd b054 	str.w	fp, [sp, #84]	; 0x54
   86a42:	2700      	movs	r7, #0
   86a44:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   86a48:	9510      	str	r5, [sp, #64]	; 0x40
   86a4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   86a4c:	9413      	str	r4, [sp, #76]	; 0x4c
   86a4e:	e02a      	b.n	86aa6 <_dtoa_r+0x406>
   86a50:	3701      	adds	r7, #1
   86a52:	42af      	cmp	r7, r5
   86a54:	f280 852e 	bge.w	874b4 <_dtoa_r+0xe14>
   86a58:	4650      	mov	r0, sl
   86a5a:	4659      	mov	r1, fp
   86a5c:	2200      	movs	r2, #0
   86a5e:	4b67      	ldr	r3, [pc, #412]	; (86bfc <_dtoa_r+0x55c>)
   86a60:	f003 f93e 	bl	89ce0 <__aeabi_dmul>
   86a64:	2200      	movs	r2, #0
   86a66:	4b65      	ldr	r3, [pc, #404]	; (86bfc <_dtoa_r+0x55c>)
   86a68:	4682      	mov	sl, r0
   86a6a:	468b      	mov	fp, r1
   86a6c:	4640      	mov	r0, r8
   86a6e:	4649      	mov	r1, r9
   86a70:	f003 f936 	bl	89ce0 <__aeabi_dmul>
   86a74:	4689      	mov	r9, r1
   86a76:	4680      	mov	r8, r0
   86a78:	f003 fbe2 	bl	8a240 <__aeabi_d2iz>
   86a7c:	4604      	mov	r4, r0
   86a7e:	f003 f8c5 	bl	89c0c <__aeabi_i2d>
   86a82:	4602      	mov	r2, r0
   86a84:	460b      	mov	r3, r1
   86a86:	4640      	mov	r0, r8
   86a88:	4649      	mov	r1, r9
   86a8a:	f002 ff71 	bl	89970 <__aeabi_dsub>
   86a8e:	3430      	adds	r4, #48	; 0x30
   86a90:	4652      	mov	r2, sl
   86a92:	465b      	mov	r3, fp
   86a94:	f806 4b01 	strb.w	r4, [r6], #1
   86a98:	4680      	mov	r8, r0
   86a9a:	4689      	mov	r9, r1
   86a9c:	f003 fb92 	bl	8a1c4 <__aeabi_dcmplt>
   86aa0:	2800      	cmp	r0, #0
   86aa2:	f040 84f8 	bne.w	87496 <_dtoa_r+0xdf6>
   86aa6:	4642      	mov	r2, r8
   86aa8:	464b      	mov	r3, r9
   86aaa:	2000      	movs	r0, #0
   86aac:	4950      	ldr	r1, [pc, #320]	; (86bf0 <_dtoa_r+0x550>)
   86aae:	f002 ff5f 	bl	89970 <__aeabi_dsub>
   86ab2:	4652      	mov	r2, sl
   86ab4:	465b      	mov	r3, fp
   86ab6:	f003 fb85 	bl	8a1c4 <__aeabi_dcmplt>
   86aba:	2800      	cmp	r0, #0
   86abc:	d0c8      	beq.n	86a50 <_dtoa_r+0x3b0>
   86abe:	e9dd 4313 	ldrd	r4, r3, [sp, #76]	; 0x4c
   86ac2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   86ac4:	9a03      	ldr	r2, [sp, #12]
   86ac6:	9307      	str	r3, [sp, #28]
   86ac8:	e002      	b.n	86ad0 <_dtoa_r+0x430>
   86aca:	4296      	cmp	r6, r2
   86acc:	f000 84cd 	beq.w	8746a <_dtoa_r+0xdca>
   86ad0:	46b2      	mov	sl, r6
   86ad2:	f816 3d01 	ldrb.w	r3, [r6, #-1]!
   86ad6:	2b39      	cmp	r3, #57	; 0x39
   86ad8:	d0f7      	beq.n	86aca <_dtoa_r+0x42a>
   86ada:	3301      	adds	r3, #1
   86adc:	b2db      	uxtb	r3, r3
   86ade:	7033      	strb	r3, [r6, #0]
   86ae0:	9b07      	ldr	r3, [sp, #28]
   86ae2:	3301      	adds	r3, #1
   86ae4:	9307      	str	r3, [sp, #28]
   86ae6:	e1c8      	b.n	86e7a <_dtoa_r+0x7da>
   86ae8:	4650      	mov	r0, sl
   86aea:	f003 f88f 	bl	89c0c <__aeabi_i2d>
   86aee:	4642      	mov	r2, r8
   86af0:	464b      	mov	r3, r9
   86af2:	f003 f8f5 	bl	89ce0 <__aeabi_dmul>
   86af6:	4b3f      	ldr	r3, [pc, #252]	; (86bf4 <_dtoa_r+0x554>)
   86af8:	2200      	movs	r2, #0
   86afa:	f002 ff3b 	bl	89974 <__adddf3>
   86afe:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   86b02:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   86b06:	9311      	str	r3, [sp, #68]	; 0x44
   86b08:	4640      	mov	r0, r8
   86b0a:	4649      	mov	r1, r9
   86b0c:	2200      	movs	r2, #0
   86b0e:	4b3c      	ldr	r3, [pc, #240]	; (86c00 <_dtoa_r+0x560>)
   86b10:	f002 ff2e 	bl	89970 <__aeabi_dsub>
   86b14:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
   86b18:	464b      	mov	r3, r9
   86b1a:	4642      	mov	r2, r8
   86b1c:	4606      	mov	r6, r0
   86b1e:	460f      	mov	r7, r1
   86b20:	f003 fb6e 	bl	8a200 <__aeabi_dcmpgt>
   86b24:	4681      	mov	r9, r0
   86b26:	2800      	cmp	r0, #0
   86b28:	f040 84af 	bne.w	8748a <_dtoa_r+0xdea>
   86b2c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86b30:	4602      	mov	r2, r0
   86b32:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   86b36:	4630      	mov	r0, r6
   86b38:	4639      	mov	r1, r7
   86b3a:	f003 fb43 	bl	8a1c4 <__aeabi_dcmplt>
   86b3e:	2800      	cmp	r0, #0
   86b40:	f040 8348 	bne.w	871d4 <_dtoa_r+0xb34>
   86b44:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   86b46:	2b00      	cmp	r3, #0
   86b48:	f2c0 808c 	blt.w	86c64 <_dtoa_r+0x5c4>
   86b4c:	9a07      	ldr	r2, [sp, #28]
   86b4e:	2a0e      	cmp	r2, #14
   86b50:	f300 8088 	bgt.w	86c64 <_dtoa_r+0x5c4>
   86b54:	4b24      	ldr	r3, [pc, #144]	; (86be8 <_dtoa_r+0x548>)
   86b56:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86b5a:	e9d3 ab00 	ldrd	sl, fp, [r3]
   86b5e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86b60:	2b00      	cmp	r3, #0
   86b62:	da1b      	bge.n	86b9c <_dtoa_r+0x4fc>
   86b64:	9b08      	ldr	r3, [sp, #32]
   86b66:	2b00      	cmp	r3, #0
   86b68:	dc18      	bgt.n	86b9c <_dtoa_r+0x4fc>
   86b6a:	f040 8331 	bne.w	871d0 <_dtoa_r+0xb30>
   86b6e:	2200      	movs	r2, #0
   86b70:	4b23      	ldr	r3, [pc, #140]	; (86c00 <_dtoa_r+0x560>)
   86b72:	4650      	mov	r0, sl
   86b74:	4659      	mov	r1, fp
   86b76:	f003 f8b3 	bl	89ce0 <__aeabi_dmul>
   86b7a:	4602      	mov	r2, r0
   86b7c:	460b      	mov	r3, r1
   86b7e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86b82:	f003 fb29 	bl	8a1d8 <__aeabi_dcmple>
   86b86:	f8dd 9020 	ldr.w	r9, [sp, #32]
   86b8a:	464e      	mov	r6, r9
   86b8c:	2800      	cmp	r0, #0
   86b8e:	f000 82ca 	beq.w	87126 <_dtoa_r+0xa86>
   86b92:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86b94:	f8dd 800c 	ldr.w	r8, [sp, #12]
   86b98:	43df      	mvns	r7, r3
   86b9a:	e2cc      	b.n	87136 <_dtoa_r+0xa96>
   86b9c:	4652      	mov	r2, sl
   86b9e:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
   86ba2:	465b      	mov	r3, fp
   86ba4:	4638      	mov	r0, r7
   86ba6:	4641      	mov	r1, r8
   86ba8:	f003 f9c4 	bl	89f34 <__aeabi_ddiv>
   86bac:	f003 fb48 	bl	8a240 <__aeabi_d2iz>
   86bb0:	4681      	mov	r9, r0
   86bb2:	9009      	str	r0, [sp, #36]	; 0x24
   86bb4:	f003 f82a 	bl	89c0c <__aeabi_i2d>
   86bb8:	4652      	mov	r2, sl
   86bba:	465b      	mov	r3, fp
   86bbc:	f003 f890 	bl	89ce0 <__aeabi_dmul>
   86bc0:	9e03      	ldr	r6, [sp, #12]
   86bc2:	460b      	mov	r3, r1
   86bc4:	4602      	mov	r2, r0
   86bc6:	4641      	mov	r1, r8
   86bc8:	4638      	mov	r0, r7
   86bca:	f002 fed1 	bl	89970 <__aeabi_dsub>
   86bce:	f109 0330 	add.w	r3, r9, #48	; 0x30
   86bd2:	f806 3b01 	strb.w	r3, [r6], #1
   86bd6:	9b08      	ldr	r3, [sp, #32]
   86bd8:	2b01      	cmp	r3, #1
   86bda:	f000 835f 	beq.w	8729c <_dtoa_r+0xbfc>
   86bde:	9406      	str	r4, [sp, #24]
   86be0:	2701      	movs	r7, #1
   86be2:	461c      	mov	r4, r3
   86be4:	9504      	str	r5, [sp, #16]
   86be6:	e02a      	b.n	86c3e <_dtoa_r+0x59e>
   86be8:	0008a7f0 	.word	0x0008a7f0
   86bec:	0008a7c8 	.word	0x0008a7c8
   86bf0:	3ff00000 	.word	0x3ff00000
   86bf4:	401c0000 	.word	0x401c0000
   86bf8:	3fe00000 	.word	0x3fe00000
   86bfc:	40240000 	.word	0x40240000
   86c00:	40140000 	.word	0x40140000
   86c04:	4652      	mov	r2, sl
   86c06:	465b      	mov	r3, fp
   86c08:	4640      	mov	r0, r8
   86c0a:	4649      	mov	r1, r9
   86c0c:	f003 f992 	bl	89f34 <__aeabi_ddiv>
   86c10:	f003 fb16 	bl	8a240 <__aeabi_d2iz>
   86c14:	4605      	mov	r5, r0
   86c16:	f002 fff9 	bl	89c0c <__aeabi_i2d>
   86c1a:	4652      	mov	r2, sl
   86c1c:	465b      	mov	r3, fp
   86c1e:	f003 f85f 	bl	89ce0 <__aeabi_dmul>
   86c22:	3701      	adds	r7, #1
   86c24:	460b      	mov	r3, r1
   86c26:	4602      	mov	r2, r0
   86c28:	4649      	mov	r1, r9
   86c2a:	4640      	mov	r0, r8
   86c2c:	f002 fea0 	bl	89970 <__aeabi_dsub>
   86c30:	f105 0330 	add.w	r3, r5, #48	; 0x30
   86c34:	42a7      	cmp	r7, r4
   86c36:	f806 3b01 	strb.w	r3, [r6], #1
   86c3a:	f000 832c 	beq.w	87296 <_dtoa_r+0xbf6>
   86c3e:	2200      	movs	r2, #0
   86c40:	4bab      	ldr	r3, [pc, #684]	; (86ef0 <_dtoa_r+0x850>)
   86c42:	f003 f84d 	bl	89ce0 <__aeabi_dmul>
   86c46:	2200      	movs	r2, #0
   86c48:	2300      	movs	r3, #0
   86c4a:	4680      	mov	r8, r0
   86c4c:	4689      	mov	r9, r1
   86c4e:	f003 faaf 	bl	8a1b0 <__aeabi_dcmpeq>
   86c52:	2800      	cmp	r0, #0
   86c54:	d0d6      	beq.n	86c04 <_dtoa_r+0x564>
   86c56:	9d04      	ldr	r5, [sp, #16]
   86c58:	9c06      	ldr	r4, [sp, #24]
   86c5a:	9b07      	ldr	r3, [sp, #28]
   86c5c:	46b2      	mov	sl, r6
   86c5e:	3301      	adds	r3, #1
   86c60:	9307      	str	r3, [sp, #28]
   86c62:	e10a      	b.n	86e7a <_dtoa_r+0x7da>
   86c64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   86c66:	2a00      	cmp	r2, #0
   86c68:	d03d      	beq.n	86ce6 <_dtoa_r+0x646>
   86c6a:	9a22      	ldr	r2, [sp, #136]	; 0x88
   86c6c:	2a01      	cmp	r2, #1
   86c6e:	f340 829f 	ble.w	871b0 <_dtoa_r+0xb10>
   86c72:	9b08      	ldr	r3, [sp, #32]
   86c74:	f103 38ff 	add.w	r8, r3, #4294967295
   86c78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86c7a:	4543      	cmp	r3, r8
   86c7c:	f2c0 8270 	blt.w	87160 <_dtoa_r+0xac0>
   86c80:	eba3 0808 	sub.w	r8, r3, r8
   86c84:	9b08      	ldr	r3, [sp, #32]
   86c86:	2b00      	cmp	r3, #0
   86c88:	f2c0 8340 	blt.w	8730c <_dtoa_r+0xc6c>
   86c8c:	9a06      	ldr	r2, [sp, #24]
   86c8e:	441a      	add	r2, r3
   86c90:	9206      	str	r2, [sp, #24]
   86c92:	9a09      	ldr	r2, [sp, #36]	; 0x24
   86c94:	4617      	mov	r7, r2
   86c96:	441a      	add	r2, r3
   86c98:	9209      	str	r2, [sp, #36]	; 0x24
   86c9a:	2101      	movs	r1, #1
   86c9c:	4620      	mov	r0, r4
   86c9e:	f001 fe25 	bl	888ec <__i2b>
   86ca2:	4606      	mov	r6, r0
   86ca4:	e023      	b.n	86cee <_dtoa_r+0x64e>
   86ca6:	2301      	movs	r3, #1
   86ca8:	1bbe      	subs	r6, r7, r6
   86caa:	930e      	str	r3, [sp, #56]	; 0x38
   86cac:	1e73      	subs	r3, r6, #1
   86cae:	9306      	str	r3, [sp, #24]
   86cb0:	f57f ada0 	bpl.w	867f4 <_dtoa_r+0x154>
   86cb4:	f1c6 0301 	rsb	r3, r6, #1
   86cb8:	9309      	str	r3, [sp, #36]	; 0x24
   86cba:	2300      	movs	r3, #0
   86cbc:	9306      	str	r3, [sp, #24]
   86cbe:	e59b      	b.n	867f8 <_dtoa_r+0x158>
   86cc0:	4658      	mov	r0, fp
   86cc2:	f002 ffa3 	bl	89c0c <__aeabi_i2d>
   86cc6:	4642      	mov	r2, r8
   86cc8:	464b      	mov	r3, r9
   86cca:	f003 fa71 	bl	8a1b0 <__aeabi_dcmpeq>
   86cce:	2800      	cmp	r0, #0
   86cd0:	f47f ad78 	bne.w	867c4 <_dtoa_r+0x124>
   86cd4:	f10b 3bff 	add.w	fp, fp, #4294967295
   86cd8:	e574      	b.n	867c4 <_dtoa_r+0x124>
   86cda:	4b86      	ldr	r3, [pc, #536]	; (86ef4 <_dtoa_r+0x854>)
   86cdc:	9303      	str	r3, [sp, #12]
   86cde:	9803      	ldr	r0, [sp, #12]
   86ce0:	b019      	add	sp, #100	; 0x64
   86ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86ce6:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   86cea:	9f09      	ldr	r7, [sp, #36]	; 0x24
   86cec:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   86cee:	2f00      	cmp	r7, #0
   86cf0:	dd0c      	ble.n	86d0c <_dtoa_r+0x66c>
   86cf2:	9906      	ldr	r1, [sp, #24]
   86cf4:	2900      	cmp	r1, #0
   86cf6:	460b      	mov	r3, r1
   86cf8:	dd08      	ble.n	86d0c <_dtoa_r+0x66c>
   86cfa:	42b9      	cmp	r1, r7
   86cfc:	bfa8      	it	ge
   86cfe:	463b      	movge	r3, r7
   86d00:	9a09      	ldr	r2, [sp, #36]	; 0x24
   86d02:	1aff      	subs	r7, r7, r3
   86d04:	1ad2      	subs	r2, r2, r3
   86d06:	1acb      	subs	r3, r1, r3
   86d08:	9209      	str	r2, [sp, #36]	; 0x24
   86d0a:	9306      	str	r3, [sp, #24]
   86d0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86d0e:	b1e3      	cbz	r3, 86d4a <_dtoa_r+0x6aa>
   86d10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86d12:	2b00      	cmp	r3, #0
   86d14:	f000 8260 	beq.w	871d8 <_dtoa_r+0xb38>
   86d18:	f1b8 0f00 	cmp.w	r8, #0
   86d1c:	dd10      	ble.n	86d40 <_dtoa_r+0x6a0>
   86d1e:	4631      	mov	r1, r6
   86d20:	4642      	mov	r2, r8
   86d22:	4620      	mov	r0, r4
   86d24:	f001 febe 	bl	88aa4 <__pow5mult>
   86d28:	4606      	mov	r6, r0
   86d2a:	462a      	mov	r2, r5
   86d2c:	4631      	mov	r1, r6
   86d2e:	4620      	mov	r0, r4
   86d30:	f001 fe0a 	bl	88948 <__multiply>
   86d34:	4603      	mov	r3, r0
   86d36:	4629      	mov	r1, r5
   86d38:	4620      	mov	r0, r4
   86d3a:	461d      	mov	r5, r3
   86d3c:	f001 fd2e 	bl	8879c <_Bfree>
   86d40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86d42:	ebb3 0208 	subs.w	r2, r3, r8
   86d46:	f040 82db 	bne.w	87300 <_dtoa_r+0xc60>
   86d4a:	2101      	movs	r1, #1
   86d4c:	4620      	mov	r0, r4
   86d4e:	f001 fdcd 	bl	888ec <__i2b>
   86d52:	f1bb 0f00 	cmp.w	fp, #0
   86d56:	4681      	mov	r9, r0
   86d58:	f300 80b3 	bgt.w	86ec2 <_dtoa_r+0x822>
   86d5c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86d5e:	2b01      	cmp	r3, #1
   86d60:	f340 8188 	ble.w	87074 <_dtoa_r+0x9d4>
   86d64:	f04f 0a00 	mov.w	sl, #0
   86d68:	2001      	movs	r0, #1
   86d6a:	f1bb 0f00 	cmp.w	fp, #0
   86d6e:	f040 80b4 	bne.w	86eda <_dtoa_r+0x83a>
   86d72:	9a06      	ldr	r2, [sp, #24]
   86d74:	4410      	add	r0, r2
   86d76:	f010 001f 	ands.w	r0, r0, #31
   86d7a:	f000 8092 	beq.w	86ea2 <_dtoa_r+0x802>
   86d7e:	f1c0 0320 	rsb	r3, r0, #32
   86d82:	2b04      	cmp	r3, #4
   86d84:	f340 83d3 	ble.w	8752e <_dtoa_r+0xe8e>
   86d88:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86d8a:	f1c0 001c 	rsb	r0, r0, #28
   86d8e:	4403      	add	r3, r0
   86d90:	4402      	add	r2, r0
   86d92:	9309      	str	r3, [sp, #36]	; 0x24
   86d94:	4407      	add	r7, r0
   86d96:	9206      	str	r2, [sp, #24]
   86d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86d9a:	2b00      	cmp	r3, #0
   86d9c:	dd05      	ble.n	86daa <_dtoa_r+0x70a>
   86d9e:	4629      	mov	r1, r5
   86da0:	461a      	mov	r2, r3
   86da2:	4620      	mov	r0, r4
   86da4:	f001 feda 	bl	88b5c <__lshift>
   86da8:	4605      	mov	r5, r0
   86daa:	9b06      	ldr	r3, [sp, #24]
   86dac:	2b00      	cmp	r3, #0
   86dae:	dd05      	ble.n	86dbc <_dtoa_r+0x71c>
   86db0:	4649      	mov	r1, r9
   86db2:	461a      	mov	r2, r3
   86db4:	4620      	mov	r0, r4
   86db6:	f001 fed1 	bl	88b5c <__lshift>
   86dba:	4681      	mov	r9, r0
   86dbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86dbe:	2b00      	cmp	r3, #0
   86dc0:	f040 8138 	bne.w	87034 <_dtoa_r+0x994>
   86dc4:	9b08      	ldr	r3, [sp, #32]
   86dc6:	2b00      	cmp	r3, #0
   86dc8:	f340 811e 	ble.w	87008 <_dtoa_r+0x968>
   86dcc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86dce:	2b00      	cmp	r3, #0
   86dd0:	f040 809f 	bne.w	86f12 <_dtoa_r+0x872>
   86dd4:	9b07      	ldr	r3, [sp, #28]
   86dd6:	3301      	adds	r3, #1
   86dd8:	9307      	str	r3, [sp, #28]
   86dda:	2701      	movs	r7, #1
   86ddc:	f8dd 800c 	ldr.w	r8, [sp, #12]
   86de0:	f8dd a020 	ldr.w	sl, [sp, #32]
   86de4:	e007      	b.n	86df6 <_dtoa_r+0x756>
   86de6:	4629      	mov	r1, r5
   86de8:	2300      	movs	r3, #0
   86dea:	220a      	movs	r2, #10
   86dec:	4620      	mov	r0, r4
   86dee:	f001 fcdf 	bl	887b0 <__multadd>
   86df2:	4605      	mov	r5, r0
   86df4:	3701      	adds	r7, #1
   86df6:	4649      	mov	r1, r9
   86df8:	4628      	mov	r0, r5
   86dfa:	f7ff fbb9 	bl	86570 <quorem>
   86dfe:	4557      	cmp	r7, sl
   86e00:	f100 0330 	add.w	r3, r0, #48	; 0x30
   86e04:	f808 3b01 	strb.w	r3, [r8], #1
   86e08:	dbed      	blt.n	86de6 <_dtoa_r+0x746>
   86e0a:	9a08      	ldr	r2, [sp, #32]
   86e0c:	2700      	movs	r7, #0
   86e0e:	2a00      	cmp	r2, #0
   86e10:	bfcc      	ite	gt
   86e12:	4693      	movgt	fp, r2
   86e14:	f04f 0b01 	movle.w	fp, #1
   86e18:	9a03      	ldr	r2, [sp, #12]
   86e1a:	4493      	add	fp, r2
   86e1c:	4629      	mov	r1, r5
   86e1e:	2201      	movs	r2, #1
   86e20:	4620      	mov	r0, r4
   86e22:	9304      	str	r3, [sp, #16]
   86e24:	f001 fe9a 	bl	88b5c <__lshift>
   86e28:	4649      	mov	r1, r9
   86e2a:	4605      	mov	r5, r0
   86e2c:	f001 ff0c 	bl	88c48 <__mcmp>
   86e30:	2800      	cmp	r0, #0
   86e32:	f340 81ab 	ble.w	8718c <_dtoa_r+0xaec>
   86e36:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
   86e3a:	9a03      	ldr	r2, [sp, #12]
   86e3c:	f10b 3bff 	add.w	fp, fp, #4294967295
   86e40:	e004      	b.n	86e4c <_dtoa_r+0x7ac>
   86e42:	455a      	cmp	r2, fp
   86e44:	f000 81ad 	beq.w	871a2 <_dtoa_r+0xb02>
   86e48:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   86e4c:	2b39      	cmp	r3, #57	; 0x39
   86e4e:	f10b 0a01 	add.w	sl, fp, #1
   86e52:	d0f6      	beq.n	86e42 <_dtoa_r+0x7a2>
   86e54:	3301      	adds	r3, #1
   86e56:	f88b 3000 	strb.w	r3, [fp]
   86e5a:	4649      	mov	r1, r9
   86e5c:	4620      	mov	r0, r4
   86e5e:	f001 fc9d 	bl	8879c <_Bfree>
   86e62:	b156      	cbz	r6, 86e7a <_dtoa_r+0x7da>
   86e64:	b12f      	cbz	r7, 86e72 <_dtoa_r+0x7d2>
   86e66:	42b7      	cmp	r7, r6
   86e68:	d003      	beq.n	86e72 <_dtoa_r+0x7d2>
   86e6a:	4639      	mov	r1, r7
   86e6c:	4620      	mov	r0, r4
   86e6e:	f001 fc95 	bl	8879c <_Bfree>
   86e72:	4631      	mov	r1, r6
   86e74:	4620      	mov	r0, r4
   86e76:	f001 fc91 	bl	8879c <_Bfree>
   86e7a:	4629      	mov	r1, r5
   86e7c:	4620      	mov	r0, r4
   86e7e:	f001 fc8d 	bl	8879c <_Bfree>
   86e82:	2300      	movs	r3, #0
   86e84:	9a07      	ldr	r2, [sp, #28]
   86e86:	f88a 3000 	strb.w	r3, [sl]
   86e8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86e8c:	601a      	str	r2, [r3, #0]
   86e8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86e90:	2b00      	cmp	r3, #0
   86e92:	f43f ac40 	beq.w	86716 <_dtoa_r+0x76>
   86e96:	9803      	ldr	r0, [sp, #12]
   86e98:	f8c3 a000 	str.w	sl, [r3]
   86e9c:	b019      	add	sp, #100	; 0x64
   86e9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86ea2:	201c      	movs	r0, #28
   86ea4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86ea6:	4407      	add	r7, r0
   86ea8:	4403      	add	r3, r0
   86eaa:	9309      	str	r3, [sp, #36]	; 0x24
   86eac:	9b06      	ldr	r3, [sp, #24]
   86eae:	4403      	add	r3, r0
   86eb0:	9306      	str	r3, [sp, #24]
   86eb2:	e771      	b.n	86d98 <_dtoa_r+0x6f8>
   86eb4:	2601      	movs	r6, #1
   86eb6:	e4b6      	b.n	86826 <_dtoa_r+0x186>
   86eb8:	f1c0 0020 	rsb	r0, r0, #32
   86ebc:	fa08 f000 	lsl.w	r0, r8, r0
   86ec0:	e44d      	b.n	8675e <_dtoa_r+0xbe>
   86ec2:	4601      	mov	r1, r0
   86ec4:	465a      	mov	r2, fp
   86ec6:	4620      	mov	r0, r4
   86ec8:	f001 fdec 	bl	88aa4 <__pow5mult>
   86ecc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86ece:	4681      	mov	r9, r0
   86ed0:	2b01      	cmp	r3, #1
   86ed2:	f340 81b6 	ble.w	87242 <_dtoa_r+0xba2>
   86ed6:	f04f 0a00 	mov.w	sl, #0
   86eda:	f8d9 3010 	ldr.w	r3, [r9, #16]
   86ede:	eb09 0383 	add.w	r3, r9, r3, lsl #2
   86ee2:	6918      	ldr	r0, [r3, #16]
   86ee4:	f001 fcb6 	bl	88854 <__hi0bits>
   86ee8:	f1c0 0020 	rsb	r0, r0, #32
   86eec:	e741      	b.n	86d72 <_dtoa_r+0x6d2>
   86eee:	bf00      	nop
   86ef0:	40240000 	.word	0x40240000
   86ef4:	0008a650 	.word	0x0008a650
   86ef8:	4631      	mov	r1, r6
   86efa:	2300      	movs	r3, #0
   86efc:	220a      	movs	r2, #10
   86efe:	4620      	mov	r0, r4
   86f00:	f001 fc56 	bl	887b0 <__multadd>
   86f04:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86f06:	4606      	mov	r6, r0
   86f08:	2b00      	cmp	r3, #0
   86f0a:	f340 82e9 	ble.w	874e0 <_dtoa_r+0xe40>
   86f0e:	e9cd 8307 	strd	r8, r3, [sp, #28]
   86f12:	2f00      	cmp	r7, #0
   86f14:	f300 811d 	bgt.w	87152 <_dtoa_r+0xab2>
   86f18:	f1ba 0f00 	cmp.w	sl, #0
   86f1c:	f040 81d9 	bne.w	872d2 <_dtoa_r+0xc32>
   86f20:	46b0      	mov	r8, r6
   86f22:	9b04      	ldr	r3, [sp, #16]
   86f24:	9908      	ldr	r1, [sp, #32]
   86f26:	f003 0201 	and.w	r2, r3, #1
   86f2a:	9b03      	ldr	r3, [sp, #12]
   86f2c:	920a      	str	r2, [sp, #40]	; 0x28
   86f2e:	461f      	mov	r7, r3
   86f30:	3b01      	subs	r3, #1
   86f32:	4419      	add	r1, r3
   86f34:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86f36:	9108      	str	r1, [sp, #32]
   86f38:	4313      	orrs	r3, r2
   86f3a:	9309      	str	r3, [sp, #36]	; 0x24
   86f3c:	4649      	mov	r1, r9
   86f3e:	4628      	mov	r0, r5
   86f40:	f7ff fb16 	bl	86570 <quorem>
   86f44:	4631      	mov	r1, r6
   86f46:	4683      	mov	fp, r0
   86f48:	4628      	mov	r0, r5
   86f4a:	f001 fe7d 	bl	88c48 <__mcmp>
   86f4e:	4642      	mov	r2, r8
   86f50:	4649      	mov	r1, r9
   86f52:	4682      	mov	sl, r0
   86f54:	4620      	mov	r0, r4
   86f56:	f001 fe97 	bl	88c88 <__mdiff>
   86f5a:	68c2      	ldr	r2, [r0, #12]
   86f5c:	4601      	mov	r1, r0
   86f5e:	f10b 0330 	add.w	r3, fp, #48	; 0x30
   86f62:	2a00      	cmp	r2, #0
   86f64:	d143      	bne.n	86fee <_dtoa_r+0x94e>
   86f66:	9004      	str	r0, [sp, #16]
   86f68:	4628      	mov	r0, r5
   86f6a:	9306      	str	r3, [sp, #24]
   86f6c:	f001 fe6c 	bl	88c48 <__mcmp>
   86f70:	4602      	mov	r2, r0
   86f72:	9904      	ldr	r1, [sp, #16]
   86f74:	4620      	mov	r0, r4
   86f76:	9204      	str	r2, [sp, #16]
   86f78:	f001 fc10 	bl	8879c <_Bfree>
   86f7c:	9a04      	ldr	r2, [sp, #16]
   86f7e:	9b06      	ldr	r3, [sp, #24]
   86f80:	b91a      	cbnz	r2, 86f8a <_dtoa_r+0x8ea>
   86f82:	9909      	ldr	r1, [sp, #36]	; 0x24
   86f84:	2900      	cmp	r1, #0
   86f86:	f000 829b 	beq.w	874c0 <_dtoa_r+0xe20>
   86f8a:	f1ba 0f00 	cmp.w	sl, #0
   86f8e:	f2c0 8164 	blt.w	8725a <_dtoa_r+0xbba>
   86f92:	9922      	ldr	r1, [sp, #136]	; 0x88
   86f94:	ea4a 0a01 	orr.w	sl, sl, r1
   86f98:	990a      	ldr	r1, [sp, #40]	; 0x28
   86f9a:	ea51 010a 	orrs.w	r1, r1, sl
   86f9e:	f000 815c 	beq.w	8725a <_dtoa_r+0xbba>
   86fa2:	2a00      	cmp	r2, #0
   86fa4:	f300 81b6 	bgt.w	87314 <_dtoa_r+0xc74>
   86fa8:	9a08      	ldr	r2, [sp, #32]
   86faa:	f107 0a01 	add.w	sl, r7, #1
   86fae:	4297      	cmp	r7, r2
   86fb0:	46d3      	mov	fp, sl
   86fb2:	703b      	strb	r3, [r7, #0]
   86fb4:	f000 81b4 	beq.w	87320 <_dtoa_r+0xc80>
   86fb8:	4629      	mov	r1, r5
   86fba:	2300      	movs	r3, #0
   86fbc:	220a      	movs	r2, #10
   86fbe:	4620      	mov	r0, r4
   86fc0:	f001 fbf6 	bl	887b0 <__multadd>
   86fc4:	4546      	cmp	r6, r8
   86fc6:	4605      	mov	r5, r0
   86fc8:	4631      	mov	r1, r6
   86fca:	f04f 0300 	mov.w	r3, #0
   86fce:	f04f 020a 	mov.w	r2, #10
   86fd2:	4620      	mov	r0, r4
   86fd4:	d012      	beq.n	86ffc <_dtoa_r+0x95c>
   86fd6:	f001 fbeb 	bl	887b0 <__multadd>
   86fda:	4641      	mov	r1, r8
   86fdc:	4606      	mov	r6, r0
   86fde:	2300      	movs	r3, #0
   86fe0:	220a      	movs	r2, #10
   86fe2:	4620      	mov	r0, r4
   86fe4:	f001 fbe4 	bl	887b0 <__multadd>
   86fe8:	4657      	mov	r7, sl
   86fea:	4680      	mov	r8, r0
   86fec:	e7a6      	b.n	86f3c <_dtoa_r+0x89c>
   86fee:	4620      	mov	r0, r4
   86ff0:	9304      	str	r3, [sp, #16]
   86ff2:	f001 fbd3 	bl	8879c <_Bfree>
   86ff6:	2201      	movs	r2, #1
   86ff8:	9b04      	ldr	r3, [sp, #16]
   86ffa:	e7c6      	b.n	86f8a <_dtoa_r+0x8ea>
   86ffc:	f001 fbd8 	bl	887b0 <__multadd>
   87000:	4657      	mov	r7, sl
   87002:	4606      	mov	r6, r0
   87004:	4680      	mov	r8, r0
   87006:	e799      	b.n	86f3c <_dtoa_r+0x89c>
   87008:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8700a:	2b02      	cmp	r3, #2
   8700c:	dc7a      	bgt.n	87104 <_dtoa_r+0xa64>
   8700e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   87010:	2b00      	cmp	r3, #0
   87012:	f47f af7e 	bne.w	86f12 <_dtoa_r+0x872>
   87016:	9b07      	ldr	r3, [sp, #28]
   87018:	4649      	mov	r1, r9
   8701a:	3301      	adds	r3, #1
   8701c:	4628      	mov	r0, r5
   8701e:	9307      	str	r3, [sp, #28]
   87020:	f7ff faa6 	bl	86570 <quorem>
   87024:	f8dd b00c 	ldr.w	fp, [sp, #12]
   87028:	f100 0330 	add.w	r3, r0, #48	; 0x30
   8702c:	2700      	movs	r7, #0
   8702e:	f80b 3b01 	strb.w	r3, [fp], #1
   87032:	e6f3      	b.n	86e1c <_dtoa_r+0x77c>
   87034:	4649      	mov	r1, r9
   87036:	4628      	mov	r0, r5
   87038:	f001 fe06 	bl	88c48 <__mcmp>
   8703c:	2800      	cmp	r0, #0
   8703e:	f6bf aec1 	bge.w	86dc4 <_dtoa_r+0x724>
   87042:	4629      	mov	r1, r5
   87044:	2300      	movs	r3, #0
   87046:	220a      	movs	r2, #10
   87048:	4620      	mov	r0, r4
   8704a:	f001 fbb1 	bl	887b0 <__multadd>
   8704e:	9b07      	ldr	r3, [sp, #28]
   87050:	4605      	mov	r5, r0
   87052:	f103 38ff 	add.w	r8, r3, #4294967295
   87056:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   87058:	2b00      	cmp	r3, #0
   8705a:	f47f af4d 	bne.w	86ef8 <_dtoa_r+0x858>
   8705e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   87060:	2b00      	cmp	r3, #0
   87062:	f340 8234 	ble.w	874ce <_dtoa_r+0xe2e>
   87066:	9308      	str	r3, [sp, #32]
   87068:	e6b7      	b.n	86dda <_dtoa_r+0x73a>
   8706a:	4bb0      	ldr	r3, [pc, #704]	; (8732c <_dtoa_r+0xc8c>)
   8706c:	9303      	str	r3, [sp, #12]
   8706e:	3303      	adds	r3, #3
   87070:	f7ff bbf4 	b.w	8685c <_dtoa_r+0x1bc>
   87074:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   87078:	2900      	cmp	r1, #0
   8707a:	f47f ae73 	bne.w	86d64 <_dtoa_r+0x6c4>
   8707e:	f3c2 0313 	ubfx	r3, r2, #0, #20
   87082:	2b00      	cmp	r3, #0
   87084:	f47f ae6e 	bne.w	86d64 <_dtoa_r+0x6c4>
   87088:	4ba9      	ldr	r3, [pc, #676]	; (87330 <_dtoa_r+0xc90>)
   8708a:	4013      	ands	r3, r2
   8708c:	2b00      	cmp	r3, #0
   8708e:	f000 8200 	beq.w	87492 <_dtoa_r+0xdf2>
   87092:	9b09      	ldr	r3, [sp, #36]	; 0x24
   87094:	f04f 0a01 	mov.w	sl, #1
   87098:	3301      	adds	r3, #1
   8709a:	9309      	str	r3, [sp, #36]	; 0x24
   8709c:	9b06      	ldr	r3, [sp, #24]
   8709e:	3301      	adds	r3, #1
   870a0:	9306      	str	r3, [sp, #24]
   870a2:	e661      	b.n	86d68 <_dtoa_r+0x6c8>
   870a4:	2301      	movs	r3, #1
   870a6:	930c      	str	r3, [sp, #48]	; 0x30
   870a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   870aa:	9a07      	ldr	r2, [sp, #28]
   870ac:	4413      	add	r3, r2
   870ae:	9312      	str	r3, [sp, #72]	; 0x48
   870b0:	3301      	adds	r3, #1
   870b2:	2b01      	cmp	r3, #1
   870b4:	461f      	mov	r7, r3
   870b6:	bfb8      	it	lt
   870b8:	2701      	movlt	r7, #1
   870ba:	9308      	str	r3, [sp, #32]
   870bc:	2100      	movs	r1, #0
   870be:	2f17      	cmp	r7, #23
   870c0:	6461      	str	r1, [r4, #68]	; 0x44
   870c2:	f77f ac1e 	ble.w	86902 <_dtoa_r+0x262>
   870c6:	2201      	movs	r2, #1
   870c8:	2304      	movs	r3, #4
   870ca:	005b      	lsls	r3, r3, #1
   870cc:	f103 0014 	add.w	r0, r3, #20
   870d0:	42b8      	cmp	r0, r7
   870d2:	4611      	mov	r1, r2
   870d4:	f102 0201 	add.w	r2, r2, #1
   870d8:	d9f7      	bls.n	870ca <_dtoa_r+0xa2a>
   870da:	6461      	str	r1, [r4, #68]	; 0x44
   870dc:	e411      	b.n	86902 <_dtoa_r+0x262>
   870de:	2301      	movs	r3, #1
   870e0:	930c      	str	r3, [sp, #48]	; 0x30
   870e2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   870e4:	2b00      	cmp	r3, #0
   870e6:	dd4c      	ble.n	87182 <_dtoa_r+0xae2>
   870e8:	461f      	mov	r7, r3
   870ea:	9312      	str	r3, [sp, #72]	; 0x48
   870ec:	9308      	str	r3, [sp, #32]
   870ee:	e7e5      	b.n	870bc <_dtoa_r+0xa1c>
   870f0:	2300      	movs	r3, #0
   870f2:	930c      	str	r3, [sp, #48]	; 0x30
   870f4:	e7d8      	b.n	870a8 <_dtoa_r+0xa08>
   870f6:	2300      	movs	r3, #0
   870f8:	930c      	str	r3, [sp, #48]	; 0x30
   870fa:	e7f2      	b.n	870e2 <_dtoa_r+0xa42>
   870fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   870fe:	f8cd 801c 	str.w	r8, [sp, #28]
   87102:	9308      	str	r3, [sp, #32]
   87104:	9b08      	ldr	r3, [sp, #32]
   87106:	2b00      	cmp	r3, #0
   87108:	f47f ad43 	bne.w	86b92 <_dtoa_r+0x4f2>
   8710c:	4649      	mov	r1, r9
   8710e:	2205      	movs	r2, #5
   87110:	4620      	mov	r0, r4
   87112:	f001 fb4d 	bl	887b0 <__multadd>
   87116:	4681      	mov	r9, r0
   87118:	4628      	mov	r0, r5
   8711a:	4649      	mov	r1, r9
   8711c:	f001 fd94 	bl	88c48 <__mcmp>
   87120:	2800      	cmp	r0, #0
   87122:	f77f ad36 	ble.w	86b92 <_dtoa_r+0x4f2>
   87126:	2331      	movs	r3, #49	; 0x31
   87128:	9803      	ldr	r0, [sp, #12]
   8712a:	9f07      	ldr	r7, [sp, #28]
   8712c:	4680      	mov	r8, r0
   8712e:	f800 3b01 	strb.w	r3, [r0], #1
   87132:	3701      	adds	r7, #1
   87134:	9003      	str	r0, [sp, #12]
   87136:	4649      	mov	r1, r9
   87138:	4620      	mov	r0, r4
   8713a:	f001 fb2f 	bl	8879c <_Bfree>
   8713e:	1c7b      	adds	r3, r7, #1
   87140:	f8dd a00c 	ldr.w	sl, [sp, #12]
   87144:	9307      	str	r3, [sp, #28]
   87146:	f8cd 800c 	str.w	r8, [sp, #12]
   8714a:	2e00      	cmp	r6, #0
   8714c:	f47f ae91 	bne.w	86e72 <_dtoa_r+0x7d2>
   87150:	e693      	b.n	86e7a <_dtoa_r+0x7da>
   87152:	4631      	mov	r1, r6
   87154:	463a      	mov	r2, r7
   87156:	4620      	mov	r0, r4
   87158:	f001 fd00 	bl	88b5c <__lshift>
   8715c:	4606      	mov	r6, r0
   8715e:	e6db      	b.n	86f18 <_dtoa_r+0x878>
   87160:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   87162:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   87166:	eba8 0303 	sub.w	r3, r8, r3
   8716a:	449b      	add	fp, r3
   8716c:	f04f 0800 	mov.w	r8, #0
   87170:	e588      	b.n	86c84 <_dtoa_r+0x5e4>
   87172:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   87176:	f04f 0a02 	mov.w	sl, #2
   8717a:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   8717e:	f7ff bbee 	b.w	8695e <_dtoa_r+0x2be>
   87182:	2301      	movs	r3, #1
   87184:	9323      	str	r3, [sp, #140]	; 0x8c
   87186:	9308      	str	r3, [sp, #32]
   87188:	f7ff bbb7 	b.w	868fa <_dtoa_r+0x25a>
   8718c:	d103      	bne.n	87196 <_dtoa_r+0xaf6>
   8718e:	9b04      	ldr	r3, [sp, #16]
   87190:	07d8      	lsls	r0, r3, #31
   87192:	f53f ae50 	bmi.w	86e36 <_dtoa_r+0x796>
   87196:	46da      	mov	sl, fp
   87198:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   8719c:	2b30      	cmp	r3, #48	; 0x30
   8719e:	d0fa      	beq.n	87196 <_dtoa_r+0xaf6>
   871a0:	e65b      	b.n	86e5a <_dtoa_r+0x7ba>
   871a2:	9b07      	ldr	r3, [sp, #28]
   871a4:	9a03      	ldr	r2, [sp, #12]
   871a6:	3301      	adds	r3, #1
   871a8:	9307      	str	r3, [sp, #28]
   871aa:	2331      	movs	r3, #49	; 0x31
   871ac:	7013      	strb	r3, [r2, #0]
   871ae:	e654      	b.n	86e5a <_dtoa_r+0x7ba>
   871b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   871b2:	2a00      	cmp	r2, #0
   871b4:	f000 8128 	beq.w	87408 <_dtoa_r+0xd68>
   871b8:	f203 4333 	addw	r3, r3, #1075	; 0x433
   871bc:	9a06      	ldr	r2, [sp, #24]
   871be:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   871c2:	441a      	add	r2, r3
   871c4:	9206      	str	r2, [sp, #24]
   871c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   871c8:	4617      	mov	r7, r2
   871ca:	441a      	add	r2, r3
   871cc:	9209      	str	r2, [sp, #36]	; 0x24
   871ce:	e564      	b.n	86c9a <_dtoa_r+0x5fa>
   871d0:	f04f 0900 	mov.w	r9, #0
   871d4:	464e      	mov	r6, r9
   871d6:	e4dc      	b.n	86b92 <_dtoa_r+0x4f2>
   871d8:	4629      	mov	r1, r5
   871da:	4620      	mov	r0, r4
   871dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   871de:	f001 fc61 	bl	88aa4 <__pow5mult>
   871e2:	4605      	mov	r5, r0
   871e4:	e5b1      	b.n	86d4a <_dtoa_r+0x6aa>
   871e6:	900e      	str	r0, [sp, #56]	; 0x38
   871e8:	e564      	b.n	86cb4 <_dtoa_r+0x614>
   871ea:	f000 8111 	beq.w	87410 <_dtoa_r+0xd70>
   871ee:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   871f2:	9a07      	ldr	r2, [sp, #28]
   871f4:	4b4f      	ldr	r3, [pc, #316]	; (87334 <_dtoa_r+0xc94>)
   871f6:	4256      	negs	r6, r2
   871f8:	f006 020f 	and.w	r2, r6, #15
   871fc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   87200:	e9d3 2300 	ldrd	r2, r3, [r3]
   87204:	f002 fd6c 	bl	89ce0 <__aeabi_dmul>
   87208:	1136      	asrs	r6, r6, #4
   8720a:	4680      	mov	r8, r0
   8720c:	4689      	mov	r9, r1
   8720e:	f000 8170 	beq.w	874f2 <_dtoa_r+0xe52>
   87212:	2300      	movs	r3, #0
   87214:	f04f 0a02 	mov.w	sl, #2
   87218:	4f47      	ldr	r7, [pc, #284]	; (87338 <_dtoa_r+0xc98>)
   8721a:	07f2      	lsls	r2, r6, #31
   8721c:	d506      	bpl.n	8722c <_dtoa_r+0xb8c>
   8721e:	e9d7 2300 	ldrd	r2, r3, [r7]
   87222:	f002 fd5d 	bl	89ce0 <__aeabi_dmul>
   87226:	2301      	movs	r3, #1
   87228:	f10a 0a01 	add.w	sl, sl, #1
   8722c:	1076      	asrs	r6, r6, #1
   8722e:	f107 0708 	add.w	r7, r7, #8
   87232:	d1f2      	bne.n	8721a <_dtoa_r+0xb7a>
   87234:	2b00      	cmp	r3, #0
   87236:	f43f abb1 	beq.w	8699c <_dtoa_r+0x2fc>
   8723a:	4680      	mov	r8, r0
   8723c:	4689      	mov	r9, r1
   8723e:	f7ff bbad 	b.w	8699c <_dtoa_r+0x2fc>
   87242:	9b04      	ldr	r3, [sp, #16]
   87244:	2b00      	cmp	r3, #0
   87246:	f47f ae46 	bne.w	86ed6 <_dtoa_r+0x836>
   8724a:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   8724e:	f3c2 0313 	ubfx	r3, r2, #0, #20
   87252:	2b00      	cmp	r3, #0
   87254:	f43f af18 	beq.w	87088 <_dtoa_r+0x9e8>
   87258:	e63d      	b.n	86ed6 <_dtoa_r+0x836>
   8725a:	2a00      	cmp	r2, #0
   8725c:	dd12      	ble.n	87284 <_dtoa_r+0xbe4>
   8725e:	4629      	mov	r1, r5
   87260:	2201      	movs	r2, #1
   87262:	4620      	mov	r0, r4
   87264:	9304      	str	r3, [sp, #16]
   87266:	f001 fc79 	bl	88b5c <__lshift>
   8726a:	4649      	mov	r1, r9
   8726c:	4605      	mov	r5, r0
   8726e:	f001 fceb 	bl	88c48 <__mcmp>
   87272:	2800      	cmp	r0, #0
   87274:	9b04      	ldr	r3, [sp, #16]
   87276:	f340 8117 	ble.w	874a8 <_dtoa_r+0xe08>
   8727a:	2b39      	cmp	r3, #57	; 0x39
   8727c:	f000 80fb 	beq.w	87476 <_dtoa_r+0xdd6>
   87280:	f10b 0331 	add.w	r3, fp, #49	; 0x31
   87284:	46ba      	mov	sl, r7
   87286:	9a07      	ldr	r2, [sp, #28]
   87288:	4637      	mov	r7, r6
   8728a:	3201      	adds	r2, #1
   8728c:	4646      	mov	r6, r8
   8728e:	9207      	str	r2, [sp, #28]
   87290:	f80a 3b01 	strb.w	r3, [sl], #1
   87294:	e5e1      	b.n	86e5a <_dtoa_r+0x7ba>
   87296:	9509      	str	r5, [sp, #36]	; 0x24
   87298:	9c06      	ldr	r4, [sp, #24]
   8729a:	9d04      	ldr	r5, [sp, #16]
   8729c:	4602      	mov	r2, r0
   8729e:	460b      	mov	r3, r1
   872a0:	f002 fb68 	bl	89974 <__adddf3>
   872a4:	4652      	mov	r2, sl
   872a6:	465b      	mov	r3, fp
   872a8:	4680      	mov	r8, r0
   872aa:	4689      	mov	r9, r1
   872ac:	f002 ffa8 	bl	8a200 <__aeabi_dcmpgt>
   872b0:	b960      	cbnz	r0, 872cc <_dtoa_r+0xc2c>
   872b2:	4652      	mov	r2, sl
   872b4:	465b      	mov	r3, fp
   872b6:	4640      	mov	r0, r8
   872b8:	4649      	mov	r1, r9
   872ba:	f002 ff79 	bl	8a1b0 <__aeabi_dcmpeq>
   872be:	2800      	cmp	r0, #0
   872c0:	f43f accb 	beq.w	86c5a <_dtoa_r+0x5ba>
   872c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   872c6:	07d9      	lsls	r1, r3, #31
   872c8:	f57f acc7 	bpl.w	86c5a <_dtoa_r+0x5ba>
   872cc:	9a03      	ldr	r2, [sp, #12]
   872ce:	f7ff bbff 	b.w	86ad0 <_dtoa_r+0x430>
   872d2:	4620      	mov	r0, r4
   872d4:	6871      	ldr	r1, [r6, #4]
   872d6:	f001 fa3b 	bl	88750 <_Balloc>
   872da:	4607      	mov	r7, r0
   872dc:	2800      	cmp	r0, #0
   872de:	f000 810c 	beq.w	874fa <_dtoa_r+0xe5a>
   872e2:	6933      	ldr	r3, [r6, #16]
   872e4:	f106 010c 	add.w	r1, r6, #12
   872e8:	3302      	adds	r3, #2
   872ea:	009a      	lsls	r2, r3, #2
   872ec:	300c      	adds	r0, #12
   872ee:	f7fc fadd 	bl	838ac <memcpy>
   872f2:	4639      	mov	r1, r7
   872f4:	2201      	movs	r2, #1
   872f6:	4620      	mov	r0, r4
   872f8:	f001 fc30 	bl	88b5c <__lshift>
   872fc:	4680      	mov	r8, r0
   872fe:	e610      	b.n	86f22 <_dtoa_r+0x882>
   87300:	4629      	mov	r1, r5
   87302:	4620      	mov	r0, r4
   87304:	f001 fbce 	bl	88aa4 <__pow5mult>
   87308:	4605      	mov	r5, r0
   8730a:	e51e      	b.n	86d4a <_dtoa_r+0x6aa>
   8730c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   87310:	1a9f      	subs	r7, r3, r2
   87312:	e4c2      	b.n	86c9a <_dtoa_r+0x5fa>
   87314:	2b39      	cmp	r3, #57	; 0x39
   87316:	f000 80ae 	beq.w	87476 <_dtoa_r+0xdd6>
   8731a:	46ba      	mov	sl, r7
   8731c:	3301      	adds	r3, #1
   8731e:	e7b2      	b.n	87286 <_dtoa_r+0xbe6>
   87320:	9a07      	ldr	r2, [sp, #28]
   87322:	4637      	mov	r7, r6
   87324:	3201      	adds	r2, #1
   87326:	4646      	mov	r6, r8
   87328:	9207      	str	r2, [sp, #28]
   8732a:	e577      	b.n	86e1c <_dtoa_r+0x77c>
   8732c:	0008a694 	.word	0x0008a694
   87330:	7ff00000 	.word	0x7ff00000
   87334:	0008a7f0 	.word	0x0008a7f0
   87338:	0008a7c8 	.word	0x0008a7c8
   8733c:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   87340:	4983      	ldr	r1, [pc, #524]	; (87550 <_dtoa_r+0xeb0>)
   87342:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   87346:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
   8734a:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   8734e:	f002 fcc7 	bl	89ce0 <__aeabi_dmul>
   87352:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   87356:	4649      	mov	r1, r9
   87358:	4640      	mov	r0, r8
   8735a:	f002 ff71 	bl	8a240 <__aeabi_d2iz>
   8735e:	4606      	mov	r6, r0
   87360:	f002 fc54 	bl	89c0c <__aeabi_i2d>
   87364:	460b      	mov	r3, r1
   87366:	4602      	mov	r2, r0
   87368:	4649      	mov	r1, r9
   8736a:	4640      	mov	r0, r8
   8736c:	f002 fb00 	bl	89970 <__aeabi_dsub>
   87370:	4653      	mov	r3, sl
   87372:	9f03      	ldr	r7, [sp, #12]
   87374:	3630      	adds	r6, #48	; 0x30
   87376:	2b01      	cmp	r3, #1
   87378:	4680      	mov	r8, r0
   8737a:	4689      	mov	r9, r1
   8737c:	f807 6b01 	strb.w	r6, [r7], #1
   87380:	f000 80ac 	beq.w	874dc <_dtoa_r+0xe3c>
   87384:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   87386:	9b03      	ldr	r3, [sp, #12]
   87388:	441e      	add	r6, r3
   8738a:	2200      	movs	r2, #0
   8738c:	4b71      	ldr	r3, [pc, #452]	; (87554 <_dtoa_r+0xeb4>)
   8738e:	4640      	mov	r0, r8
   87390:	4649      	mov	r1, r9
   87392:	f002 fca5 	bl	89ce0 <__aeabi_dmul>
   87396:	4689      	mov	r9, r1
   87398:	4680      	mov	r8, r0
   8739a:	f002 ff51 	bl	8a240 <__aeabi_d2iz>
   8739e:	4682      	mov	sl, r0
   873a0:	f002 fc34 	bl	89c0c <__aeabi_i2d>
   873a4:	4602      	mov	r2, r0
   873a6:	460b      	mov	r3, r1
   873a8:	4640      	mov	r0, r8
   873aa:	4649      	mov	r1, r9
   873ac:	f002 fae0 	bl	89970 <__aeabi_dsub>
   873b0:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
   873b4:	f807 ab01 	strb.w	sl, [r7], #1
   873b8:	42b7      	cmp	r7, r6
   873ba:	4680      	mov	r8, r0
   873bc:	4689      	mov	r9, r1
   873be:	d1e4      	bne.n	8738a <_dtoa_r+0xcea>
   873c0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   873c4:	2200      	movs	r2, #0
   873c6:	4b64      	ldr	r3, [pc, #400]	; (87558 <_dtoa_r+0xeb8>)
   873c8:	f002 fad4 	bl	89974 <__adddf3>
   873cc:	4642      	mov	r2, r8
   873ce:	464b      	mov	r3, r9
   873d0:	f002 fef8 	bl	8a1c4 <__aeabi_dcmplt>
   873d4:	2800      	cmp	r0, #0
   873d6:	d162      	bne.n	8749e <_dtoa_r+0xdfe>
   873d8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   873dc:	2000      	movs	r0, #0
   873de:	495e      	ldr	r1, [pc, #376]	; (87558 <_dtoa_r+0xeb8>)
   873e0:	f002 fac6 	bl	89970 <__aeabi_dsub>
   873e4:	4642      	mov	r2, r8
   873e6:	464b      	mov	r3, r9
   873e8:	f002 ff0a 	bl	8a200 <__aeabi_dcmpgt>
   873ec:	2800      	cmp	r0, #0
   873ee:	f43f aba9 	beq.w	86b44 <_dtoa_r+0x4a4>
   873f2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   873f6:	46b2      	mov	sl, r6
   873f8:	2b30      	cmp	r3, #48	; 0x30
   873fa:	f106 36ff 	add.w	r6, r6, #4294967295
   873fe:	d0f8      	beq.n	873f2 <_dtoa_r+0xd52>
   87400:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87402:	3301      	adds	r3, #1
   87404:	9307      	str	r3, [sp, #28]
   87406:	e538      	b.n	86e7a <_dtoa_r+0x7da>
   87408:	9b16      	ldr	r3, [sp, #88]	; 0x58
   8740a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   8740e:	e6d5      	b.n	871bc <_dtoa_r+0xb1c>
   87410:	f04f 0a02 	mov.w	sl, #2
   87414:	e9dd 890a 	ldrd	r8, r9, [sp, #40]	; 0x28
   87418:	f7ff bac0 	b.w	8699c <_dtoa_r+0x2fc>
   8741c:	9b08      	ldr	r3, [sp, #32]
   8741e:	2b00      	cmp	r3, #0
   87420:	f43f ab62 	beq.w	86ae8 <_dtoa_r+0x448>
   87424:	9b12      	ldr	r3, [sp, #72]	; 0x48
   87426:	2b00      	cmp	r3, #0
   87428:	f77f ab8c 	ble.w	86b44 <_dtoa_r+0x4a4>
   8742c:	9313      	str	r3, [sp, #76]	; 0x4c
   8742e:	9b07      	ldr	r3, [sp, #28]
   87430:	2200      	movs	r2, #0
   87432:	3b01      	subs	r3, #1
   87434:	4640      	mov	r0, r8
   87436:	4649      	mov	r1, r9
   87438:	9314      	str	r3, [sp, #80]	; 0x50
   8743a:	4b46      	ldr	r3, [pc, #280]	; (87554 <_dtoa_r+0xeb4>)
   8743c:	f002 fc50 	bl	89ce0 <__aeabi_dmul>
   87440:	4680      	mov	r8, r0
   87442:	4689      	mov	r9, r1
   87444:	f10a 0001 	add.w	r0, sl, #1
   87448:	f002 fbe0 	bl	89c0c <__aeabi_i2d>
   8744c:	4642      	mov	r2, r8
   8744e:	464b      	mov	r3, r9
   87450:	f002 fc46 	bl	89ce0 <__aeabi_dmul>
   87454:	4b41      	ldr	r3, [pc, #260]	; (8755c <_dtoa_r+0xebc>)
   87456:	2200      	movs	r2, #0
   87458:	f002 fa8c 	bl	89974 <__adddf3>
   8745c:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   87460:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   87464:	9311      	str	r3, [sp, #68]	; 0x44
   87466:	f7ff babc 	b.w	869e2 <_dtoa_r+0x342>
   8746a:	9b07      	ldr	r3, [sp, #28]
   8746c:	3301      	adds	r3, #1
   8746e:	9307      	str	r3, [sp, #28]
   87470:	2331      	movs	r3, #49	; 0x31
   87472:	f7ff bb34 	b.w	86ade <_dtoa_r+0x43e>
   87476:	9b07      	ldr	r3, [sp, #28]
   87478:	46bb      	mov	fp, r7
   8747a:	3301      	adds	r3, #1
   8747c:	9307      	str	r3, [sp, #28]
   8747e:	2339      	movs	r3, #57	; 0x39
   87480:	4637      	mov	r7, r6
   87482:	f80b 3b01 	strb.w	r3, [fp], #1
   87486:	4646      	mov	r6, r8
   87488:	e4d7      	b.n	86e3a <_dtoa_r+0x79a>
   8748a:	f04f 0900 	mov.w	r9, #0
   8748e:	464e      	mov	r6, r9
   87490:	e649      	b.n	87126 <_dtoa_r+0xa86>
   87492:	469a      	mov	sl, r3
   87494:	e468      	b.n	86d68 <_dtoa_r+0x6c8>
   87496:	9d10      	ldr	r5, [sp, #64]	; 0x40
   87498:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   8749a:	46b2      	mov	sl, r6
   8749c:	e7b0      	b.n	87400 <_dtoa_r+0xd60>
   8749e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   874a0:	9a03      	ldr	r2, [sp, #12]
   874a2:	9307      	str	r3, [sp, #28]
   874a4:	f7ff bb14 	b.w	86ad0 <_dtoa_r+0x430>
   874a8:	f47f aeec 	bne.w	87284 <_dtoa_r+0xbe4>
   874ac:	07da      	lsls	r2, r3, #31
   874ae:	f57f aee9 	bpl.w	87284 <_dtoa_r+0xbe4>
   874b2:	e6e2      	b.n	8727a <_dtoa_r+0xbda>
   874b4:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
   874b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
   874ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   874bc:	f7ff bb42 	b.w	86b44 <_dtoa_r+0x4a4>
   874c0:	2b39      	cmp	r3, #57	; 0x39
   874c2:	d0d8      	beq.n	87476 <_dtoa_r+0xdd6>
   874c4:	f1ba 0f00 	cmp.w	sl, #0
   874c8:	f73f aeda 	bgt.w	87280 <_dtoa_r+0xbe0>
   874cc:	e6da      	b.n	87284 <_dtoa_r+0xbe4>
   874ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
   874d0:	2b02      	cmp	r3, #2
   874d2:	f73f ae13 	bgt.w	870fc <_dtoa_r+0xa5c>
   874d6:	f8cd 801c 	str.w	r8, [sp, #28]
   874da:	e59c      	b.n	87016 <_dtoa_r+0x976>
   874dc:	463e      	mov	r6, r7
   874de:	e76f      	b.n	873c0 <_dtoa_r+0xd20>
   874e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   874e2:	2b02      	cmp	r3, #2
   874e4:	f73f ae0a 	bgt.w	870fc <_dtoa_r+0xa5c>
   874e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   874ea:	f8cd 801c 	str.w	r8, [sp, #28]
   874ee:	9308      	str	r3, [sp, #32]
   874f0:	e50f      	b.n	86f12 <_dtoa_r+0x872>
   874f2:	f04f 0a02 	mov.w	sl, #2
   874f6:	f7ff ba51 	b.w	8699c <_dtoa_r+0x2fc>
   874fa:	4602      	mov	r2, r0
   874fc:	f240 21ea 	movw	r1, #746	; 0x2ea
   87500:	4b17      	ldr	r3, [pc, #92]	; (87560 <_dtoa_r+0xec0>)
   87502:	4818      	ldr	r0, [pc, #96]	; (87564 <_dtoa_r+0xec4>)
   87504:	f002 f8a4 	bl	89650 <__assert_func>
   87508:	2600      	movs	r6, #0
   8750a:	4620      	mov	r0, r4
   8750c:	4631      	mov	r1, r6
   8750e:	6466      	str	r6, [r4, #68]	; 0x44
   87510:	f001 f91e 	bl	88750 <_Balloc>
   87514:	9003      	str	r0, [sp, #12]
   87516:	b978      	cbnz	r0, 87538 <_dtoa_r+0xe98>
   87518:	2200      	movs	r2, #0
   8751a:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   8751e:	4b10      	ldr	r3, [pc, #64]	; (87560 <_dtoa_r+0xec0>)
   87520:	4810      	ldr	r0, [pc, #64]	; (87564 <_dtoa_r+0xec4>)
   87522:	f002 f895 	bl	89650 <__assert_func>
   87526:	4b10      	ldr	r3, [pc, #64]	; (87568 <_dtoa_r+0xec8>)
   87528:	9303      	str	r3, [sp, #12]
   8752a:	f7ff b8f4 	b.w	86716 <_dtoa_r+0x76>
   8752e:	f43f ac33 	beq.w	86d98 <_dtoa_r+0x6f8>
   87532:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   87536:	e4b5      	b.n	86ea4 <_dtoa_r+0x804>
   87538:	9b03      	ldr	r3, [sp, #12]
   8753a:	2201      	movs	r2, #1
   8753c:	6423      	str	r3, [r4, #64]	; 0x40
   8753e:	f04f 33ff 	mov.w	r3, #4294967295
   87542:	9623      	str	r6, [sp, #140]	; 0x8c
   87544:	9312      	str	r3, [sp, #72]	; 0x48
   87546:	920c      	str	r2, [sp, #48]	; 0x30
   87548:	9308      	str	r3, [sp, #32]
   8754a:	f7ff bafb 	b.w	86b44 <_dtoa_r+0x4a4>
   8754e:	bf00      	nop
   87550:	0008a7f0 	.word	0x0008a7f0
   87554:	40240000 	.word	0x40240000
   87558:	3fe00000 	.word	0x3fe00000
   8755c:	401c0000 	.word	0x401c0000
   87560:	0008a6a4 	.word	0x0008a6a4
   87564:	0008a6b8 	.word	0x0008a6b8
   87568:	0008a698 	.word	0x0008a698

0008756c <__sflush_r>:
   8756c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
   87570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87572:	460c      	mov	r4, r1
   87574:	0711      	lsls	r1, r2, #28
   87576:	4607      	mov	r7, r0
   87578:	d443      	bmi.n	87602 <__sflush_r+0x96>
   8757a:	6863      	ldr	r3, [r4, #4]
   8757c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   87580:	2b00      	cmp	r3, #0
   87582:	81a2      	strh	r2, [r4, #12]
   87584:	dd5b      	ble.n	8763e <__sflush_r+0xd2>
   87586:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   87588:	2d00      	cmp	r5, #0
   8758a:	d056      	beq.n	8763a <__sflush_r+0xce>
   8758c:	2300      	movs	r3, #0
   8758e:	683e      	ldr	r6, [r7, #0]
   87590:	603b      	str	r3, [r7, #0]
   87592:	b293      	uxth	r3, r2
   87594:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   87598:	d155      	bne.n	87646 <__sflush_r+0xda>
   8759a:	2301      	movs	r3, #1
   8759c:	4638      	mov	r0, r7
   8759e:	69e1      	ldr	r1, [r4, #28]
   875a0:	47a8      	blx	r5
   875a2:	1c42      	adds	r2, r0, #1
   875a4:	d065      	beq.n	87672 <__sflush_r+0x106>
   875a6:	89a3      	ldrh	r3, [r4, #12]
   875a8:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   875aa:	075b      	lsls	r3, r3, #29
   875ac:	d505      	bpl.n	875ba <__sflush_r+0x4e>
   875ae:	6863      	ldr	r3, [r4, #4]
   875b0:	1ac0      	subs	r0, r0, r3
   875b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
   875b4:	b10b      	cbz	r3, 875ba <__sflush_r+0x4e>
   875b6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   875b8:	1ac0      	subs	r0, r0, r3
   875ba:	4602      	mov	r2, r0
   875bc:	69e1      	ldr	r1, [r4, #28]
   875be:	2300      	movs	r3, #0
   875c0:	4638      	mov	r0, r7
   875c2:	47a8      	blx	r5
   875c4:	1c41      	adds	r1, r0, #1
   875c6:	d140      	bne.n	8764a <__sflush_r+0xde>
   875c8:	683b      	ldr	r3, [r7, #0]
   875ca:	2b00      	cmp	r3, #0
   875cc:	d03d      	beq.n	8764a <__sflush_r+0xde>
   875ce:	2b1d      	cmp	r3, #29
   875d0:	d001      	beq.n	875d6 <__sflush_r+0x6a>
   875d2:	2b16      	cmp	r3, #22
   875d4:	d154      	bne.n	87680 <__sflush_r+0x114>
   875d6:	2200      	movs	r2, #0
   875d8:	89a3      	ldrh	r3, [r4, #12]
   875da:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   875de:	81a3      	strh	r3, [r4, #12]
   875e0:	6923      	ldr	r3, [r4, #16]
   875e2:	e9c4 3200 	strd	r3, r2, [r4]
   875e6:	6b21      	ldr	r1, [r4, #48]	; 0x30
   875e8:	603e      	str	r6, [r7, #0]
   875ea:	b331      	cbz	r1, 8763a <__sflush_r+0xce>
   875ec:	f104 0340 	add.w	r3, r4, #64	; 0x40
   875f0:	4299      	cmp	r1, r3
   875f2:	d002      	beq.n	875fa <__sflush_r+0x8e>
   875f4:	4638      	mov	r0, r7
   875f6:	f000 f9fb 	bl	879f0 <_free_r>
   875fa:	2300      	movs	r3, #0
   875fc:	4618      	mov	r0, r3
   875fe:	6323      	str	r3, [r4, #48]	; 0x30
   87600:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87602:	6926      	ldr	r6, [r4, #16]
   87604:	b1ce      	cbz	r6, 8763a <__sflush_r+0xce>
   87606:	b293      	uxth	r3, r2
   87608:	079a      	lsls	r2, r3, #30
   8760a:	bf18      	it	ne
   8760c:	2300      	movne	r3, #0
   8760e:	6825      	ldr	r5, [r4, #0]
   87610:	bf08      	it	eq
   87612:	6963      	ldreq	r3, [r4, #20]
   87614:	6026      	str	r6, [r4, #0]
   87616:	1bad      	subs	r5, r5, r6
   87618:	60a3      	str	r3, [r4, #8]
   8761a:	e00c      	b.n	87636 <__sflush_r+0xca>
   8761c:	462b      	mov	r3, r5
   8761e:	4632      	mov	r2, r6
   87620:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87624:	4638      	mov	r0, r7
   87626:	69e1      	ldr	r1, [r4, #28]
   87628:	47e0      	blx	ip
   8762a:	f1b0 0c00 	subs.w	ip, r0, #0
   8762e:	eba5 050c 	sub.w	r5, r5, ip
   87632:	4466      	add	r6, ip
   87634:	dd16      	ble.n	87664 <__sflush_r+0xf8>
   87636:	2d00      	cmp	r5, #0
   87638:	dcf0      	bgt.n	8761c <__sflush_r+0xb0>
   8763a:	2000      	movs	r0, #0
   8763c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8763e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   87640:	2b00      	cmp	r3, #0
   87642:	dca0      	bgt.n	87586 <__sflush_r+0x1a>
   87644:	e7f9      	b.n	8763a <__sflush_r+0xce>
   87646:	6d20      	ldr	r0, [r4, #80]	; 0x50
   87648:	e7af      	b.n	875aa <__sflush_r+0x3e>
   8764a:	2200      	movs	r2, #0
   8764c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87650:	6062      	str	r2, [r4, #4]
   87652:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   87656:	6922      	ldr	r2, [r4, #16]
   87658:	81a3      	strh	r3, [r4, #12]
   8765a:	04db      	lsls	r3, r3, #19
   8765c:	6022      	str	r2, [r4, #0]
   8765e:	d5c2      	bpl.n	875e6 <__sflush_r+0x7a>
   87660:	6520      	str	r0, [r4, #80]	; 0x50
   87662:	e7c0      	b.n	875e6 <__sflush_r+0x7a>
   87664:	89a3      	ldrh	r3, [r4, #12]
   87666:	f04f 30ff 	mov.w	r0, #4294967295
   8766a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8766e:	81a3      	strh	r3, [r4, #12]
   87670:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87672:	683b      	ldr	r3, [r7, #0]
   87674:	2b00      	cmp	r3, #0
   87676:	d096      	beq.n	875a6 <__sflush_r+0x3a>
   87678:	2b1d      	cmp	r3, #29
   8767a:	d006      	beq.n	8768a <__sflush_r+0x11e>
   8767c:	2b16      	cmp	r3, #22
   8767e:	d004      	beq.n	8768a <__sflush_r+0x11e>
   87680:	89a3      	ldrh	r3, [r4, #12]
   87682:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87686:	81a3      	strh	r3, [r4, #12]
   87688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8768a:	2000      	movs	r0, #0
   8768c:	603e      	str	r6, [r7, #0]
   8768e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00087690 <_fflush_r>:
   87690:	b538      	push	{r3, r4, r5, lr}
   87692:	4605      	mov	r5, r0
   87694:	460c      	mov	r4, r1
   87696:	b108      	cbz	r0, 8769c <_fflush_r+0xc>
   87698:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8769a:	b1a3      	cbz	r3, 876c6 <_fflush_r+0x36>
   8769c:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   876a0:	b1b8      	cbz	r0, 876d2 <_fflush_r+0x42>
   876a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
   876a4:	07db      	lsls	r3, r3, #31
   876a6:	d401      	bmi.n	876ac <_fflush_r+0x1c>
   876a8:	0581      	lsls	r1, r0, #22
   876aa:	d515      	bpl.n	876d8 <_fflush_r+0x48>
   876ac:	4628      	mov	r0, r5
   876ae:	4621      	mov	r1, r4
   876b0:	f7ff ff5c 	bl	8756c <__sflush_r>
   876b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   876b6:	4605      	mov	r5, r0
   876b8:	07da      	lsls	r2, r3, #31
   876ba:	d402      	bmi.n	876c2 <_fflush_r+0x32>
   876bc:	89a3      	ldrh	r3, [r4, #12]
   876be:	059b      	lsls	r3, r3, #22
   876c0:	d50e      	bpl.n	876e0 <_fflush_r+0x50>
   876c2:	4628      	mov	r0, r5
   876c4:	bd38      	pop	{r3, r4, r5, pc}
   876c6:	f000 f817 	bl	876f8 <__sinit>
   876ca:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   876ce:	2800      	cmp	r0, #0
   876d0:	d1e7      	bne.n	876a2 <_fflush_r+0x12>
   876d2:	4605      	mov	r5, r0
   876d4:	4628      	mov	r0, r5
   876d6:	bd38      	pop	{r3, r4, r5, pc}
   876d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   876da:	f000 fc33 	bl	87f44 <__retarget_lock_acquire_recursive>
   876de:	e7e5      	b.n	876ac <_fflush_r+0x1c>
   876e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   876e2:	f000 fc31 	bl	87f48 <__retarget_lock_release_recursive>
   876e6:	4628      	mov	r0, r5
   876e8:	bd38      	pop	{r3, r4, r5, pc}
   876ea:	bf00      	nop

000876ec <_cleanup_r>:
   876ec:	4901      	ldr	r1, [pc, #4]	; (876f4 <_cleanup_r+0x8>)
   876ee:	f000 bbf7 	b.w	87ee0 <_fwalk_reent>
   876f2:	bf00      	nop
   876f4:	00089739 	.word	0x00089739

000876f8 <__sinit>:
   876f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   876fc:	4682      	mov	sl, r0
   876fe:	4839      	ldr	r0, [pc, #228]	; (877e4 <__sinit+0xec>)
   87700:	f000 fc20 	bl	87f44 <__retarget_lock_acquire_recursive>
   87704:	f8da 4038 	ldr.w	r4, [sl, #56]	; 0x38
   87708:	2c00      	cmp	r4, #0
   8770a:	d166      	bne.n	877da <__sinit+0xe2>
   8770c:	2304      	movs	r3, #4
   8770e:	2203      	movs	r2, #3
   87710:	4935      	ldr	r1, [pc, #212]	; (877e8 <__sinit+0xf0>)
   87712:	f8da 5004 	ldr.w	r5, [sl, #4]
   87716:	f8ca 103c 	str.w	r1, [sl, #60]	; 0x3c
   8771a:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 877ec <__sinit+0xf4>
   8771e:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 877f0 <__sinit+0xf8>
   87722:	4f34      	ldr	r7, [pc, #208]	; (877f4 <__sinit+0xfc>)
   87724:	4e34      	ldr	r6, [pc, #208]	; (877f8 <__sinit+0x100>)
   87726:	f50a 713b 	add.w	r1, sl, #748	; 0x2ec
   8772a:	e9ca 21b9 	strd	r2, r1, [sl, #740]	; 0x2e4
   8772e:	f8ca 42e0 	str.w	r4, [sl, #736]	; 0x2e0
   87732:	4621      	mov	r1, r4
   87734:	60eb      	str	r3, [r5, #12]
   87736:	2208      	movs	r2, #8
   87738:	e9c5 4400 	strd	r4, r4, [r5]
   8773c:	e9c5 4404 	strd	r4, r4, [r5, #16]
   87740:	666c      	str	r4, [r5, #100]	; 0x64
   87742:	60ac      	str	r4, [r5, #8]
   87744:	61ac      	str	r4, [r5, #24]
   87746:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   8774a:	f7fc f925 	bl	83998 <memset>
   8774e:	e9c5 5907 	strd	r5, r9, [r5, #28]
   87752:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   87756:	62ee      	str	r6, [r5, #44]	; 0x2c
   87758:	f105 0058 	add.w	r0, r5, #88	; 0x58
   8775c:	f000 fbee 	bl	87f3c <__retarget_lock_init_recursive>
   87760:	f8da 5008 	ldr.w	r5, [sl, #8]
   87764:	4b25      	ldr	r3, [pc, #148]	; (877fc <__sinit+0x104>)
   87766:	4621      	mov	r1, r4
   87768:	60eb      	str	r3, [r5, #12]
   8776a:	2208      	movs	r2, #8
   8776c:	e9c5 4400 	strd	r4, r4, [r5]
   87770:	e9c5 4404 	strd	r4, r4, [r5, #16]
   87774:	666c      	str	r4, [r5, #100]	; 0x64
   87776:	60ac      	str	r4, [r5, #8]
   87778:	61ac      	str	r4, [r5, #24]
   8777a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   8777e:	f7fc f90b 	bl	83998 <memset>
   87782:	e9c5 5907 	strd	r5, r9, [r5, #28]
   87786:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   8778a:	62ee      	str	r6, [r5, #44]	; 0x2c
   8778c:	f105 0058 	add.w	r0, r5, #88	; 0x58
   87790:	f000 fbd4 	bl	87f3c <__retarget_lock_init_recursive>
   87794:	f8da 500c 	ldr.w	r5, [sl, #12]
   87798:	4b19      	ldr	r3, [pc, #100]	; (87800 <__sinit+0x108>)
   8779a:	4621      	mov	r1, r4
   8779c:	60eb      	str	r3, [r5, #12]
   8779e:	2208      	movs	r2, #8
   877a0:	e9c5 4400 	strd	r4, r4, [r5]
   877a4:	e9c5 4404 	strd	r4, r4, [r5, #16]
   877a8:	666c      	str	r4, [r5, #100]	; 0x64
   877aa:	60ac      	str	r4, [r5, #8]
   877ac:	61ac      	str	r4, [r5, #24]
   877ae:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   877b2:	f7fc f8f1 	bl	83998 <memset>
   877b6:	f105 0058 	add.w	r0, r5, #88	; 0x58
   877ba:	e9c5 5907 	strd	r5, r9, [r5, #28]
   877be:	e9c5 760a 	strd	r7, r6, [r5, #40]	; 0x28
   877c2:	f8c5 8024 	str.w	r8, [r5, #36]	; 0x24
   877c6:	f000 fbb9 	bl	87f3c <__retarget_lock_init_recursive>
   877ca:	2301      	movs	r3, #1
   877cc:	4805      	ldr	r0, [pc, #20]	; (877e4 <__sinit+0xec>)
   877ce:	f8ca 3038 	str.w	r3, [sl, #56]	; 0x38
   877d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   877d6:	f000 bbb7 	b.w	87f48 <__retarget_lock_release_recursive>
   877da:	4802      	ldr	r0, [pc, #8]	; (877e4 <__sinit+0xec>)
   877dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   877e0:	f000 bbb2 	b.w	87f48 <__retarget_lock_release_recursive>
   877e4:	20001388 	.word	0x20001388
   877e8:	000876ed 	.word	0x000876ed
   877ec:	00089309 	.word	0x00089309
   877f0:	0008932d 	.word	0x0008932d
   877f4:	0008936d 	.word	0x0008936d
   877f8:	0008938d 	.word	0x0008938d
   877fc:	00010009 	.word	0x00010009
   87800:	00020012 	.word	0x00020012

00087804 <__sfp_lock_acquire>:
   87804:	4801      	ldr	r0, [pc, #4]	; (8780c <__sfp_lock_acquire+0x8>)
   87806:	f000 bb9d 	b.w	87f44 <__retarget_lock_acquire_recursive>
   8780a:	bf00      	nop
   8780c:	20001384 	.word	0x20001384

00087810 <__sfp_lock_release>:
   87810:	4801      	ldr	r0, [pc, #4]	; (87818 <__sfp_lock_release+0x8>)
   87812:	f000 bb99 	b.w	87f48 <__retarget_lock_release_recursive>
   87816:	bf00      	nop
   87818:	20001384 	.word	0x20001384

0008781c <__libc_fini_array>:
   8781c:	b538      	push	{r3, r4, r5, lr}
   8781e:	4b08      	ldr	r3, [pc, #32]	; (87840 <__libc_fini_array+0x24>)
   87820:	4d08      	ldr	r5, [pc, #32]	; (87844 <__libc_fini_array+0x28>)
   87822:	1b5b      	subs	r3, r3, r5
   87824:	109c      	asrs	r4, r3, #2
   87826:	d007      	beq.n	87838 <__libc_fini_array+0x1c>
   87828:	3b04      	subs	r3, #4
   8782a:	441d      	add	r5, r3
   8782c:	3c01      	subs	r4, #1
   8782e:	f855 3904 	ldr.w	r3, [r5], #-4
   87832:	4798      	blx	r3
   87834:	2c00      	cmp	r4, #0
   87836:	d1f9      	bne.n	8782c <__libc_fini_array+0x10>
   87838:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8783c:	f003 b8ee 	b.w	8aa1c <_fini>
   87840:	0008aa2c 	.word	0x0008aa2c
   87844:	0008aa28 	.word	0x0008aa28

00087848 <__fputwc>:
   87848:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8784c:	b083      	sub	sp, #12
   8784e:	4607      	mov	r7, r0
   87850:	4688      	mov	r8, r1
   87852:	4614      	mov	r4, r2
   87854:	f000 fb68 	bl	87f28 <__locale_mb_cur_max>
   87858:	2801      	cmp	r0, #1
   8785a:	d103      	bne.n	87864 <__fputwc+0x1c>
   8785c:	f108 33ff 	add.w	r3, r8, #4294967295
   87860:	2bfe      	cmp	r3, #254	; 0xfe
   87862:	d933      	bls.n	878cc <__fputwc+0x84>
   87864:	4642      	mov	r2, r8
   87866:	4638      	mov	r0, r7
   87868:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   8786c:	a901      	add	r1, sp, #4
   8786e:	f001 fe67 	bl	89540 <_wcrtomb_r>
   87872:	1c42      	adds	r2, r0, #1
   87874:	4606      	mov	r6, r0
   87876:	d02f      	beq.n	878d8 <__fputwc+0x90>
   87878:	b318      	cbz	r0, 878c2 <__fputwc+0x7a>
   8787a:	f89d 1004 	ldrb.w	r1, [sp, #4]
   8787e:	2500      	movs	r5, #0
   87880:	f10d 0905 	add.w	r9, sp, #5
   87884:	e008      	b.n	87898 <__fputwc+0x50>
   87886:	6823      	ldr	r3, [r4, #0]
   87888:	1c5a      	adds	r2, r3, #1
   8788a:	6022      	str	r2, [r4, #0]
   8788c:	7019      	strb	r1, [r3, #0]
   8788e:	3501      	adds	r5, #1
   87890:	42b5      	cmp	r5, r6
   87892:	d216      	bcs.n	878c2 <__fputwc+0x7a>
   87894:	f819 1b01 	ldrb.w	r1, [r9], #1
   87898:	68a3      	ldr	r3, [r4, #8]
   8789a:	3b01      	subs	r3, #1
   8789c:	2b00      	cmp	r3, #0
   8789e:	60a3      	str	r3, [r4, #8]
   878a0:	daf1      	bge.n	87886 <__fputwc+0x3e>
   878a2:	69a2      	ldr	r2, [r4, #24]
   878a4:	4293      	cmp	r3, r2
   878a6:	db01      	blt.n	878ac <__fputwc+0x64>
   878a8:	290a      	cmp	r1, #10
   878aa:	d1ec      	bne.n	87886 <__fputwc+0x3e>
   878ac:	4622      	mov	r2, r4
   878ae:	4638      	mov	r0, r7
   878b0:	f001 fdee 	bl	89490 <__swbuf_r>
   878b4:	1c43      	adds	r3, r0, #1
   878b6:	d1ea      	bne.n	8788e <__fputwc+0x46>
   878b8:	4606      	mov	r6, r0
   878ba:	4630      	mov	r0, r6
   878bc:	b003      	add	sp, #12
   878be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   878c2:	4646      	mov	r6, r8
   878c4:	4630      	mov	r0, r6
   878c6:	b003      	add	sp, #12
   878c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   878cc:	fa5f f188 	uxtb.w	r1, r8
   878d0:	4606      	mov	r6, r0
   878d2:	f88d 1004 	strb.w	r1, [sp, #4]
   878d6:	e7d2      	b.n	8787e <__fputwc+0x36>
   878d8:	4630      	mov	r0, r6
   878da:	89a3      	ldrh	r3, [r4, #12]
   878dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   878e0:	81a3      	strh	r3, [r4, #12]
   878e2:	b003      	add	sp, #12
   878e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000878e8 <_fputwc_r>:
   878e8:	b530      	push	{r4, r5, lr}
   878ea:	6e53      	ldr	r3, [r2, #100]	; 0x64
   878ec:	4614      	mov	r4, r2
   878ee:	f013 0f01 	tst.w	r3, #1
   878f2:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   878f6:	4605      	mov	r5, r0
   878f8:	b083      	sub	sp, #12
   878fa:	b29a      	uxth	r2, r3
   878fc:	d101      	bne.n	87902 <_fputwc_r+0x1a>
   878fe:	0598      	lsls	r0, r3, #22
   87900:	d51c      	bpl.n	8793c <_fputwc_r+0x54>
   87902:	0490      	lsls	r0, r2, #18
   87904:	d406      	bmi.n	87914 <_fputwc_r+0x2c>
   87906:	6e62      	ldr	r2, [r4, #100]	; 0x64
   87908:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8790c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   87910:	81a3      	strh	r3, [r4, #12]
   87912:	6662      	str	r2, [r4, #100]	; 0x64
   87914:	4622      	mov	r2, r4
   87916:	4628      	mov	r0, r5
   87918:	f7ff ff96 	bl	87848 <__fputwc>
   8791c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8791e:	4605      	mov	r5, r0
   87920:	07da      	lsls	r2, r3, #31
   87922:	d402      	bmi.n	8792a <_fputwc_r+0x42>
   87924:	89a3      	ldrh	r3, [r4, #12]
   87926:	059b      	lsls	r3, r3, #22
   87928:	d502      	bpl.n	87930 <_fputwc_r+0x48>
   8792a:	4628      	mov	r0, r5
   8792c:	b003      	add	sp, #12
   8792e:	bd30      	pop	{r4, r5, pc}
   87930:	6da0      	ldr	r0, [r4, #88]	; 0x58
   87932:	f000 fb09 	bl	87f48 <__retarget_lock_release_recursive>
   87936:	4628      	mov	r0, r5
   87938:	b003      	add	sp, #12
   8793a:	bd30      	pop	{r4, r5, pc}
   8793c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8793e:	9101      	str	r1, [sp, #4]
   87940:	f000 fb00 	bl	87f44 <__retarget_lock_acquire_recursive>
   87944:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87948:	9901      	ldr	r1, [sp, #4]
   8794a:	b29a      	uxth	r2, r3
   8794c:	e7d9      	b.n	87902 <_fputwc_r+0x1a>
   8794e:	bf00      	nop

00087950 <_malloc_trim_r>:
   87950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87952:	460c      	mov	r4, r1
   87954:	4f23      	ldr	r7, [pc, #140]	; (879e4 <_malloc_trim_r+0x94>)
   87956:	4606      	mov	r6, r0
   87958:	f000 feee 	bl	88738 <__malloc_lock>
   8795c:	68bb      	ldr	r3, [r7, #8]
   8795e:	685d      	ldr	r5, [r3, #4]
   87960:	f5c4 637e 	rsb	r3, r4, #4064	; 0xfe0
   87964:	f025 0503 	bic.w	r5, r5, #3
   87968:	330f      	adds	r3, #15
   8796a:	442b      	add	r3, r5
   8796c:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
   87970:	f023 030f 	bic.w	r3, r3, #15
   87974:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
   87978:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   8797c:	db07      	blt.n	8798e <_malloc_trim_r+0x3e>
   8797e:	2100      	movs	r1, #0
   87980:	4630      	mov	r0, r6
   87982:	f001 fcaf 	bl	892e4 <_sbrk_r>
   87986:	68bb      	ldr	r3, [r7, #8]
   87988:	442b      	add	r3, r5
   8798a:	4298      	cmp	r0, r3
   8798c:	d004      	beq.n	87998 <_malloc_trim_r+0x48>
   8798e:	4630      	mov	r0, r6
   87990:	f000 fed8 	bl	88744 <__malloc_unlock>
   87994:	2000      	movs	r0, #0
   87996:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87998:	4630      	mov	r0, r6
   8799a:	4261      	negs	r1, r4
   8799c:	f001 fca2 	bl	892e4 <_sbrk_r>
   879a0:	3001      	adds	r0, #1
   879a2:	d00d      	beq.n	879c0 <_malloc_trim_r+0x70>
   879a4:	4a10      	ldr	r2, [pc, #64]	; (879e8 <_malloc_trim_r+0x98>)
   879a6:	68bb      	ldr	r3, [r7, #8]
   879a8:	1b2d      	subs	r5, r5, r4
   879aa:	f045 0501 	orr.w	r5, r5, #1
   879ae:	605d      	str	r5, [r3, #4]
   879b0:	6813      	ldr	r3, [r2, #0]
   879b2:	4630      	mov	r0, r6
   879b4:	1b1b      	subs	r3, r3, r4
   879b6:	6013      	str	r3, [r2, #0]
   879b8:	f000 fec4 	bl	88744 <__malloc_unlock>
   879bc:	2001      	movs	r0, #1
   879be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   879c0:	2100      	movs	r1, #0
   879c2:	4630      	mov	r0, r6
   879c4:	f001 fc8e 	bl	892e4 <_sbrk_r>
   879c8:	68ba      	ldr	r2, [r7, #8]
   879ca:	1a83      	subs	r3, r0, r2
   879cc:	2b0f      	cmp	r3, #15
   879ce:	ddde      	ble.n	8798e <_malloc_trim_r+0x3e>
   879d0:	f043 0301 	orr.w	r3, r3, #1
   879d4:	6053      	str	r3, [r2, #4]
   879d6:	4b05      	ldr	r3, [pc, #20]	; (879ec <_malloc_trim_r+0x9c>)
   879d8:	4903      	ldr	r1, [pc, #12]	; (879e8 <_malloc_trim_r+0x98>)
   879da:	681b      	ldr	r3, [r3, #0]
   879dc:	1ac0      	subs	r0, r0, r3
   879de:	6008      	str	r0, [r1, #0]
   879e0:	e7d5      	b.n	8798e <_malloc_trim_r+0x3e>
   879e2:	bf00      	nop
   879e4:	20000940 	.word	0x20000940
   879e8:	2000138c 	.word	0x2000138c
   879ec:	20000d48 	.word	0x20000d48

000879f0 <_free_r>:
   879f0:	2900      	cmp	r1, #0
   879f2:	d05e      	beq.n	87ab2 <_free_r+0xc2>
   879f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   879f6:	460c      	mov	r4, r1
   879f8:	4606      	mov	r6, r0
   879fa:	f000 fe9d 	bl	88738 <__malloc_lock>
   879fe:	f854 2c04 	ldr.w	r2, [r4, #-4]
   87a02:	4f78      	ldr	r7, [pc, #480]	; (87be4 <_free_r+0x1f4>)
   87a04:	f1a4 0508 	sub.w	r5, r4, #8
   87a08:	f022 0101 	bic.w	r1, r2, #1
   87a0c:	1868      	adds	r0, r5, r1
   87a0e:	f8d7 c008 	ldr.w	ip, [r7, #8]
   87a12:	6843      	ldr	r3, [r0, #4]
   87a14:	4584      	cmp	ip, r0
   87a16:	f023 0303 	bic.w	r3, r3, #3
   87a1a:	f000 8087 	beq.w	87b2c <_free_r+0x13c>
   87a1e:	07d2      	lsls	r2, r2, #31
   87a20:	6043      	str	r3, [r0, #4]
   87a22:	d434      	bmi.n	87a8e <_free_r+0x9e>
   87a24:	f854 2c08 	ldr.w	r2, [r4, #-8]
   87a28:	f107 0408 	add.w	r4, r7, #8
   87a2c:	1aad      	subs	r5, r5, r2
   87a2e:	4411      	add	r1, r2
   87a30:	68aa      	ldr	r2, [r5, #8]
   87a32:	42a2      	cmp	r2, r4
   87a34:	d068      	beq.n	87b08 <_free_r+0x118>
   87a36:	eb00 0c03 	add.w	ip, r0, r3
   87a3a:	f8dc e004 	ldr.w	lr, [ip, #4]
   87a3e:	f8d5 c00c 	ldr.w	ip, [r5, #12]
   87a42:	f01e 0f01 	tst.w	lr, #1
   87a46:	f8c2 c00c 	str.w	ip, [r2, #12]
   87a4a:	f8cc 2008 	str.w	r2, [ip, #8]
   87a4e:	f000 8091 	beq.w	87b74 <_free_r+0x184>
   87a52:	f041 0301 	orr.w	r3, r1, #1
   87a56:	606b      	str	r3, [r5, #4]
   87a58:	6001      	str	r1, [r0, #0]
   87a5a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   87a5e:	d231      	bcs.n	87ac4 <_free_r+0xd4>
   87a60:	094a      	lsrs	r2, r1, #5
   87a62:	08cb      	lsrs	r3, r1, #3
   87a64:	2101      	movs	r1, #1
   87a66:	4091      	lsls	r1, r2
   87a68:	687a      	ldr	r2, [r7, #4]
   87a6a:	3301      	adds	r3, #1
   87a6c:	4311      	orrs	r1, r2
   87a6e:	6079      	str	r1, [r7, #4]
   87a70:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
   87a74:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
   87a78:	3a08      	subs	r2, #8
   87a7a:	e9c5 1202 	strd	r1, r2, [r5, #8]
   87a7e:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
   87a82:	60cd      	str	r5, [r1, #12]
   87a84:	4630      	mov	r0, r6
   87a86:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87a8a:	f000 be5b 	b.w	88744 <__malloc_unlock>
   87a8e:	18c2      	adds	r2, r0, r3
   87a90:	6852      	ldr	r2, [r2, #4]
   87a92:	07d2      	lsls	r2, r2, #31
   87a94:	d40e      	bmi.n	87ab4 <_free_r+0xc4>
   87a96:	4419      	add	r1, r3
   87a98:	f107 0408 	add.w	r4, r7, #8
   87a9c:	6883      	ldr	r3, [r0, #8]
   87a9e:	42a3      	cmp	r3, r4
   87aa0:	d070      	beq.n	87b84 <_free_r+0x194>
   87aa2:	68c2      	ldr	r2, [r0, #12]
   87aa4:	60da      	str	r2, [r3, #12]
   87aa6:	6093      	str	r3, [r2, #8]
   87aa8:	f041 0301 	orr.w	r3, r1, #1
   87aac:	606b      	str	r3, [r5, #4]
   87aae:	5069      	str	r1, [r5, r1]
   87ab0:	e7d3      	b.n	87a5a <_free_r+0x6a>
   87ab2:	4770      	bx	lr
   87ab4:	f041 0301 	orr.w	r3, r1, #1
   87ab8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   87abc:	f844 3c04 	str.w	r3, [r4, #-4]
   87ac0:	6001      	str	r1, [r0, #0]
   87ac2:	d3cd      	bcc.n	87a60 <_free_r+0x70>
   87ac4:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
   87ac8:	ea4f 2351 	mov.w	r3, r1, lsr #9
   87acc:	d247      	bcs.n	87b5e <_free_r+0x16e>
   87ace:	098b      	lsrs	r3, r1, #6
   87ad0:	f103 0039 	add.w	r0, r3, #57	; 0x39
   87ad4:	f103 0238 	add.w	r2, r3, #56	; 0x38
   87ad8:	00c3      	lsls	r3, r0, #3
   87ada:	18f8      	adds	r0, r7, r3
   87adc:	58fb      	ldr	r3, [r7, r3]
   87ade:	3808      	subs	r0, #8
   87ae0:	4298      	cmp	r0, r3
   87ae2:	d058      	beq.n	87b96 <_free_r+0x1a6>
   87ae4:	685a      	ldr	r2, [r3, #4]
   87ae6:	f022 0203 	bic.w	r2, r2, #3
   87aea:	428a      	cmp	r2, r1
   87aec:	d902      	bls.n	87af4 <_free_r+0x104>
   87aee:	689b      	ldr	r3, [r3, #8]
   87af0:	4298      	cmp	r0, r3
   87af2:	d1f7      	bne.n	87ae4 <_free_r+0xf4>
   87af4:	68d8      	ldr	r0, [r3, #12]
   87af6:	e9c5 3002 	strd	r3, r0, [r5, #8]
   87afa:	6085      	str	r5, [r0, #8]
   87afc:	4630      	mov	r0, r6
   87afe:	60dd      	str	r5, [r3, #12]
   87b00:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87b04:	f000 be1e 	b.w	88744 <__malloc_unlock>
   87b08:	18c2      	adds	r2, r0, r3
   87b0a:	6852      	ldr	r2, [r2, #4]
   87b0c:	07d2      	lsls	r2, r2, #31
   87b0e:	d463      	bmi.n	87bd8 <_free_r+0x1e8>
   87b10:	440b      	add	r3, r1
   87b12:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
   87b16:	60ca      	str	r2, [r1, #12]
   87b18:	6091      	str	r1, [r2, #8]
   87b1a:	f043 0201 	orr.w	r2, r3, #1
   87b1e:	606a      	str	r2, [r5, #4]
   87b20:	4630      	mov	r0, r6
   87b22:	50eb      	str	r3, [r5, r3]
   87b24:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87b28:	f000 be0c 	b.w	88744 <__malloc_unlock>
   87b2c:	440b      	add	r3, r1
   87b2e:	07d1      	lsls	r1, r2, #31
   87b30:	d407      	bmi.n	87b42 <_free_r+0x152>
   87b32:	f854 2c08 	ldr.w	r2, [r4, #-8]
   87b36:	1aad      	subs	r5, r5, r2
   87b38:	4413      	add	r3, r2
   87b3a:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
   87b3e:	60ca      	str	r2, [r1, #12]
   87b40:	6091      	str	r1, [r2, #8]
   87b42:	f043 0201 	orr.w	r2, r3, #1
   87b46:	606a      	str	r2, [r5, #4]
   87b48:	4a27      	ldr	r2, [pc, #156]	; (87be8 <_free_r+0x1f8>)
   87b4a:	60bd      	str	r5, [r7, #8]
   87b4c:	6812      	ldr	r2, [r2, #0]
   87b4e:	429a      	cmp	r2, r3
   87b50:	d898      	bhi.n	87a84 <_free_r+0x94>
   87b52:	4b26      	ldr	r3, [pc, #152]	; (87bec <_free_r+0x1fc>)
   87b54:	4630      	mov	r0, r6
   87b56:	6819      	ldr	r1, [r3, #0]
   87b58:	f7ff fefa 	bl	87950 <_malloc_trim_r>
   87b5c:	e792      	b.n	87a84 <_free_r+0x94>
   87b5e:	2b14      	cmp	r3, #20
   87b60:	d90a      	bls.n	87b78 <_free_r+0x188>
   87b62:	2b54      	cmp	r3, #84	; 0x54
   87b64:	d81f      	bhi.n	87ba6 <_free_r+0x1b6>
   87b66:	0b0b      	lsrs	r3, r1, #12
   87b68:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   87b6c:	f103 026e 	add.w	r2, r3, #110	; 0x6e
   87b70:	00c3      	lsls	r3, r0, #3
   87b72:	e7b2      	b.n	87ada <_free_r+0xea>
   87b74:	4419      	add	r1, r3
   87b76:	e791      	b.n	87a9c <_free_r+0xac>
   87b78:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   87b7c:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   87b80:	00c3      	lsls	r3, r0, #3
   87b82:	e7aa      	b.n	87ada <_free_r+0xea>
   87b84:	f041 0301 	orr.w	r3, r1, #1
   87b88:	e9c7 5504 	strd	r5, r5, [r7, #16]
   87b8c:	e9c5 4402 	strd	r4, r4, [r5, #8]
   87b90:	606b      	str	r3, [r5, #4]
   87b92:	5069      	str	r1, [r5, r1]
   87b94:	e776      	b.n	87a84 <_free_r+0x94>
   87b96:	2101      	movs	r1, #1
   87b98:	1092      	asrs	r2, r2, #2
   87b9a:	fa01 f202 	lsl.w	r2, r1, r2
   87b9e:	6879      	ldr	r1, [r7, #4]
   87ba0:	430a      	orrs	r2, r1
   87ba2:	607a      	str	r2, [r7, #4]
   87ba4:	e7a7      	b.n	87af6 <_free_r+0x106>
   87ba6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   87baa:	d806      	bhi.n	87bba <_free_r+0x1ca>
   87bac:	0bcb      	lsrs	r3, r1, #15
   87bae:	f103 0078 	add.w	r0, r3, #120	; 0x78
   87bb2:	f103 0277 	add.w	r2, r3, #119	; 0x77
   87bb6:	00c3      	lsls	r3, r0, #3
   87bb8:	e78f      	b.n	87ada <_free_r+0xea>
   87bba:	f240 5254 	movw	r2, #1364	; 0x554
   87bbe:	4293      	cmp	r3, r2
   87bc0:	d806      	bhi.n	87bd0 <_free_r+0x1e0>
   87bc2:	0c8b      	lsrs	r3, r1, #18
   87bc4:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   87bc8:	f103 027c 	add.w	r2, r3, #124	; 0x7c
   87bcc:	00c3      	lsls	r3, r0, #3
   87bce:	e784      	b.n	87ada <_free_r+0xea>
   87bd0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
   87bd4:	227e      	movs	r2, #126	; 0x7e
   87bd6:	e780      	b.n	87ada <_free_r+0xea>
   87bd8:	f041 0301 	orr.w	r3, r1, #1
   87bdc:	606b      	str	r3, [r5, #4]
   87bde:	6001      	str	r1, [r0, #0]
   87be0:	e750      	b.n	87a84 <_free_r+0x94>
   87be2:	bf00      	nop
   87be4:	20000940 	.word	0x20000940
   87be8:	20000d4c 	.word	0x20000d4c
   87bec:	200013bc 	.word	0x200013bc

00087bf0 <__sfvwrite_r>:
   87bf0:	6893      	ldr	r3, [r2, #8]
   87bf2:	2b00      	cmp	r3, #0
   87bf4:	f000 80b7 	beq.w	87d66 <__sfvwrite_r+0x176>
   87bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87bfc:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   87c00:	460c      	mov	r4, r1
   87c02:	0719      	lsls	r1, r3, #28
   87c04:	4680      	mov	r8, r0
   87c06:	4617      	mov	r7, r2
   87c08:	b083      	sub	sp, #12
   87c0a:	b298      	uxth	r0, r3
   87c0c:	d525      	bpl.n	87c5a <__sfvwrite_r+0x6a>
   87c0e:	6923      	ldr	r3, [r4, #16]
   87c10:	b31b      	cbz	r3, 87c5a <__sfvwrite_r+0x6a>
   87c12:	f010 0302 	ands.w	r3, r0, #2
   87c16:	683d      	ldr	r5, [r7, #0]
   87c18:	d02d      	beq.n	87c76 <__sfvwrite_r+0x86>
   87c1a:	f04f 0b00 	mov.w	fp, #0
   87c1e:	465e      	mov	r6, fp
   87c20:	f8df a2b8 	ldr.w	sl, [pc, #696]	; 87edc <__sfvwrite_r+0x2ec>
   87c24:	2e00      	cmp	r6, #0
   87c26:	f000 808b 	beq.w	87d40 <__sfvwrite_r+0x150>
   87c2a:	4556      	cmp	r6, sl
   87c2c:	4633      	mov	r3, r6
   87c2e:	465a      	mov	r2, fp
   87c30:	bf28      	it	cs
   87c32:	4653      	movcs	r3, sl
   87c34:	4640      	mov	r0, r8
   87c36:	69e1      	ldr	r1, [r4, #28]
   87c38:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87c3c:	47e0      	blx	ip
   87c3e:	2800      	cmp	r0, #0
   87c40:	f340 8087 	ble.w	87d52 <__sfvwrite_r+0x162>
   87c44:	68bb      	ldr	r3, [r7, #8]
   87c46:	4483      	add	fp, r0
   87c48:	1a1b      	subs	r3, r3, r0
   87c4a:	1a36      	subs	r6, r6, r0
   87c4c:	60bb      	str	r3, [r7, #8]
   87c4e:	2b00      	cmp	r3, #0
   87c50:	d1e8      	bne.n	87c24 <__sfvwrite_r+0x34>
   87c52:	2000      	movs	r0, #0
   87c54:	b003      	add	sp, #12
   87c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87c5a:	4621      	mov	r1, r4
   87c5c:	4640      	mov	r0, r8
   87c5e:	f7fe fc0d 	bl	8647c <__swsetup_r>
   87c62:	2800      	cmp	r0, #0
   87c64:	f040 8136 	bne.w	87ed4 <__sfvwrite_r+0x2e4>
   87c68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87c6c:	683d      	ldr	r5, [r7, #0]
   87c6e:	b298      	uxth	r0, r3
   87c70:	f010 0302 	ands.w	r3, r0, #2
   87c74:	d1d1      	bne.n	87c1a <__sfvwrite_r+0x2a>
   87c76:	f010 0901 	ands.w	r9, r0, #1
   87c7a:	d176      	bne.n	87d6a <__sfvwrite_r+0x17a>
   87c7c:	464e      	mov	r6, r9
   87c7e:	2e00      	cmp	r6, #0
   87c80:	d05a      	beq.n	87d38 <__sfvwrite_r+0x148>
   87c82:	0582      	lsls	r2, r0, #22
   87c84:	f8d4 b008 	ldr.w	fp, [r4, #8]
   87c88:	f140 80b5 	bpl.w	87df6 <__sfvwrite_r+0x206>
   87c8c:	45b3      	cmp	fp, r6
   87c8e:	465a      	mov	r2, fp
   87c90:	f200 80cd 	bhi.w	87e2e <__sfvwrite_r+0x23e>
   87c94:	f410 6f90 	tst.w	r0, #1152	; 0x480
   87c98:	f000 80cb 	beq.w	87e32 <__sfvwrite_r+0x242>
   87c9c:	6823      	ldr	r3, [r4, #0]
   87c9e:	6921      	ldr	r1, [r4, #16]
   87ca0:	eba3 0b01 	sub.w	fp, r3, r1
   87ca4:	6963      	ldr	r3, [r4, #20]
   87ca6:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
   87caa:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
   87cae:	f10b 0301 	add.w	r3, fp, #1
   87cb2:	ea4f 0a6a 	mov.w	sl, sl, asr #1
   87cb6:	4433      	add	r3, r6
   87cb8:	4553      	cmp	r3, sl
   87cba:	4652      	mov	r2, sl
   87cbc:	bf84      	itt	hi
   87cbe:	469a      	movhi	sl, r3
   87cc0:	4652      	movhi	r2, sl
   87cc2:	0543      	lsls	r3, r0, #21
   87cc4:	f140 80ea 	bpl.w	87e9c <__sfvwrite_r+0x2ac>
   87cc8:	4611      	mov	r1, r2
   87cca:	4640      	mov	r0, r8
   87ccc:	f000 f9ae 	bl	8802c <_malloc_r>
   87cd0:	2800      	cmp	r0, #0
   87cd2:	f000 80f9 	beq.w	87ec8 <__sfvwrite_r+0x2d8>
   87cd6:	465a      	mov	r2, fp
   87cd8:	6921      	ldr	r1, [r4, #16]
   87cda:	9001      	str	r0, [sp, #4]
   87cdc:	f7fb fde6 	bl	838ac <memcpy>
   87ce0:	89a2      	ldrh	r2, [r4, #12]
   87ce2:	9b01      	ldr	r3, [sp, #4]
   87ce4:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   87ce8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   87cec:	81a2      	strh	r2, [r4, #12]
   87cee:	eb03 000b 	add.w	r0, r3, fp
   87cf2:	6123      	str	r3, [r4, #16]
   87cf4:	4632      	mov	r2, r6
   87cf6:	ebaa 030b 	sub.w	r3, sl, fp
   87cfa:	46b3      	mov	fp, r6
   87cfc:	f8c4 a014 	str.w	sl, [r4, #20]
   87d00:	60a3      	str	r3, [r4, #8]
   87d02:	6020      	str	r0, [r4, #0]
   87d04:	46b2      	mov	sl, r6
   87d06:	2600      	movs	r6, #0
   87d08:	4649      	mov	r1, r9
   87d0a:	9201      	str	r2, [sp, #4]
   87d0c:	f000 fc98 	bl	88640 <memmove>
   87d10:	68a3      	ldr	r3, [r4, #8]
   87d12:	6821      	ldr	r1, [r4, #0]
   87d14:	9a01      	ldr	r2, [sp, #4]
   87d16:	eba3 030b 	sub.w	r3, r3, fp
   87d1a:	440a      	add	r2, r1
   87d1c:	60a3      	str	r3, [r4, #8]
   87d1e:	6022      	str	r2, [r4, #0]
   87d20:	68b8      	ldr	r0, [r7, #8]
   87d22:	44d1      	add	r9, sl
   87d24:	eba0 000a 	sub.w	r0, r0, sl
   87d28:	60b8      	str	r0, [r7, #8]
   87d2a:	2800      	cmp	r0, #0
   87d2c:	d091      	beq.n	87c52 <__sfvwrite_r+0x62>
   87d2e:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   87d32:	b280      	uxth	r0, r0
   87d34:	2e00      	cmp	r6, #0
   87d36:	d1a4      	bne.n	87c82 <__sfvwrite_r+0x92>
   87d38:	e9d5 9600 	ldrd	r9, r6, [r5]
   87d3c:	3508      	adds	r5, #8
   87d3e:	e79e      	b.n	87c7e <__sfvwrite_r+0x8e>
   87d40:	e9d5 b600 	ldrd	fp, r6, [r5]
   87d44:	3508      	adds	r5, #8
   87d46:	e76d      	b.n	87c24 <__sfvwrite_r+0x34>
   87d48:	4621      	mov	r1, r4
   87d4a:	4640      	mov	r0, r8
   87d4c:	f7ff fca0 	bl	87690 <_fflush_r>
   87d50:	b380      	cbz	r0, 87db4 <__sfvwrite_r+0x1c4>
   87d52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87d56:	f04f 30ff 	mov.w	r0, #4294967295
   87d5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87d5e:	81a3      	strh	r3, [r4, #12]
   87d60:	b003      	add	sp, #12
   87d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87d66:	2000      	movs	r0, #0
   87d68:	4770      	bx	lr
   87d6a:	461e      	mov	r6, r3
   87d6c:	46aa      	mov	sl, r5
   87d6e:	4699      	mov	r9, r3
   87d70:	4618      	mov	r0, r3
   87d72:	461d      	mov	r5, r3
   87d74:	b356      	cbz	r6, 87dcc <__sfvwrite_r+0x1dc>
   87d76:	2800      	cmp	r0, #0
   87d78:	d032      	beq.n	87de0 <__sfvwrite_r+0x1f0>
   87d7a:	464a      	mov	r2, r9
   87d7c:	6820      	ldr	r0, [r4, #0]
   87d7e:	6921      	ldr	r1, [r4, #16]
   87d80:	42b2      	cmp	r2, r6
   87d82:	bf28      	it	cs
   87d84:	4632      	movcs	r2, r6
   87d86:	4288      	cmp	r0, r1
   87d88:	6963      	ldr	r3, [r4, #20]
   87d8a:	d904      	bls.n	87d96 <__sfvwrite_r+0x1a6>
   87d8c:	68a1      	ldr	r1, [r4, #8]
   87d8e:	eb03 0b01 	add.w	fp, r3, r1
   87d92:	455a      	cmp	r2, fp
   87d94:	dc74      	bgt.n	87e80 <__sfvwrite_r+0x290>
   87d96:	4293      	cmp	r3, r2
   87d98:	dc65      	bgt.n	87e66 <__sfvwrite_r+0x276>
   87d9a:	462a      	mov	r2, r5
   87d9c:	4640      	mov	r0, r8
   87d9e:	69e1      	ldr	r1, [r4, #28]
   87da0:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87da4:	47e0      	blx	ip
   87da6:	f1b0 0b00 	subs.w	fp, r0, #0
   87daa:	ddd2      	ble.n	87d52 <__sfvwrite_r+0x162>
   87dac:	ebb9 090b 	subs.w	r9, r9, fp
   87db0:	d0ca      	beq.n	87d48 <__sfvwrite_r+0x158>
   87db2:	2001      	movs	r0, #1
   87db4:	68bb      	ldr	r3, [r7, #8]
   87db6:	445d      	add	r5, fp
   87db8:	eba3 030b 	sub.w	r3, r3, fp
   87dbc:	eba6 060b 	sub.w	r6, r6, fp
   87dc0:	60bb      	str	r3, [r7, #8]
   87dc2:	2b00      	cmp	r3, #0
   87dc4:	f43f af45 	beq.w	87c52 <__sfvwrite_r+0x62>
   87dc8:	2e00      	cmp	r6, #0
   87dca:	d1d4      	bne.n	87d76 <__sfvwrite_r+0x186>
   87dcc:	f10a 0308 	add.w	r3, sl, #8
   87dd0:	f853 6c04 	ldr.w	r6, [r3, #-4]
   87dd4:	469a      	mov	sl, r3
   87dd6:	f853 5c08 	ldr.w	r5, [r3, #-8]
   87dda:	3308      	adds	r3, #8
   87ddc:	2e00      	cmp	r6, #0
   87dde:	d0f7      	beq.n	87dd0 <__sfvwrite_r+0x1e0>
   87de0:	4632      	mov	r2, r6
   87de2:	210a      	movs	r1, #10
   87de4:	4628      	mov	r0, r5
   87de6:	f000 fbe3 	bl	885b0 <memchr>
   87dea:	2800      	cmp	r0, #0
   87dec:	d069      	beq.n	87ec2 <__sfvwrite_r+0x2d2>
   87dee:	3001      	adds	r0, #1
   87df0:	eba0 0905 	sub.w	r9, r0, r5
   87df4:	e7c1      	b.n	87d7a <__sfvwrite_r+0x18a>
   87df6:	6820      	ldr	r0, [r4, #0]
   87df8:	6923      	ldr	r3, [r4, #16]
   87dfa:	4298      	cmp	r0, r3
   87dfc:	d81b      	bhi.n	87e36 <__sfvwrite_r+0x246>
   87dfe:	6963      	ldr	r3, [r4, #20]
   87e00:	42b3      	cmp	r3, r6
   87e02:	d818      	bhi.n	87e36 <__sfvwrite_r+0x246>
   87e04:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
   87e08:	45b4      	cmp	ip, r6
   87e0a:	bf28      	it	cs
   87e0c:	46b4      	movcs	ip, r6
   87e0e:	fb9c fcf3 	sdiv	ip, ip, r3
   87e12:	464a      	mov	r2, r9
   87e14:	fb03 f30c 	mul.w	r3, r3, ip
   87e18:	4640      	mov	r0, r8
   87e1a:	69e1      	ldr	r1, [r4, #28]
   87e1c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87e20:	47e0      	blx	ip
   87e22:	f1b0 0a00 	subs.w	sl, r0, #0
   87e26:	dd94      	ble.n	87d52 <__sfvwrite_r+0x162>
   87e28:	eba6 060a 	sub.w	r6, r6, sl
   87e2c:	e778      	b.n	87d20 <__sfvwrite_r+0x130>
   87e2e:	46b3      	mov	fp, r6
   87e30:	4632      	mov	r2, r6
   87e32:	6820      	ldr	r0, [r4, #0]
   87e34:	e766      	b.n	87d04 <__sfvwrite_r+0x114>
   87e36:	45b3      	cmp	fp, r6
   87e38:	46da      	mov	sl, fp
   87e3a:	bf28      	it	cs
   87e3c:	46b2      	movcs	sl, r6
   87e3e:	4649      	mov	r1, r9
   87e40:	4652      	mov	r2, sl
   87e42:	f000 fbfd 	bl	88640 <memmove>
   87e46:	68a3      	ldr	r3, [r4, #8]
   87e48:	6822      	ldr	r2, [r4, #0]
   87e4a:	eba3 030a 	sub.w	r3, r3, sl
   87e4e:	4452      	add	r2, sl
   87e50:	60a3      	str	r3, [r4, #8]
   87e52:	6022      	str	r2, [r4, #0]
   87e54:	2b00      	cmp	r3, #0
   87e56:	d1e7      	bne.n	87e28 <__sfvwrite_r+0x238>
   87e58:	4621      	mov	r1, r4
   87e5a:	4640      	mov	r0, r8
   87e5c:	f7ff fc18 	bl	87690 <_fflush_r>
   87e60:	2800      	cmp	r0, #0
   87e62:	d0e1      	beq.n	87e28 <__sfvwrite_r+0x238>
   87e64:	e775      	b.n	87d52 <__sfvwrite_r+0x162>
   87e66:	4629      	mov	r1, r5
   87e68:	4693      	mov	fp, r2
   87e6a:	9201      	str	r2, [sp, #4]
   87e6c:	f000 fbe8 	bl	88640 <memmove>
   87e70:	68a3      	ldr	r3, [r4, #8]
   87e72:	9a01      	ldr	r2, [sp, #4]
   87e74:	1a9b      	subs	r3, r3, r2
   87e76:	60a3      	str	r3, [r4, #8]
   87e78:	6823      	ldr	r3, [r4, #0]
   87e7a:	441a      	add	r2, r3
   87e7c:	6022      	str	r2, [r4, #0]
   87e7e:	e795      	b.n	87dac <__sfvwrite_r+0x1bc>
   87e80:	4629      	mov	r1, r5
   87e82:	465a      	mov	r2, fp
   87e84:	f000 fbdc 	bl	88640 <memmove>
   87e88:	6823      	ldr	r3, [r4, #0]
   87e8a:	4621      	mov	r1, r4
   87e8c:	445b      	add	r3, fp
   87e8e:	4640      	mov	r0, r8
   87e90:	6023      	str	r3, [r4, #0]
   87e92:	f7ff fbfd 	bl	87690 <_fflush_r>
   87e96:	2800      	cmp	r0, #0
   87e98:	d088      	beq.n	87dac <__sfvwrite_r+0x1bc>
   87e9a:	e75a      	b.n	87d52 <__sfvwrite_r+0x162>
   87e9c:	4640      	mov	r0, r8
   87e9e:	f000 fffb 	bl	88e98 <_realloc_r>
   87ea2:	4603      	mov	r3, r0
   87ea4:	2800      	cmp	r0, #0
   87ea6:	f47f af22 	bne.w	87cee <__sfvwrite_r+0xfe>
   87eaa:	4640      	mov	r0, r8
   87eac:	6921      	ldr	r1, [r4, #16]
   87eae:	f7ff fd9f 	bl	879f0 <_free_r>
   87eb2:	220c      	movs	r2, #12
   87eb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87eb8:	f8c8 2000 	str.w	r2, [r8]
   87ebc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   87ec0:	e749      	b.n	87d56 <__sfvwrite_r+0x166>
   87ec2:	1c72      	adds	r2, r6, #1
   87ec4:	4691      	mov	r9, r2
   87ec6:	e759      	b.n	87d7c <__sfvwrite_r+0x18c>
   87ec8:	220c      	movs	r2, #12
   87eca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87ece:	f8c8 2000 	str.w	r2, [r8]
   87ed2:	e740      	b.n	87d56 <__sfvwrite_r+0x166>
   87ed4:	f04f 30ff 	mov.w	r0, #4294967295
   87ed8:	e6bc      	b.n	87c54 <__sfvwrite_r+0x64>
   87eda:	bf00      	nop
   87edc:	7ffffc00 	.word	0x7ffffc00

00087ee0 <_fwalk_reent>:
   87ee0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   87ee4:	f04f 0900 	mov.w	r9, #0
   87ee8:	4607      	mov	r7, r0
   87eea:	4688      	mov	r8, r1
   87eec:	f500 7638 	add.w	r6, r0, #736	; 0x2e0
   87ef0:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
   87ef4:	3d01      	subs	r5, #1
   87ef6:	d410      	bmi.n	87f1a <_fwalk_reent+0x3a>
   87ef8:	89a3      	ldrh	r3, [r4, #12]
   87efa:	3d01      	subs	r5, #1
   87efc:	2b01      	cmp	r3, #1
   87efe:	d908      	bls.n	87f12 <_fwalk_reent+0x32>
   87f00:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   87f04:	3301      	adds	r3, #1
   87f06:	d004      	beq.n	87f12 <_fwalk_reent+0x32>
   87f08:	4621      	mov	r1, r4
   87f0a:	4638      	mov	r0, r7
   87f0c:	47c0      	blx	r8
   87f0e:	ea49 0900 	orr.w	r9, r9, r0
   87f12:	1c6b      	adds	r3, r5, #1
   87f14:	f104 0468 	add.w	r4, r4, #104	; 0x68
   87f18:	d1ee      	bne.n	87ef8 <_fwalk_reent+0x18>
   87f1a:	6836      	ldr	r6, [r6, #0]
   87f1c:	2e00      	cmp	r6, #0
   87f1e:	d1e7      	bne.n	87ef0 <_fwalk_reent+0x10>
   87f20:	4648      	mov	r0, r9
   87f22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   87f26:	bf00      	nop

00087f28 <__locale_mb_cur_max>:
   87f28:	4b01      	ldr	r3, [pc, #4]	; (87f30 <__locale_mb_cur_max+0x8>)
   87f2a:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   87f2e:	4770      	bx	lr
   87f30:	200007d4 	.word	0x200007d4

00087f34 <_localeconv_r>:
   87f34:	4800      	ldr	r0, [pc, #0]	; (87f38 <_localeconv_r+0x4>)
   87f36:	4770      	bx	lr
   87f38:	200008c4 	.word	0x200008c4

00087f3c <__retarget_lock_init_recursive>:
   87f3c:	4770      	bx	lr
   87f3e:	bf00      	nop

00087f40 <__retarget_lock_close_recursive>:
   87f40:	4770      	bx	lr
   87f42:	bf00      	nop

00087f44 <__retarget_lock_acquire_recursive>:
   87f44:	4770      	bx	lr
   87f46:	bf00      	nop

00087f48 <__retarget_lock_release_recursive>:
   87f48:	4770      	bx	lr
   87f4a:	bf00      	nop

00087f4c <__smakebuf_r>:
   87f4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   87f50:	898b      	ldrh	r3, [r1, #12]
   87f52:	460c      	mov	r4, r1
   87f54:	0799      	lsls	r1, r3, #30
   87f56:	b096      	sub	sp, #88	; 0x58
   87f58:	d508      	bpl.n	87f6c <__smakebuf_r+0x20>
   87f5a:	2201      	movs	r2, #1
   87f5c:	f104 0343 	add.w	r3, r4, #67	; 0x43
   87f60:	e9c4 3204 	strd	r3, r2, [r4, #16]
   87f64:	6023      	str	r3, [r4, #0]
   87f66:	b016      	add	sp, #88	; 0x58
   87f68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   87f6c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   87f70:	4606      	mov	r6, r0
   87f72:	2900      	cmp	r1, #0
   87f74:	db27      	blt.n	87fc6 <__smakebuf_r+0x7a>
   87f76:	466a      	mov	r2, sp
   87f78:	f001 fc58 	bl	8982c <_fstat_r>
   87f7c:	2800      	cmp	r0, #0
   87f7e:	db21      	blt.n	87fc4 <__smakebuf_r+0x78>
   87f80:	9d01      	ldr	r5, [sp, #4]
   87f82:	f44f 6880 	mov.w	r8, #1024	; 0x400
   87f86:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
   87f8a:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
   87f8e:	fab5 f585 	clz	r5, r5
   87f92:	f44f 6700 	mov.w	r7, #2048	; 0x800
   87f96:	096d      	lsrs	r5, r5, #5
   87f98:	4641      	mov	r1, r8
   87f9a:	4630      	mov	r0, r6
   87f9c:	f000 f846 	bl	8802c <_malloc_r>
   87fa0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87fa4:	b1f0      	cbz	r0, 87fe4 <__smakebuf_r+0x98>
   87fa6:	4a20      	ldr	r2, [pc, #128]	; (88028 <__smakebuf_r+0xdc>)
   87fa8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   87fac:	63f2      	str	r2, [r6, #60]	; 0x3c
   87fae:	f8c4 8014 	str.w	r8, [r4, #20]
   87fb2:	81a3      	strh	r3, [r4, #12]
   87fb4:	6020      	str	r0, [r4, #0]
   87fb6:	6120      	str	r0, [r4, #16]
   87fb8:	bb35      	cbnz	r5, 88008 <__smakebuf_r+0xbc>
   87fba:	433b      	orrs	r3, r7
   87fbc:	81a3      	strh	r3, [r4, #12]
   87fbe:	b016      	add	sp, #88	; 0x58
   87fc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   87fc4:	89a3      	ldrh	r3, [r4, #12]
   87fc6:	f013 0580 	ands.w	r5, r3, #128	; 0x80
   87fca:	d019      	beq.n	88000 <__smakebuf_r+0xb4>
   87fcc:	f04f 0840 	mov.w	r8, #64	; 0x40
   87fd0:	4630      	mov	r0, r6
   87fd2:	4641      	mov	r1, r8
   87fd4:	2500      	movs	r5, #0
   87fd6:	f000 f829 	bl	8802c <_malloc_r>
   87fda:	462f      	mov	r7, r5
   87fdc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87fe0:	2800      	cmp	r0, #0
   87fe2:	d1e0      	bne.n	87fa6 <__smakebuf_r+0x5a>
   87fe4:	059a      	lsls	r2, r3, #22
   87fe6:	d4be      	bmi.n	87f66 <__smakebuf_r+0x1a>
   87fe8:	2101      	movs	r1, #1
   87fea:	f023 0303 	bic.w	r3, r3, #3
   87fee:	f104 0243 	add.w	r2, r4, #67	; 0x43
   87ff2:	f043 0302 	orr.w	r3, r3, #2
   87ff6:	e9c4 2104 	strd	r2, r1, [r4, #16]
   87ffa:	81a3      	strh	r3, [r4, #12]
   87ffc:	6022      	str	r2, [r4, #0]
   87ffe:	e7b2      	b.n	87f66 <__smakebuf_r+0x1a>
   88000:	f44f 6880 	mov.w	r8, #1024	; 0x400
   88004:	462f      	mov	r7, r5
   88006:	e7c7      	b.n	87f98 <__smakebuf_r+0x4c>
   88008:	4630      	mov	r0, r6
   8800a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   8800e:	f001 fc21 	bl	89854 <_isatty_r>
   88012:	b910      	cbnz	r0, 8801a <__smakebuf_r+0xce>
   88014:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   88018:	e7cf      	b.n	87fba <__smakebuf_r+0x6e>
   8801a:	89a3      	ldrh	r3, [r4, #12]
   8801c:	f023 0303 	bic.w	r3, r3, #3
   88020:	f043 0301 	orr.w	r3, r3, #1
   88024:	b21b      	sxth	r3, r3
   88026:	e7c8      	b.n	87fba <__smakebuf_r+0x6e>
   88028:	000876ed 	.word	0x000876ed

0008802c <_malloc_r>:
   8802c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88030:	f101 050b 	add.w	r5, r1, #11
   88034:	2d16      	cmp	r5, #22
   88036:	4606      	mov	r6, r0
   88038:	b083      	sub	sp, #12
   8803a:	d825      	bhi.n	88088 <_malloc_r+0x5c>
   8803c:	2910      	cmp	r1, #16
   8803e:	f200 80b8 	bhi.w	881b2 <_malloc_r+0x186>
   88042:	f000 fb79 	bl	88738 <__malloc_lock>
   88046:	2510      	movs	r5, #16
   88048:	2218      	movs	r2, #24
   8804a:	f04f 0c02 	mov.w	ip, #2
   8804e:	4fb5      	ldr	r7, [pc, #724]	; (88324 <_malloc_r+0x2f8>)
   88050:	443a      	add	r2, r7
   88052:	6853      	ldr	r3, [r2, #4]
   88054:	f1a2 0108 	sub.w	r1, r2, #8
   88058:	428b      	cmp	r3, r1
   8805a:	f000 80b7 	beq.w	881cc <_malloc_r+0x1a0>
   8805e:	685a      	ldr	r2, [r3, #4]
   88060:	68d9      	ldr	r1, [r3, #12]
   88062:	f022 0203 	bic.w	r2, r2, #3
   88066:	441a      	add	r2, r3
   88068:	689c      	ldr	r4, [r3, #8]
   8806a:	4630      	mov	r0, r6
   8806c:	60e1      	str	r1, [r4, #12]
   8806e:	608c      	str	r4, [r1, #8]
   88070:	6851      	ldr	r1, [r2, #4]
   88072:	f103 0408 	add.w	r4, r3, #8
   88076:	f041 0101 	orr.w	r1, r1, #1
   8807a:	6051      	str	r1, [r2, #4]
   8807c:	f000 fb62 	bl	88744 <__malloc_unlock>
   88080:	4620      	mov	r0, r4
   88082:	b003      	add	sp, #12
   88084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88088:	f035 0507 	bics.w	r5, r5, #7
   8808c:	f100 8091 	bmi.w	881b2 <_malloc_r+0x186>
   88090:	42a9      	cmp	r1, r5
   88092:	f200 808e 	bhi.w	881b2 <_malloc_r+0x186>
   88096:	f000 fb4f 	bl	88738 <__malloc_lock>
   8809a:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   8809e:	f0c0 8194 	bcc.w	883ca <_malloc_r+0x39e>
   880a2:	0a6b      	lsrs	r3, r5, #9
   880a4:	f000 808c 	beq.w	881c0 <_malloc_r+0x194>
   880a8:	2b04      	cmp	r3, #4
   880aa:	f200 816a 	bhi.w	88382 <_malloc_r+0x356>
   880ae:	09ab      	lsrs	r3, r5, #6
   880b0:	f103 0c39 	add.w	ip, r3, #57	; 0x39
   880b4:	f103 0438 	add.w	r4, r3, #56	; 0x38
   880b8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   880bc:	4f99      	ldr	r7, [pc, #612]	; (88324 <_malloc_r+0x2f8>)
   880be:	4438      	add	r0, r7
   880c0:	6843      	ldr	r3, [r0, #4]
   880c2:	3808      	subs	r0, #8
   880c4:	4298      	cmp	r0, r3
   880c6:	d106      	bne.n	880d6 <_malloc_r+0xaa>
   880c8:	e00c      	b.n	880e4 <_malloc_r+0xb8>
   880ca:	2900      	cmp	r1, #0
   880cc:	f280 8126 	bge.w	8831c <_malloc_r+0x2f0>
   880d0:	68db      	ldr	r3, [r3, #12]
   880d2:	4298      	cmp	r0, r3
   880d4:	d006      	beq.n	880e4 <_malloc_r+0xb8>
   880d6:	685a      	ldr	r2, [r3, #4]
   880d8:	f022 0203 	bic.w	r2, r2, #3
   880dc:	1b51      	subs	r1, r2, r5
   880de:	290f      	cmp	r1, #15
   880e0:	ddf3      	ble.n	880ca <_malloc_r+0x9e>
   880e2:	46a4      	mov	ip, r4
   880e4:	693c      	ldr	r4, [r7, #16]
   880e6:	f8df e240 	ldr.w	lr, [pc, #576]	; 88328 <_malloc_r+0x2fc>
   880ea:	4574      	cmp	r4, lr
   880ec:	d07a      	beq.n	881e4 <_malloc_r+0x1b8>
   880ee:	6862      	ldr	r2, [r4, #4]
   880f0:	f022 0203 	bic.w	r2, r2, #3
   880f4:	1b53      	subs	r3, r2, r5
   880f6:	2b0f      	cmp	r3, #15
   880f8:	f300 8176 	bgt.w	883e8 <_malloc_r+0x3bc>
   880fc:	2b00      	cmp	r3, #0
   880fe:	e9c7 ee04 	strd	lr, lr, [r7, #16]
   88102:	f280 8167 	bge.w	883d4 <_malloc_r+0x3a8>
   88106:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   8810a:	f080 8119 	bcs.w	88340 <_malloc_r+0x314>
   8810e:	2101      	movs	r1, #1
   88110:	08d3      	lsrs	r3, r2, #3
   88112:	0952      	lsrs	r2, r2, #5
   88114:	440b      	add	r3, r1
   88116:	4091      	lsls	r1, r2
   88118:	687a      	ldr	r2, [r7, #4]
   8811a:	f857 0033 	ldr.w	r0, [r7, r3, lsl #3]
   8811e:	430a      	orrs	r2, r1
   88120:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
   88124:	3908      	subs	r1, #8
   88126:	60a0      	str	r0, [r4, #8]
   88128:	60e1      	str	r1, [r4, #12]
   8812a:	607a      	str	r2, [r7, #4]
   8812c:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   88130:	60c4      	str	r4, [r0, #12]
   88132:	2101      	movs	r1, #1
   88134:	ea4f 03ac 	mov.w	r3, ip, asr #2
   88138:	4099      	lsls	r1, r3
   8813a:	4291      	cmp	r1, r2
   8813c:	d859      	bhi.n	881f2 <_malloc_r+0x1c6>
   8813e:	4211      	tst	r1, r2
   88140:	d106      	bne.n	88150 <_malloc_r+0x124>
   88142:	f02c 0c03 	bic.w	ip, ip, #3
   88146:	0049      	lsls	r1, r1, #1
   88148:	4211      	tst	r1, r2
   8814a:	f10c 0c04 	add.w	ip, ip, #4
   8814e:	d0fa      	beq.n	88146 <_malloc_r+0x11a>
   88150:	eb07 09cc 	add.w	r9, r7, ip, lsl #3
   88154:	4648      	mov	r0, r9
   88156:	4664      	mov	r4, ip
   88158:	f8d0 800c 	ldr.w	r8, [r0, #12]
   8815c:	4540      	cmp	r0, r8
   8815e:	d108      	bne.n	88172 <_malloc_r+0x146>
   88160:	e11c      	b.n	8839c <_malloc_r+0x370>
   88162:	2b00      	cmp	r3, #0
   88164:	f280 8121 	bge.w	883aa <_malloc_r+0x37e>
   88168:	f8d8 800c 	ldr.w	r8, [r8, #12]
   8816c:	4540      	cmp	r0, r8
   8816e:	f000 8115 	beq.w	8839c <_malloc_r+0x370>
   88172:	f8d8 2004 	ldr.w	r2, [r8, #4]
   88176:	f022 0203 	bic.w	r2, r2, #3
   8817a:	1b53      	subs	r3, r2, r5
   8817c:	2b0f      	cmp	r3, #15
   8817e:	ddf0      	ble.n	88162 <_malloc_r+0x136>
   88180:	eb08 0105 	add.w	r1, r8, r5
   88184:	f045 0501 	orr.w	r5, r5, #1
   88188:	f8c8 5004 	str.w	r5, [r8, #4]
   8818c:	4630      	mov	r0, r6
   8818e:	e9d8 6402 	ldrd	r6, r4, [r8, #8]
   88192:	60f4      	str	r4, [r6, #12]
   88194:	60a6      	str	r6, [r4, #8]
   88196:	f043 0401 	orr.w	r4, r3, #1
   8819a:	e9c7 1104 	strd	r1, r1, [r7, #16]
   8819e:	604c      	str	r4, [r1, #4]
   881a0:	e9c1 ee02 	strd	lr, lr, [r1, #8]
   881a4:	f848 3002 	str.w	r3, [r8, r2]
   881a8:	f000 facc 	bl	88744 <__malloc_unlock>
   881ac:	f108 0408 	add.w	r4, r8, #8
   881b0:	e002      	b.n	881b8 <_malloc_r+0x18c>
   881b2:	230c      	movs	r3, #12
   881b4:	2400      	movs	r4, #0
   881b6:	6033      	str	r3, [r6, #0]
   881b8:	4620      	mov	r0, r4
   881ba:	b003      	add	sp, #12
   881bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   881c0:	f44f 7000 	mov.w	r0, #512	; 0x200
   881c4:	f04f 0c40 	mov.w	ip, #64	; 0x40
   881c8:	243f      	movs	r4, #63	; 0x3f
   881ca:	e777      	b.n	880bc <_malloc_r+0x90>
   881cc:	68d3      	ldr	r3, [r2, #12]
   881ce:	429a      	cmp	r2, r3
   881d0:	bf08      	it	eq
   881d2:	f10c 0c02 	addeq.w	ip, ip, #2
   881d6:	f47f af42 	bne.w	8805e <_malloc_r+0x32>
   881da:	693c      	ldr	r4, [r7, #16]
   881dc:	f8df e148 	ldr.w	lr, [pc, #328]	; 88328 <_malloc_r+0x2fc>
   881e0:	4574      	cmp	r4, lr
   881e2:	d184      	bne.n	880ee <_malloc_r+0xc2>
   881e4:	2101      	movs	r1, #1
   881e6:	687a      	ldr	r2, [r7, #4]
   881e8:	ea4f 03ac 	mov.w	r3, ip, asr #2
   881ec:	4099      	lsls	r1, r3
   881ee:	4291      	cmp	r1, r2
   881f0:	d9a5      	bls.n	8813e <_malloc_r+0x112>
   881f2:	68bc      	ldr	r4, [r7, #8]
   881f4:	6863      	ldr	r3, [r4, #4]
   881f6:	f023 0903 	bic.w	r9, r3, #3
   881fa:	454d      	cmp	r5, r9
   881fc:	d803      	bhi.n	88206 <_malloc_r+0x1da>
   881fe:	eba9 0305 	sub.w	r3, r9, r5
   88202:	2b0f      	cmp	r3, #15
   88204:	dc7a      	bgt.n	882fc <_malloc_r+0x2d0>
   88206:	f8df b124 	ldr.w	fp, [pc, #292]	; 8832c <_malloc_r+0x300>
   8820a:	4b49      	ldr	r3, [pc, #292]	; (88330 <_malloc_r+0x304>)
   8820c:	f8db 2000 	ldr.w	r2, [fp]
   88210:	681b      	ldr	r3, [r3, #0]
   88212:	3201      	adds	r2, #1
   88214:	442b      	add	r3, r5
   88216:	eb04 0a09 	add.w	sl, r4, r9
   8821a:	f000 812f 	beq.w	8847c <_malloc_r+0x450>
   8821e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   88222:	330f      	adds	r3, #15
   88224:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
   88228:	f028 080f 	bic.w	r8, r8, #15
   8822c:	4641      	mov	r1, r8
   8822e:	4630      	mov	r0, r6
   88230:	f001 f858 	bl	892e4 <_sbrk_r>
   88234:	1c41      	adds	r1, r0, #1
   88236:	4602      	mov	r2, r0
   88238:	f000 80ef 	beq.w	8841a <_malloc_r+0x3ee>
   8823c:	4582      	cmp	sl, r0
   8823e:	f200 80ea 	bhi.w	88416 <_malloc_r+0x3ea>
   88242:	4b3c      	ldr	r3, [pc, #240]	; (88334 <_malloc_r+0x308>)
   88244:	6819      	ldr	r1, [r3, #0]
   88246:	4441      	add	r1, r8
   88248:	4608      	mov	r0, r1
   8824a:	6019      	str	r1, [r3, #0]
   8824c:	f000 8149 	beq.w	884e2 <_malloc_r+0x4b6>
   88250:	f8db 1000 	ldr.w	r1, [fp]
   88254:	9301      	str	r3, [sp, #4]
   88256:	3101      	adds	r1, #1
   88258:	bf1b      	ittet	ne
   8825a:	eba2 0a0a 	subne.w	sl, r2, sl
   8825e:	4450      	addne	r0, sl
   88260:	f8cb 2000 	streq.w	r2, [fp]
   88264:	6018      	strne	r0, [r3, #0]
   88266:	f012 0b07 	ands.w	fp, r2, #7
   8826a:	f000 8111 	beq.w	88490 <_malloc_r+0x464>
   8826e:	f1cb 0108 	rsb	r1, fp, #8
   88272:	440a      	add	r2, r1
   88274:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
   88278:	4490      	add	r8, r2
   8827a:	3108      	adds	r1, #8
   8827c:	eba1 0108 	sub.w	r1, r1, r8
   88280:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
   88284:	4651      	mov	r1, sl
   88286:	4630      	mov	r0, r6
   88288:	9200      	str	r2, [sp, #0]
   8828a:	f001 f82b 	bl	892e4 <_sbrk_r>
   8828e:	1c42      	adds	r2, r0, #1
   88290:	e9dd 2300 	ldrd	r2, r3, [sp]
   88294:	f000 814b 	beq.w	8852e <_malloc_r+0x502>
   88298:	1a80      	subs	r0, r0, r2
   8829a:	eb00 080a 	add.w	r8, r0, sl
   8829e:	6819      	ldr	r1, [r3, #0]
   882a0:	f048 0001 	orr.w	r0, r8, #1
   882a4:	4451      	add	r1, sl
   882a6:	42bc      	cmp	r4, r7
   882a8:	60ba      	str	r2, [r7, #8]
   882aa:	6019      	str	r1, [r3, #0]
   882ac:	6050      	str	r0, [r2, #4]
   882ae:	f000 8124 	beq.w	884fa <_malloc_r+0x4ce>
   882b2:	f1b9 0f0f 	cmp.w	r9, #15
   882b6:	f240 8122 	bls.w	884fe <_malloc_r+0x4d2>
   882ba:	f04f 0e05 	mov.w	lr, #5
   882be:	6860      	ldr	r0, [r4, #4]
   882c0:	f1a9 0c0c 	sub.w	ip, r9, #12
   882c4:	f02c 0c07 	bic.w	ip, ip, #7
   882c8:	f000 0001 	and.w	r0, r0, #1
   882cc:	ea40 000c 	orr.w	r0, r0, ip
   882d0:	6060      	str	r0, [r4, #4]
   882d2:	f1bc 0f0f 	cmp.w	ip, #15
   882d6:	eb04 000c 	add.w	r0, r4, ip
   882da:	e9c0 ee01 	strd	lr, lr, [r0, #4]
   882de:	f200 812e 	bhi.w	8853e <_malloc_r+0x512>
   882e2:	4614      	mov	r4, r2
   882e4:	6850      	ldr	r0, [r2, #4]
   882e6:	4b14      	ldr	r3, [pc, #80]	; (88338 <_malloc_r+0x30c>)
   882e8:	681a      	ldr	r2, [r3, #0]
   882ea:	428a      	cmp	r2, r1
   882ec:	bf38      	it	cc
   882ee:	6019      	strcc	r1, [r3, #0]
   882f0:	4b12      	ldr	r3, [pc, #72]	; (8833c <_malloc_r+0x310>)
   882f2:	681a      	ldr	r2, [r3, #0]
   882f4:	428a      	cmp	r2, r1
   882f6:	bf38      	it	cc
   882f8:	6019      	strcc	r1, [r3, #0]
   882fa:	e090      	b.n	8841e <_malloc_r+0x3f2>
   882fc:	1962      	adds	r2, r4, r5
   882fe:	f043 0301 	orr.w	r3, r3, #1
   88302:	f045 0501 	orr.w	r5, r5, #1
   88306:	6065      	str	r5, [r4, #4]
   88308:	4630      	mov	r0, r6
   8830a:	60ba      	str	r2, [r7, #8]
   8830c:	3408      	adds	r4, #8
   8830e:	6053      	str	r3, [r2, #4]
   88310:	f000 fa18 	bl	88744 <__malloc_unlock>
   88314:	4620      	mov	r0, r4
   88316:	b003      	add	sp, #12
   88318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8831c:	68d9      	ldr	r1, [r3, #12]
   8831e:	441a      	add	r2, r3
   88320:	e6a2      	b.n	88068 <_malloc_r+0x3c>
   88322:	bf00      	nop
   88324:	20000940 	.word	0x20000940
   88328:	20000948 	.word	0x20000948
   8832c:	20000d48 	.word	0x20000d48
   88330:	200013bc 	.word	0x200013bc
   88334:	2000138c 	.word	0x2000138c
   88338:	200013b4 	.word	0x200013b4
   8833c:	200013b8 	.word	0x200013b8
   88340:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
   88344:	ea4f 2352 	mov.w	r3, r2, lsr #9
   88348:	d35f      	bcc.n	8840a <_malloc_r+0x3de>
   8834a:	2b14      	cmp	r3, #20
   8834c:	f200 80b1 	bhi.w	884b2 <_malloc_r+0x486>
   88350:	f103 015c 	add.w	r1, r3, #92	; 0x5c
   88354:	00c9      	lsls	r1, r1, #3
   88356:	335b      	adds	r3, #91	; 0x5b
   88358:	1878      	adds	r0, r7, r1
   8835a:	5879      	ldr	r1, [r7, r1]
   8835c:	3808      	subs	r0, #8
   8835e:	4288      	cmp	r0, r1
   88360:	f000 808f 	beq.w	88482 <_malloc_r+0x456>
   88364:	684b      	ldr	r3, [r1, #4]
   88366:	f023 0303 	bic.w	r3, r3, #3
   8836a:	4293      	cmp	r3, r2
   8836c:	d902      	bls.n	88374 <_malloc_r+0x348>
   8836e:	6889      	ldr	r1, [r1, #8]
   88370:	4288      	cmp	r0, r1
   88372:	d1f7      	bne.n	88364 <_malloc_r+0x338>
   88374:	68c8      	ldr	r0, [r1, #12]
   88376:	687a      	ldr	r2, [r7, #4]
   88378:	e9c4 1002 	strd	r1, r0, [r4, #8]
   8837c:	6084      	str	r4, [r0, #8]
   8837e:	60cc      	str	r4, [r1, #12]
   88380:	e6d7      	b.n	88132 <_malloc_r+0x106>
   88382:	2b14      	cmp	r3, #20
   88384:	d959      	bls.n	8843a <_malloc_r+0x40e>
   88386:	2b54      	cmp	r3, #84	; 0x54
   88388:	f200 809b 	bhi.w	884c2 <_malloc_r+0x496>
   8838c:	0b2b      	lsrs	r3, r5, #12
   8838e:	f103 0c6f 	add.w	ip, r3, #111	; 0x6f
   88392:	f103 046e 	add.w	r4, r3, #110	; 0x6e
   88396:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   8839a:	e68f      	b.n	880bc <_malloc_r+0x90>
   8839c:	3401      	adds	r4, #1
   8839e:	07a3      	lsls	r3, r4, #30
   883a0:	f100 0008 	add.w	r0, r0, #8
   883a4:	f47f aed8 	bne.w	88158 <_malloc_r+0x12c>
   883a8:	e053      	b.n	88452 <_malloc_r+0x426>
   883aa:	4644      	mov	r4, r8
   883ac:	4442      	add	r2, r8
   883ae:	6853      	ldr	r3, [r2, #4]
   883b0:	f8d8 100c 	ldr.w	r1, [r8, #12]
   883b4:	f043 0301 	orr.w	r3, r3, #1
   883b8:	6053      	str	r3, [r2, #4]
   883ba:	f854 3f08 	ldr.w	r3, [r4, #8]!
   883be:	4630      	mov	r0, r6
   883c0:	60d9      	str	r1, [r3, #12]
   883c2:	608b      	str	r3, [r1, #8]
   883c4:	f000 f9be 	bl	88744 <__malloc_unlock>
   883c8:	e6f6      	b.n	881b8 <_malloc_r+0x18c>
   883ca:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   883ce:	f105 0208 	add.w	r2, r5, #8
   883d2:	e63c      	b.n	8804e <_malloc_r+0x22>
   883d4:	4422      	add	r2, r4
   883d6:	6853      	ldr	r3, [r2, #4]
   883d8:	4630      	mov	r0, r6
   883da:	f043 0301 	orr.w	r3, r3, #1
   883de:	6053      	str	r3, [r2, #4]
   883e0:	f000 f9b0 	bl	88744 <__malloc_unlock>
   883e4:	3408      	adds	r4, #8
   883e6:	e6e7      	b.n	881b8 <_malloc_r+0x18c>
   883e8:	1961      	adds	r1, r4, r5
   883ea:	f045 0501 	orr.w	r5, r5, #1
   883ee:	6065      	str	r5, [r4, #4]
   883f0:	f043 0501 	orr.w	r5, r3, #1
   883f4:	e9c7 1104 	strd	r1, r1, [r7, #16]
   883f8:	4630      	mov	r0, r6
   883fa:	e9c1 ee02 	strd	lr, lr, [r1, #8]
   883fe:	604d      	str	r5, [r1, #4]
   88400:	50a3      	str	r3, [r4, r2]
   88402:	f000 f99f 	bl	88744 <__malloc_unlock>
   88406:	3408      	adds	r4, #8
   88408:	e6d6      	b.n	881b8 <_malloc_r+0x18c>
   8840a:	0993      	lsrs	r3, r2, #6
   8840c:	f103 0139 	add.w	r1, r3, #57	; 0x39
   88410:	00c9      	lsls	r1, r1, #3
   88412:	3338      	adds	r3, #56	; 0x38
   88414:	e7a0      	b.n	88358 <_malloc_r+0x32c>
   88416:	42bc      	cmp	r4, r7
   88418:	d05e      	beq.n	884d8 <_malloc_r+0x4ac>
   8841a:	68bc      	ldr	r4, [r7, #8]
   8841c:	6860      	ldr	r0, [r4, #4]
   8841e:	f020 0803 	bic.w	r8, r0, #3
   88422:	4545      	cmp	r5, r8
   88424:	eba8 0305 	sub.w	r3, r8, r5
   88428:	d802      	bhi.n	88430 <_malloc_r+0x404>
   8842a:	2b0f      	cmp	r3, #15
   8842c:	f73f af66 	bgt.w	882fc <_malloc_r+0x2d0>
   88430:	4630      	mov	r0, r6
   88432:	f000 f987 	bl	88744 <__malloc_unlock>
   88436:	2400      	movs	r4, #0
   88438:	e6be      	b.n	881b8 <_malloc_r+0x18c>
   8843a:	f103 0c5c 	add.w	ip, r3, #92	; 0x5c
   8843e:	f103 045b 	add.w	r4, r3, #91	; 0x5b
   88442:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   88446:	e639      	b.n	880bc <_malloc_r+0x90>
   88448:	f859 3908 	ldr.w	r3, [r9], #-8
   8844c:	454b      	cmp	r3, r9
   8844e:	f040 8095 	bne.w	8857c <_malloc_r+0x550>
   88452:	f01c 0f03 	tst.w	ip, #3
   88456:	f10c 3cff 	add.w	ip, ip, #4294967295
   8845a:	d1f5      	bne.n	88448 <_malloc_r+0x41c>
   8845c:	687b      	ldr	r3, [r7, #4]
   8845e:	ea23 0301 	bic.w	r3, r3, r1
   88462:	607b      	str	r3, [r7, #4]
   88464:	0049      	lsls	r1, r1, #1
   88466:	4299      	cmp	r1, r3
   88468:	f63f aec3 	bhi.w	881f2 <_malloc_r+0x1c6>
   8846c:	b911      	cbnz	r1, 88474 <_malloc_r+0x448>
   8846e:	e6c0      	b.n	881f2 <_malloc_r+0x1c6>
   88470:	0049      	lsls	r1, r1, #1
   88472:	3404      	adds	r4, #4
   88474:	4219      	tst	r1, r3
   88476:	d0fb      	beq.n	88470 <_malloc_r+0x444>
   88478:	46a4      	mov	ip, r4
   8847a:	e669      	b.n	88150 <_malloc_r+0x124>
   8847c:	f103 0810 	add.w	r8, r3, #16
   88480:	e6d4      	b.n	8822c <_malloc_r+0x200>
   88482:	2201      	movs	r2, #1
   88484:	109b      	asrs	r3, r3, #2
   88486:	409a      	lsls	r2, r3
   88488:	687b      	ldr	r3, [r7, #4]
   8848a:	431a      	orrs	r2, r3
   8848c:	607a      	str	r2, [r7, #4]
   8848e:	e773      	b.n	88378 <_malloc_r+0x34c>
   88490:	eb02 0108 	add.w	r1, r2, r8
   88494:	4249      	negs	r1, r1
   88496:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
   8849a:	4651      	mov	r1, sl
   8849c:	4630      	mov	r0, r6
   8849e:	9200      	str	r2, [sp, #0]
   884a0:	f000 ff20 	bl	892e4 <_sbrk_r>
   884a4:	1c43      	adds	r3, r0, #1
   884a6:	e9dd 2300 	ldrd	r2, r3, [sp]
   884aa:	f47f aef5 	bne.w	88298 <_malloc_r+0x26c>
   884ae:	46da      	mov	sl, fp
   884b0:	e6f5      	b.n	8829e <_malloc_r+0x272>
   884b2:	2b54      	cmp	r3, #84	; 0x54
   884b4:	d826      	bhi.n	88504 <_malloc_r+0x4d8>
   884b6:	0b13      	lsrs	r3, r2, #12
   884b8:	f103 016f 	add.w	r1, r3, #111	; 0x6f
   884bc:	00c9      	lsls	r1, r1, #3
   884be:	336e      	adds	r3, #110	; 0x6e
   884c0:	e74a      	b.n	88358 <_malloc_r+0x32c>
   884c2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   884c6:	d826      	bhi.n	88516 <_malloc_r+0x4ea>
   884c8:	0beb      	lsrs	r3, r5, #15
   884ca:	f103 0c78 	add.w	ip, r3, #120	; 0x78
   884ce:	f103 0477 	add.w	r4, r3, #119	; 0x77
   884d2:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   884d6:	e5f1      	b.n	880bc <_malloc_r+0x90>
   884d8:	4b29      	ldr	r3, [pc, #164]	; (88580 <_malloc_r+0x554>)
   884da:	6818      	ldr	r0, [r3, #0]
   884dc:	4440      	add	r0, r8
   884de:	6018      	str	r0, [r3, #0]
   884e0:	e6b6      	b.n	88250 <_malloc_r+0x224>
   884e2:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
   884e6:	f1bc 0f00 	cmp.w	ip, #0
   884ea:	f47f aeb1 	bne.w	88250 <_malloc_r+0x224>
   884ee:	68bc      	ldr	r4, [r7, #8]
   884f0:	44c8      	add	r8, r9
   884f2:	f048 0001 	orr.w	r0, r8, #1
   884f6:	6060      	str	r0, [r4, #4]
   884f8:	e6f5      	b.n	882e6 <_malloc_r+0x2ba>
   884fa:	4614      	mov	r4, r2
   884fc:	e6f3      	b.n	882e6 <_malloc_r+0x2ba>
   884fe:	2301      	movs	r3, #1
   88500:	6053      	str	r3, [r2, #4]
   88502:	e795      	b.n	88430 <_malloc_r+0x404>
   88504:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   88508:	d824      	bhi.n	88554 <_malloc_r+0x528>
   8850a:	0bd3      	lsrs	r3, r2, #15
   8850c:	f103 0178 	add.w	r1, r3, #120	; 0x78
   88510:	00c9      	lsls	r1, r1, #3
   88512:	3377      	adds	r3, #119	; 0x77
   88514:	e720      	b.n	88358 <_malloc_r+0x32c>
   88516:	f240 5254 	movw	r2, #1364	; 0x554
   8851a:	4293      	cmp	r3, r2
   8851c:	d824      	bhi.n	88568 <_malloc_r+0x53c>
   8851e:	0cab      	lsrs	r3, r5, #18
   88520:	f103 0c7d 	add.w	ip, r3, #125	; 0x7d
   88524:	f103 047c 	add.w	r4, r3, #124	; 0x7c
   88528:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   8852c:	e5c6      	b.n	880bc <_malloc_r+0x90>
   8852e:	f1ab 0b08 	sub.w	fp, fp, #8
   88532:	44d8      	add	r8, fp
   88534:	f04f 0a00 	mov.w	sl, #0
   88538:	eba8 0802 	sub.w	r8, r8, r2
   8853c:	e6af      	b.n	8829e <_malloc_r+0x272>
   8853e:	f104 0108 	add.w	r1, r4, #8
   88542:	4630      	mov	r0, r6
   88544:	9300      	str	r3, [sp, #0]
   88546:	f7ff fa53 	bl	879f0 <_free_r>
   8854a:	68bc      	ldr	r4, [r7, #8]
   8854c:	9b00      	ldr	r3, [sp, #0]
   8854e:	6860      	ldr	r0, [r4, #4]
   88550:	6819      	ldr	r1, [r3, #0]
   88552:	e6c8      	b.n	882e6 <_malloc_r+0x2ba>
   88554:	f240 5154 	movw	r1, #1364	; 0x554
   88558:	428b      	cmp	r3, r1
   8855a:	d80b      	bhi.n	88574 <_malloc_r+0x548>
   8855c:	0c93      	lsrs	r3, r2, #18
   8855e:	f103 017d 	add.w	r1, r3, #125	; 0x7d
   88562:	00c9      	lsls	r1, r1, #3
   88564:	337c      	adds	r3, #124	; 0x7c
   88566:	e6f7      	b.n	88358 <_malloc_r+0x32c>
   88568:	f44f 707e 	mov.w	r0, #1016	; 0x3f8
   8856c:	f04f 0c7f 	mov.w	ip, #127	; 0x7f
   88570:	247e      	movs	r4, #126	; 0x7e
   88572:	e5a3      	b.n	880bc <_malloc_r+0x90>
   88574:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   88578:	237e      	movs	r3, #126	; 0x7e
   8857a:	e6ed      	b.n	88358 <_malloc_r+0x32c>
   8857c:	687b      	ldr	r3, [r7, #4]
   8857e:	e771      	b.n	88464 <_malloc_r+0x438>
   88580:	2000138c 	.word	0x2000138c

00088584 <__ascii_mbtowc>:
   88584:	b082      	sub	sp, #8
   88586:	b149      	cbz	r1, 8859c <__ascii_mbtowc+0x18>
   88588:	b15a      	cbz	r2, 885a2 <__ascii_mbtowc+0x1e>
   8858a:	b16b      	cbz	r3, 885a8 <__ascii_mbtowc+0x24>
   8858c:	7813      	ldrb	r3, [r2, #0]
   8858e:	600b      	str	r3, [r1, #0]
   88590:	7812      	ldrb	r2, [r2, #0]
   88592:	1e10      	subs	r0, r2, #0
   88594:	bf18      	it	ne
   88596:	2001      	movne	r0, #1
   88598:	b002      	add	sp, #8
   8859a:	4770      	bx	lr
   8859c:	a901      	add	r1, sp, #4
   8859e:	2a00      	cmp	r2, #0
   885a0:	d1f3      	bne.n	8858a <__ascii_mbtowc+0x6>
   885a2:	4610      	mov	r0, r2
   885a4:	b002      	add	sp, #8
   885a6:	4770      	bx	lr
   885a8:	f06f 0001 	mvn.w	r0, #1
   885ac:	e7f4      	b.n	88598 <__ascii_mbtowc+0x14>
   885ae:	bf00      	nop

000885b0 <memchr>:
   885b0:	fa5f fc81 	uxtb.w	ip, r1
   885b4:	0781      	lsls	r1, r0, #30
   885b6:	d010      	beq.n	885da <memchr+0x2a>
   885b8:	4603      	mov	r3, r0
   885ba:	1e51      	subs	r1, r2, #1
   885bc:	b92a      	cbnz	r2, 885ca <memchr+0x1a>
   885be:	e00a      	b.n	885d6 <memchr+0x26>
   885c0:	079a      	lsls	r2, r3, #30
   885c2:	4618      	mov	r0, r3
   885c4:	d00a      	beq.n	885dc <memchr+0x2c>
   885c6:	3901      	subs	r1, #1
   885c8:	d305      	bcc.n	885d6 <memchr+0x26>
   885ca:	4618      	mov	r0, r3
   885cc:	f813 2b01 	ldrb.w	r2, [r3], #1
   885d0:	4562      	cmp	r2, ip
   885d2:	d1f5      	bne.n	885c0 <memchr+0x10>
   885d4:	4770      	bx	lr
   885d6:	2000      	movs	r0, #0
   885d8:	4770      	bx	lr
   885da:	4611      	mov	r1, r2
   885dc:	2903      	cmp	r1, #3
   885de:	d80c      	bhi.n	885fa <memchr+0x4a>
   885e0:	2900      	cmp	r1, #0
   885e2:	d0f8      	beq.n	885d6 <memchr+0x26>
   885e4:	4603      	mov	r3, r0
   885e6:	4401      	add	r1, r0
   885e8:	e001      	b.n	885ee <memchr+0x3e>
   885ea:	428b      	cmp	r3, r1
   885ec:	d0f3      	beq.n	885d6 <memchr+0x26>
   885ee:	4618      	mov	r0, r3
   885f0:	f813 2b01 	ldrb.w	r2, [r3], #1
   885f4:	4562      	cmp	r2, ip
   885f6:	d1f8      	bne.n	885ea <memchr+0x3a>
   885f8:	e7ec      	b.n	885d4 <memchr+0x24>
   885fa:	4602      	mov	r2, r0
   885fc:	b510      	push	{r4, lr}
   885fe:	ea4c 240c 	orr.w	r4, ip, ip, lsl #8
   88602:	ea44 4404 	orr.w	r4, r4, r4, lsl #16
   88606:	4610      	mov	r0, r2
   88608:	6803      	ldr	r3, [r0, #0]
   8860a:	3204      	adds	r2, #4
   8860c:	4063      	eors	r3, r4
   8860e:	f1a3 3e01 	sub.w	lr, r3, #16843009	; 0x1010101
   88612:	ea2e 0303 	bic.w	r3, lr, r3
   88616:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   8861a:	d104      	bne.n	88626 <memchr+0x76>
   8861c:	3904      	subs	r1, #4
   8861e:	2903      	cmp	r1, #3
   88620:	4610      	mov	r0, r2
   88622:	d8f0      	bhi.n	88606 <memchr+0x56>
   88624:	b151      	cbz	r1, 8863c <memchr+0x8c>
   88626:	4603      	mov	r3, r0
   88628:	4401      	add	r1, r0
   8862a:	e001      	b.n	88630 <memchr+0x80>
   8862c:	428b      	cmp	r3, r1
   8862e:	d005      	beq.n	8863c <memchr+0x8c>
   88630:	4618      	mov	r0, r3
   88632:	f813 2b01 	ldrb.w	r2, [r3], #1
   88636:	4562      	cmp	r2, ip
   88638:	d1f8      	bne.n	8862c <memchr+0x7c>
   8863a:	bd10      	pop	{r4, pc}
   8863c:	2000      	movs	r0, #0
   8863e:	bd10      	pop	{r4, pc}

00088640 <memmove>:
   88640:	4288      	cmp	r0, r1
   88642:	d90d      	bls.n	88660 <memmove+0x20>
   88644:	188b      	adds	r3, r1, r2
   88646:	4283      	cmp	r3, r0
   88648:	d90a      	bls.n	88660 <memmove+0x20>
   8864a:	eb00 0c02 	add.w	ip, r0, r2
   8864e:	b1ba      	cbz	r2, 88680 <memmove+0x40>
   88650:	4662      	mov	r2, ip
   88652:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
   88656:	4299      	cmp	r1, r3
   88658:	f802 cd01 	strb.w	ip, [r2, #-1]!
   8865c:	d1f9      	bne.n	88652 <memmove+0x12>
   8865e:	4770      	bx	lr
   88660:	2a0f      	cmp	r2, #15
   88662:	d80e      	bhi.n	88682 <memmove+0x42>
   88664:	4603      	mov	r3, r0
   88666:	f102 3cff 	add.w	ip, r2, #4294967295
   8866a:	b14a      	cbz	r2, 88680 <memmove+0x40>
   8866c:	f10c 0c01 	add.w	ip, ip, #1
   88670:	3b01      	subs	r3, #1
   88672:	448c      	add	ip, r1
   88674:	f811 2b01 	ldrb.w	r2, [r1], #1
   88678:	4561      	cmp	r1, ip
   8867a:	f803 2f01 	strb.w	r2, [r3, #1]!
   8867e:	d1f9      	bne.n	88674 <memmove+0x34>
   88680:	4770      	bx	lr
   88682:	ea40 0301 	orr.w	r3, r0, r1
   88686:	079b      	lsls	r3, r3, #30
   88688:	d14f      	bne.n	8872a <memmove+0xea>
   8868a:	f1a2 0310 	sub.w	r3, r2, #16
   8868e:	b570      	push	{r4, r5, r6, lr}
   88690:	f101 0c20 	add.w	ip, r1, #32
   88694:	f023 050f 	bic.w	r5, r3, #15
   88698:	f101 0e10 	add.w	lr, r1, #16
   8869c:	f100 0410 	add.w	r4, r0, #16
   886a0:	44ac      	add	ip, r5
   886a2:	091b      	lsrs	r3, r3, #4
   886a4:	f85e 5c10 	ldr.w	r5, [lr, #-16]
   886a8:	f10e 0e10 	add.w	lr, lr, #16
   886ac:	f844 5c10 	str.w	r5, [r4, #-16]
   886b0:	f85e 5c1c 	ldr.w	r5, [lr, #-28]
   886b4:	3410      	adds	r4, #16
   886b6:	f844 5c1c 	str.w	r5, [r4, #-28]
   886ba:	f85e 5c18 	ldr.w	r5, [lr, #-24]
   886be:	f844 5c18 	str.w	r5, [r4, #-24]
   886c2:	f85e 5c14 	ldr.w	r5, [lr, #-20]
   886c6:	45e6      	cmp	lr, ip
   886c8:	f844 5c14 	str.w	r5, [r4, #-20]
   886cc:	d1ea      	bne.n	886a4 <memmove+0x64>
   886ce:	3301      	adds	r3, #1
   886d0:	f012 0f0c 	tst.w	r2, #12
   886d4:	eb01 1103 	add.w	r1, r1, r3, lsl #4
   886d8:	f002 040f 	and.w	r4, r2, #15
   886dc:	eb00 1303 	add.w	r3, r0, r3, lsl #4
   886e0:	d027      	beq.n	88732 <memmove+0xf2>
   886e2:	468e      	mov	lr, r1
   886e4:	3c04      	subs	r4, #4
   886e6:	f024 0603 	bic.w	r6, r4, #3
   886ea:	ea4f 0c94 	mov.w	ip, r4, lsr #2
   886ee:	441e      	add	r6, r3
   886f0:	1f1c      	subs	r4, r3, #4
   886f2:	f85e 5b04 	ldr.w	r5, [lr], #4
   886f6:	f844 5f04 	str.w	r5, [r4, #4]!
   886fa:	42b4      	cmp	r4, r6
   886fc:	d1f9      	bne.n	886f2 <memmove+0xb2>
   886fe:	f10c 0401 	add.w	r4, ip, #1
   88702:	f002 0203 	and.w	r2, r2, #3
   88706:	eb03 0384 	add.w	r3, r3, r4, lsl #2
   8870a:	eb01 0184 	add.w	r1, r1, r4, lsl #2
   8870e:	f102 3cff 	add.w	ip, r2, #4294967295
   88712:	b14a      	cbz	r2, 88728 <memmove+0xe8>
   88714:	f10c 0c01 	add.w	ip, ip, #1
   88718:	3b01      	subs	r3, #1
   8871a:	448c      	add	ip, r1
   8871c:	f811 2b01 	ldrb.w	r2, [r1], #1
   88720:	4561      	cmp	r1, ip
   88722:	f803 2f01 	strb.w	r2, [r3, #1]!
   88726:	d1f9      	bne.n	8871c <memmove+0xdc>
   88728:	bd70      	pop	{r4, r5, r6, pc}
   8872a:	4603      	mov	r3, r0
   8872c:	f102 3cff 	add.w	ip, r2, #4294967295
   88730:	e79c      	b.n	8866c <memmove+0x2c>
   88732:	4622      	mov	r2, r4
   88734:	e7eb      	b.n	8870e <memmove+0xce>
   88736:	bf00      	nop

00088738 <__malloc_lock>:
   88738:	4801      	ldr	r0, [pc, #4]	; (88740 <__malloc_lock+0x8>)
   8873a:	f7ff bc03 	b.w	87f44 <__retarget_lock_acquire_recursive>
   8873e:	bf00      	nop
   88740:	20001380 	.word	0x20001380

00088744 <__malloc_unlock>:
   88744:	4801      	ldr	r0, [pc, #4]	; (8874c <__malloc_unlock+0x8>)
   88746:	f7ff bbff 	b.w	87f48 <__retarget_lock_release_recursive>
   8874a:	bf00      	nop
   8874c:	20001380 	.word	0x20001380

00088750 <_Balloc>:
   88750:	b538      	push	{r3, r4, r5, lr}
   88752:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   88754:	4605      	mov	r5, r0
   88756:	460c      	mov	r4, r1
   88758:	b14b      	cbz	r3, 8876e <_Balloc+0x1e>
   8875a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8875e:	b180      	cbz	r0, 88782 <_Balloc+0x32>
   88760:	6802      	ldr	r2, [r0, #0]
   88762:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   88766:	2300      	movs	r3, #0
   88768:	e9c0 3303 	strd	r3, r3, [r0, #12]
   8876c:	bd38      	pop	{r3, r4, r5, pc}
   8876e:	2221      	movs	r2, #33	; 0x21
   88770:	2104      	movs	r1, #4
   88772:	f000 ff8d 	bl	89690 <_calloc_r>
   88776:	4603      	mov	r3, r0
   88778:	64e8      	str	r0, [r5, #76]	; 0x4c
   8877a:	2800      	cmp	r0, #0
   8877c:	d1ed      	bne.n	8875a <_Balloc+0xa>
   8877e:	2000      	movs	r0, #0
   88780:	bd38      	pop	{r3, r4, r5, pc}
   88782:	2101      	movs	r1, #1
   88784:	4628      	mov	r0, r5
   88786:	fa01 f504 	lsl.w	r5, r1, r4
   8878a:	1d6a      	adds	r2, r5, #5
   8878c:	0092      	lsls	r2, r2, #2
   8878e:	f000 ff7f 	bl	89690 <_calloc_r>
   88792:	2800      	cmp	r0, #0
   88794:	d0f3      	beq.n	8877e <_Balloc+0x2e>
   88796:	e9c0 4501 	strd	r4, r5, [r0, #4]
   8879a:	e7e4      	b.n	88766 <_Balloc+0x16>

0008879c <_Bfree>:
   8879c:	b131      	cbz	r1, 887ac <_Bfree+0x10>
   8879e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   887a0:	684a      	ldr	r2, [r1, #4]
   887a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   887a6:	6008      	str	r0, [r1, #0]
   887a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   887ac:	4770      	bx	lr
   887ae:	bf00      	nop

000887b0 <__multadd>:
   887b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   887b4:	f04f 0e00 	mov.w	lr, #0
   887b8:	460e      	mov	r6, r1
   887ba:	461c      	mov	r4, r3
   887bc:	690d      	ldr	r5, [r1, #16]
   887be:	4607      	mov	r7, r0
   887c0:	f101 0014 	add.w	r0, r1, #20
   887c4:	6801      	ldr	r1, [r0, #0]
   887c6:	f10e 0e01 	add.w	lr, lr, #1
   887ca:	b28b      	uxth	r3, r1
   887cc:	fb02 4303 	mla	r3, r2, r3, r4
   887d0:	0c09      	lsrs	r1, r1, #16
   887d2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   887d6:	fb02 cc01 	mla	ip, r2, r1, ip
   887da:	b29b      	uxth	r3, r3
   887dc:	eb03 430c 	add.w	r3, r3, ip, lsl #16
   887e0:	4575      	cmp	r5, lr
   887e2:	f840 3b04 	str.w	r3, [r0], #4
   887e6:	ea4f 441c 	mov.w	r4, ip, lsr #16
   887ea:	dceb      	bgt.n	887c4 <__multadd+0x14>
   887ec:	b13c      	cbz	r4, 887fe <__multadd+0x4e>
   887ee:	68b3      	ldr	r3, [r6, #8]
   887f0:	42ab      	cmp	r3, r5
   887f2:	dd07      	ble.n	88804 <__multadd+0x54>
   887f4:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   887f8:	3501      	adds	r5, #1
   887fa:	615c      	str	r4, [r3, #20]
   887fc:	6135      	str	r5, [r6, #16]
   887fe:	4630      	mov	r0, r6
   88800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88804:	6871      	ldr	r1, [r6, #4]
   88806:	4638      	mov	r0, r7
   88808:	3101      	adds	r1, #1
   8880a:	f7ff ffa1 	bl	88750 <_Balloc>
   8880e:	4680      	mov	r8, r0
   88810:	b1a8      	cbz	r0, 8883e <__multadd+0x8e>
   88812:	6932      	ldr	r2, [r6, #16]
   88814:	f106 010c 	add.w	r1, r6, #12
   88818:	3202      	adds	r2, #2
   8881a:	0092      	lsls	r2, r2, #2
   8881c:	300c      	adds	r0, #12
   8881e:	f7fb f845 	bl	838ac <memcpy>
   88822:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88824:	6872      	ldr	r2, [r6, #4]
   88826:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8882a:	6031      	str	r1, [r6, #0]
   8882c:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   88830:	4646      	mov	r6, r8
   88832:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   88836:	3501      	adds	r5, #1
   88838:	615c      	str	r4, [r3, #20]
   8883a:	6135      	str	r5, [r6, #16]
   8883c:	e7df      	b.n	887fe <__multadd+0x4e>
   8883e:	4602      	mov	r2, r0
   88840:	21b5      	movs	r1, #181	; 0xb5
   88842:	4b02      	ldr	r3, [pc, #8]	; (8884c <__multadd+0x9c>)
   88844:	4802      	ldr	r0, [pc, #8]	; (88850 <__multadd+0xa0>)
   88846:	f000 ff03 	bl	89650 <__assert_func>
   8884a:	bf00      	nop
   8884c:	0008a6a4 	.word	0x0008a6a4
   88850:	0008a748 	.word	0x0008a748

00088854 <__hi0bits>:
   88854:	0c02      	lsrs	r2, r0, #16
   88856:	0412      	lsls	r2, r2, #16
   88858:	4603      	mov	r3, r0
   8885a:	b9ca      	cbnz	r2, 88890 <__hi0bits+0x3c>
   8885c:	2010      	movs	r0, #16
   8885e:	4083      	lsls	r3, r0
   88860:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   88864:	bf04      	itt	eq
   88866:	021b      	lsleq	r3, r3, #8
   88868:	3008      	addeq	r0, #8
   8886a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8886e:	bf04      	itt	eq
   88870:	011b      	lsleq	r3, r3, #4
   88872:	3004      	addeq	r0, #4
   88874:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   88878:	bf04      	itt	eq
   8887a:	009b      	lsleq	r3, r3, #2
   8887c:	3002      	addeq	r0, #2
   8887e:	2b00      	cmp	r3, #0
   88880:	db05      	blt.n	8888e <__hi0bits+0x3a>
   88882:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
   88886:	f100 0001 	add.w	r0, r0, #1
   8888a:	bf08      	it	eq
   8888c:	2020      	moveq	r0, #32
   8888e:	4770      	bx	lr
   88890:	2000      	movs	r0, #0
   88892:	e7e5      	b.n	88860 <__hi0bits+0xc>

00088894 <__lo0bits>:
   88894:	6803      	ldr	r3, [r0, #0]
   88896:	4602      	mov	r2, r0
   88898:	f013 0007 	ands.w	r0, r3, #7
   8889c:	d009      	beq.n	888b2 <__lo0bits+0x1e>
   8889e:	07d9      	lsls	r1, r3, #31
   888a0:	d41f      	bmi.n	888e2 <__lo0bits+0x4e>
   888a2:	0798      	lsls	r0, r3, #30
   888a4:	bf4b      	itete	mi
   888a6:	085b      	lsrmi	r3, r3, #1
   888a8:	089b      	lsrpl	r3, r3, #2
   888aa:	2001      	movmi	r0, #1
   888ac:	2002      	movpl	r0, #2
   888ae:	6013      	str	r3, [r2, #0]
   888b0:	4770      	bx	lr
   888b2:	b299      	uxth	r1, r3
   888b4:	b909      	cbnz	r1, 888ba <__lo0bits+0x26>
   888b6:	2010      	movs	r0, #16
   888b8:	40c3      	lsrs	r3, r0
   888ba:	b2d9      	uxtb	r1, r3
   888bc:	b909      	cbnz	r1, 888c2 <__lo0bits+0x2e>
   888be:	3008      	adds	r0, #8
   888c0:	0a1b      	lsrs	r3, r3, #8
   888c2:	0719      	lsls	r1, r3, #28
   888c4:	bf04      	itt	eq
   888c6:	091b      	lsreq	r3, r3, #4
   888c8:	3004      	addeq	r0, #4
   888ca:	0799      	lsls	r1, r3, #30
   888cc:	bf04      	itt	eq
   888ce:	089b      	lsreq	r3, r3, #2
   888d0:	3002      	addeq	r0, #2
   888d2:	07d9      	lsls	r1, r3, #31
   888d4:	d403      	bmi.n	888de <__lo0bits+0x4a>
   888d6:	085b      	lsrs	r3, r3, #1
   888d8:	f100 0001 	add.w	r0, r0, #1
   888dc:	d003      	beq.n	888e6 <__lo0bits+0x52>
   888de:	6013      	str	r3, [r2, #0]
   888e0:	4770      	bx	lr
   888e2:	2000      	movs	r0, #0
   888e4:	4770      	bx	lr
   888e6:	2020      	movs	r0, #32
   888e8:	4770      	bx	lr
   888ea:	bf00      	nop

000888ec <__i2b>:
   888ec:	b538      	push	{r3, r4, r5, lr}
   888ee:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   888f0:	4604      	mov	r4, r0
   888f2:	460d      	mov	r5, r1
   888f4:	b14b      	cbz	r3, 8890a <__i2b+0x1e>
   888f6:	6858      	ldr	r0, [r3, #4]
   888f8:	b1b0      	cbz	r0, 88928 <__i2b+0x3c>
   888fa:	6802      	ldr	r2, [r0, #0]
   888fc:	605a      	str	r2, [r3, #4]
   888fe:	2200      	movs	r2, #0
   88900:	2301      	movs	r3, #1
   88902:	6145      	str	r5, [r0, #20]
   88904:	e9c0 2303 	strd	r2, r3, [r0, #12]
   88908:	bd38      	pop	{r3, r4, r5, pc}
   8890a:	2221      	movs	r2, #33	; 0x21
   8890c:	2104      	movs	r1, #4
   8890e:	f000 febf 	bl	89690 <_calloc_r>
   88912:	4603      	mov	r3, r0
   88914:	64e0      	str	r0, [r4, #76]	; 0x4c
   88916:	2800      	cmp	r0, #0
   88918:	d1ed      	bne.n	888f6 <__i2b+0xa>
   8891a:	2200      	movs	r2, #0
   8891c:	f44f 71a0 	mov.w	r1, #320	; 0x140
   88920:	4b07      	ldr	r3, [pc, #28]	; (88940 <__i2b+0x54>)
   88922:	4808      	ldr	r0, [pc, #32]	; (88944 <__i2b+0x58>)
   88924:	f000 fe94 	bl	89650 <__assert_func>
   88928:	221c      	movs	r2, #28
   8892a:	2101      	movs	r1, #1
   8892c:	4620      	mov	r0, r4
   8892e:	f000 feaf 	bl	89690 <_calloc_r>
   88932:	2800      	cmp	r0, #0
   88934:	d0f1      	beq.n	8891a <__i2b+0x2e>
   88936:	2201      	movs	r2, #1
   88938:	2302      	movs	r3, #2
   8893a:	e9c0 2301 	strd	r2, r3, [r0, #4]
   8893e:	e7de      	b.n	888fe <__i2b+0x12>
   88940:	0008a6a4 	.word	0x0008a6a4
   88944:	0008a748 	.word	0x0008a748

00088948 <__multiply>:
   88948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8894c:	690e      	ldr	r6, [r1, #16]
   8894e:	6915      	ldr	r5, [r2, #16]
   88950:	4688      	mov	r8, r1
   88952:	42ae      	cmp	r6, r5
   88954:	4614      	mov	r4, r2
   88956:	b085      	sub	sp, #20
   88958:	db05      	blt.n	88966 <__multiply+0x1e>
   8895a:	462a      	mov	r2, r5
   8895c:	4623      	mov	r3, r4
   8895e:	4635      	mov	r5, r6
   88960:	460c      	mov	r4, r1
   88962:	4616      	mov	r6, r2
   88964:	4698      	mov	r8, r3
   88966:	68a3      	ldr	r3, [r4, #8]
   88968:	6861      	ldr	r1, [r4, #4]
   8896a:	19af      	adds	r7, r5, r6
   8896c:	42bb      	cmp	r3, r7
   8896e:	bfb8      	it	lt
   88970:	3101      	addlt	r1, #1
   88972:	f7ff feed 	bl	88750 <_Balloc>
   88976:	9001      	str	r0, [sp, #4]
   88978:	2800      	cmp	r0, #0
   8897a:	f000 8087 	beq.w	88a8c <__multiply+0x144>
   8897e:	9b01      	ldr	r3, [sp, #4]
   88980:	f103 0914 	add.w	r9, r3, #20
   88984:	eb09 0a87 	add.w	sl, r9, r7, lsl #2
   88988:	45d1      	cmp	r9, sl
   8898a:	d205      	bcs.n	88998 <__multiply+0x50>
   8898c:	464b      	mov	r3, r9
   8898e:	2200      	movs	r2, #0
   88990:	f843 2b04 	str.w	r2, [r3], #4
   88994:	459a      	cmp	sl, r3
   88996:	d8fb      	bhi.n	88990 <__multiply+0x48>
   88998:	f108 0814 	add.w	r8, r8, #20
   8899c:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
   889a0:	f104 0314 	add.w	r3, r4, #20
   889a4:	45d8      	cmp	r8, fp
   889a6:	461a      	mov	r2, r3
   889a8:	eb03 0585 	add.w	r5, r3, r5, lsl #2
   889ac:	d25f      	bcs.n	88a6e <__multiply+0x126>
   889ae:	1b2b      	subs	r3, r5, r4
   889b0:	3b15      	subs	r3, #21
   889b2:	f023 0303 	bic.w	r3, r3, #3
   889b6:	3304      	adds	r3, #4
   889b8:	3415      	adds	r4, #21
   889ba:	42a5      	cmp	r5, r4
   889bc:	bf38      	it	cc
   889be:	2304      	movcc	r3, #4
   889c0:	e9cd a702 	strd	sl, r7, [sp, #8]
   889c4:	46ac      	mov	ip, r5
   889c6:	461f      	mov	r7, r3
   889c8:	4692      	mov	sl, r2
   889ca:	e005      	b.n	889d8 <__multiply+0x90>
   889cc:	0c00      	lsrs	r0, r0, #16
   889ce:	d129      	bne.n	88a24 <__multiply+0xdc>
   889d0:	45c3      	cmp	fp, r8
   889d2:	f109 0904 	add.w	r9, r9, #4
   889d6:	d948      	bls.n	88a6a <__multiply+0x122>
   889d8:	f858 0b04 	ldr.w	r0, [r8], #4
   889dc:	b285      	uxth	r5, r0
   889de:	2d00      	cmp	r5, #0
   889e0:	d0f4      	beq.n	889cc <__multiply+0x84>
   889e2:	4656      	mov	r6, sl
   889e4:	464c      	mov	r4, r9
   889e6:	2300      	movs	r3, #0
   889e8:	f856 0b04 	ldr.w	r0, [r6], #4
   889ec:	6821      	ldr	r1, [r4, #0]
   889ee:	b282      	uxth	r2, r0
   889f0:	fa1f fe81 	uxth.w	lr, r1
   889f4:	fb05 ee02 	mla	lr, r5, r2, lr
   889f8:	0c00      	lsrs	r0, r0, #16
   889fa:	0c0a      	lsrs	r2, r1, #16
   889fc:	fb05 2200 	mla	r2, r5, r0, r2
   88a00:	4473      	add	r3, lr
   88a02:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   88a06:	b29b      	uxth	r3, r3
   88a08:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   88a0c:	45b4      	cmp	ip, r6
   88a0e:	f844 3b04 	str.w	r3, [r4], #4
   88a12:	ea4f 4312 	mov.w	r3, r2, lsr #16
   88a16:	d8e7      	bhi.n	889e8 <__multiply+0xa0>
   88a18:	f849 3007 	str.w	r3, [r9, r7]
   88a1c:	f858 0c04 	ldr.w	r0, [r8, #-4]
   88a20:	0c00      	lsrs	r0, r0, #16
   88a22:	d0d5      	beq.n	889d0 <__multiply+0x88>
   88a24:	f8d9 3000 	ldr.w	r3, [r9]
   88a28:	4654      	mov	r4, sl
   88a2a:	4619      	mov	r1, r3
   88a2c:	464d      	mov	r5, r9
   88a2e:	2200      	movs	r2, #0
   88a30:	8826      	ldrh	r6, [r4, #0]
   88a32:	0c09      	lsrs	r1, r1, #16
   88a34:	fb00 1106 	mla	r1, r0, r6, r1
   88a38:	b29b      	uxth	r3, r3
   88a3a:	440a      	add	r2, r1
   88a3c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   88a40:	f845 3b04 	str.w	r3, [r5], #4
   88a44:	f854 6b04 	ldr.w	r6, [r4], #4
   88a48:	6829      	ldr	r1, [r5, #0]
   88a4a:	0c36      	lsrs	r6, r6, #16
   88a4c:	b28b      	uxth	r3, r1
   88a4e:	fb00 3306 	mla	r3, r0, r6, r3
   88a52:	45a4      	cmp	ip, r4
   88a54:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   88a58:	ea4f 4213 	mov.w	r2, r3, lsr #16
   88a5c:	d8e8      	bhi.n	88a30 <__multiply+0xe8>
   88a5e:	45c3      	cmp	fp, r8
   88a60:	f849 3007 	str.w	r3, [r9, r7]
   88a64:	f109 0904 	add.w	r9, r9, #4
   88a68:	d8b6      	bhi.n	889d8 <__multiply+0x90>
   88a6a:	e9dd a702 	ldrd	sl, r7, [sp, #8]
   88a6e:	2f00      	cmp	r7, #0
   88a70:	dc02      	bgt.n	88a78 <__multiply+0x130>
   88a72:	e005      	b.n	88a80 <__multiply+0x138>
   88a74:	3f01      	subs	r7, #1
   88a76:	d003      	beq.n	88a80 <__multiply+0x138>
   88a78:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   88a7c:	2b00      	cmp	r3, #0
   88a7e:	d0f9      	beq.n	88a74 <__multiply+0x12c>
   88a80:	9b01      	ldr	r3, [sp, #4]
   88a82:	4618      	mov	r0, r3
   88a84:	611f      	str	r7, [r3, #16]
   88a86:	b005      	add	sp, #20
   88a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88a8c:	4602      	mov	r2, r0
   88a8e:	f240 115d 	movw	r1, #349	; 0x15d
   88a92:	4b02      	ldr	r3, [pc, #8]	; (88a9c <__multiply+0x154>)
   88a94:	4802      	ldr	r0, [pc, #8]	; (88aa0 <__multiply+0x158>)
   88a96:	f000 fddb 	bl	89650 <__assert_func>
   88a9a:	bf00      	nop
   88a9c:	0008a6a4 	.word	0x0008a6a4
   88aa0:	0008a748 	.word	0x0008a748

00088aa4 <__pow5mult>:
   88aa4:	f012 0303 	ands.w	r3, r2, #3
   88aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88aac:	4614      	mov	r4, r2
   88aae:	4607      	mov	r7, r0
   88ab0:	d12e      	bne.n	88b10 <__pow5mult+0x6c>
   88ab2:	460e      	mov	r6, r1
   88ab4:	10a4      	asrs	r4, r4, #2
   88ab6:	d01c      	beq.n	88af2 <__pow5mult+0x4e>
   88ab8:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   88aba:	b395      	cbz	r5, 88b22 <__pow5mult+0x7e>
   88abc:	07e3      	lsls	r3, r4, #31
   88abe:	f04f 0800 	mov.w	r8, #0
   88ac2:	d406      	bmi.n	88ad2 <__pow5mult+0x2e>
   88ac4:	1064      	asrs	r4, r4, #1
   88ac6:	d014      	beq.n	88af2 <__pow5mult+0x4e>
   88ac8:	6828      	ldr	r0, [r5, #0]
   88aca:	b1a8      	cbz	r0, 88af8 <__pow5mult+0x54>
   88acc:	4605      	mov	r5, r0
   88ace:	07e3      	lsls	r3, r4, #31
   88ad0:	d5f8      	bpl.n	88ac4 <__pow5mult+0x20>
   88ad2:	462a      	mov	r2, r5
   88ad4:	4631      	mov	r1, r6
   88ad6:	4638      	mov	r0, r7
   88ad8:	f7ff ff36 	bl	88948 <__multiply>
   88adc:	b1b6      	cbz	r6, 88b0c <__pow5mult+0x68>
   88ade:	6871      	ldr	r1, [r6, #4]
   88ae0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88ae2:	1064      	asrs	r4, r4, #1
   88ae4:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
   88ae8:	6032      	str	r2, [r6, #0]
   88aea:	f843 6021 	str.w	r6, [r3, r1, lsl #2]
   88aee:	4606      	mov	r6, r0
   88af0:	d1ea      	bne.n	88ac8 <__pow5mult+0x24>
   88af2:	4630      	mov	r0, r6
   88af4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88af8:	462a      	mov	r2, r5
   88afa:	4629      	mov	r1, r5
   88afc:	4638      	mov	r0, r7
   88afe:	f7ff ff23 	bl	88948 <__multiply>
   88b02:	6028      	str	r0, [r5, #0]
   88b04:	4605      	mov	r5, r0
   88b06:	f8c0 8000 	str.w	r8, [r0]
   88b0a:	e7e0      	b.n	88ace <__pow5mult+0x2a>
   88b0c:	4606      	mov	r6, r0
   88b0e:	e7d9      	b.n	88ac4 <__pow5mult+0x20>
   88b10:	4a0f      	ldr	r2, [pc, #60]	; (88b50 <__pow5mult+0xac>)
   88b12:	3b01      	subs	r3, #1
   88b14:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   88b18:	2300      	movs	r3, #0
   88b1a:	f7ff fe49 	bl	887b0 <__multadd>
   88b1e:	4606      	mov	r6, r0
   88b20:	e7c8      	b.n	88ab4 <__pow5mult+0x10>
   88b22:	2101      	movs	r1, #1
   88b24:	4638      	mov	r0, r7
   88b26:	f7ff fe13 	bl	88750 <_Balloc>
   88b2a:	4605      	mov	r5, r0
   88b2c:	b140      	cbz	r0, 88b40 <__pow5mult+0x9c>
   88b2e:	f240 2371 	movw	r3, #625	; 0x271
   88b32:	2201      	movs	r2, #1
   88b34:	e9c0 2304 	strd	r2, r3, [r0, #16]
   88b38:	2300      	movs	r3, #0
   88b3a:	64b8      	str	r0, [r7, #72]	; 0x48
   88b3c:	6003      	str	r3, [r0, #0]
   88b3e:	e7bd      	b.n	88abc <__pow5mult+0x18>
   88b40:	4602      	mov	r2, r0
   88b42:	f44f 71a0 	mov.w	r1, #320	; 0x140
   88b46:	4b03      	ldr	r3, [pc, #12]	; (88b54 <__pow5mult+0xb0>)
   88b48:	4803      	ldr	r0, [pc, #12]	; (88b58 <__pow5mult+0xb4>)
   88b4a:	f000 fd81 	bl	89650 <__assert_func>
   88b4e:	bf00      	nop
   88b50:	0008a8b8 	.word	0x0008a8b8
   88b54:	0008a6a4 	.word	0x0008a6a4
   88b58:	0008a748 	.word	0x0008a748

00088b5c <__lshift>:
   88b5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   88b60:	460c      	mov	r4, r1
   88b62:	6926      	ldr	r6, [r4, #16]
   88b64:	68a3      	ldr	r3, [r4, #8]
   88b66:	eb06 1662 	add.w	r6, r6, r2, asr #5
   88b6a:	1c75      	adds	r5, r6, #1
   88b6c:	429d      	cmp	r5, r3
   88b6e:	4690      	mov	r8, r2
   88b70:	4607      	mov	r7, r0
   88b72:	6849      	ldr	r1, [r1, #4]
   88b74:	ea4f 1962 	mov.w	r9, r2, asr #5
   88b78:	dd04      	ble.n	88b84 <__lshift+0x28>
   88b7a:	005b      	lsls	r3, r3, #1
   88b7c:	429d      	cmp	r5, r3
   88b7e:	f101 0101 	add.w	r1, r1, #1
   88b82:	dcfa      	bgt.n	88b7a <__lshift+0x1e>
   88b84:	4638      	mov	r0, r7
   88b86:	f7ff fde3 	bl	88750 <_Balloc>
   88b8a:	2800      	cmp	r0, #0
   88b8c:	d051      	beq.n	88c32 <__lshift+0xd6>
   88b8e:	f1b9 0f00 	cmp.w	r9, #0
   88b92:	f100 0114 	add.w	r1, r0, #20
   88b96:	dd0f      	ble.n	88bb8 <__lshift+0x5c>
   88b98:	460b      	mov	r3, r1
   88b9a:	f04f 0c00 	mov.w	ip, #0
   88b9e:	f109 0205 	add.w	r2, r9, #5
   88ba2:	ea4f 0e82 	mov.w	lr, r2, lsl #2
   88ba6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
   88baa:	f843 cb04 	str.w	ip, [r3], #4
   88bae:	4293      	cmp	r3, r2
   88bb0:	d1fb      	bne.n	88baa <__lshift+0x4e>
   88bb2:	f1ae 0314 	sub.w	r3, lr, #20
   88bb6:	4419      	add	r1, r3
   88bb8:	6922      	ldr	r2, [r4, #16]
   88bba:	f104 0314 	add.w	r3, r4, #20
   88bbe:	f018 081f 	ands.w	r8, r8, #31
   88bc2:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   88bc6:	d02c      	beq.n	88c22 <__lshift+0xc6>
   88bc8:	468e      	mov	lr, r1
   88bca:	f04f 0a00 	mov.w	sl, #0
   88bce:	f1c8 0920 	rsb	r9, r8, #32
   88bd2:	681a      	ldr	r2, [r3, #0]
   88bd4:	fa02 f208 	lsl.w	r2, r2, r8
   88bd8:	ea42 020a 	orr.w	r2, r2, sl
   88bdc:	f84e 2b04 	str.w	r2, [lr], #4
   88be0:	f853 2b04 	ldr.w	r2, [r3], #4
   88be4:	459c      	cmp	ip, r3
   88be6:	fa22 fa09 	lsr.w	sl, r2, r9
   88bea:	d8f2      	bhi.n	88bd2 <__lshift+0x76>
   88bec:	ebac 0304 	sub.w	r3, ip, r4
   88bf0:	3b15      	subs	r3, #21
   88bf2:	f023 0303 	bic.w	r3, r3, #3
   88bf6:	3304      	adds	r3, #4
   88bf8:	f104 0215 	add.w	r2, r4, #21
   88bfc:	4594      	cmp	ip, r2
   88bfe:	bf38      	it	cc
   88c00:	2304      	movcc	r3, #4
   88c02:	f1ba 0f00 	cmp.w	sl, #0
   88c06:	bf18      	it	ne
   88c08:	462e      	movne	r6, r5
   88c0a:	f841 a003 	str.w	sl, [r1, r3]
   88c0e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88c10:	6862      	ldr	r2, [r4, #4]
   88c12:	6106      	str	r6, [r0, #16]
   88c14:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   88c18:	6021      	str	r1, [r4, #0]
   88c1a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
   88c1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88c22:	3904      	subs	r1, #4
   88c24:	f853 2b04 	ldr.w	r2, [r3], #4
   88c28:	459c      	cmp	ip, r3
   88c2a:	f841 2f04 	str.w	r2, [r1, #4]!
   88c2e:	d8f9      	bhi.n	88c24 <__lshift+0xc8>
   88c30:	e7ed      	b.n	88c0e <__lshift+0xb2>
   88c32:	4602      	mov	r2, r0
   88c34:	f240 11d9 	movw	r1, #473	; 0x1d9
   88c38:	4b01      	ldr	r3, [pc, #4]	; (88c40 <__lshift+0xe4>)
   88c3a:	4802      	ldr	r0, [pc, #8]	; (88c44 <__lshift+0xe8>)
   88c3c:	f000 fd08 	bl	89650 <__assert_func>
   88c40:	0008a6a4 	.word	0x0008a6a4
   88c44:	0008a748 	.word	0x0008a748

00088c48 <__mcmp>:
   88c48:	4684      	mov	ip, r0
   88c4a:	690b      	ldr	r3, [r1, #16]
   88c4c:	6900      	ldr	r0, [r0, #16]
   88c4e:	1ac0      	subs	r0, r0, r3
   88c50:	d115      	bne.n	88c7e <__mcmp+0x36>
   88c52:	f10c 0c14 	add.w	ip, ip, #20
   88c56:	3114      	adds	r1, #20
   88c58:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
   88c5c:	b410      	push	{r4}
   88c5e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   88c62:	e001      	b.n	88c68 <__mcmp+0x20>
   88c64:	4594      	cmp	ip, r2
   88c66:	d208      	bcs.n	88c7a <__mcmp+0x32>
   88c68:	f852 4d04 	ldr.w	r4, [r2, #-4]!
   88c6c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   88c70:	428c      	cmp	r4, r1
   88c72:	d0f7      	beq.n	88c64 <__mcmp+0x1c>
   88c74:	d204      	bcs.n	88c80 <__mcmp+0x38>
   88c76:	f04f 30ff 	mov.w	r0, #4294967295
   88c7a:	bc10      	pop	{r4}
   88c7c:	4770      	bx	lr
   88c7e:	4770      	bx	lr
   88c80:	2001      	movs	r0, #1
   88c82:	bc10      	pop	{r4}
   88c84:	4770      	bx	lr
   88c86:	bf00      	nop

00088c88 <__mdiff>:
   88c88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88c8c:	690c      	ldr	r4, [r1, #16]
   88c8e:	6913      	ldr	r3, [r2, #16]
   88c90:	4689      	mov	r9, r1
   88c92:	1ae4      	subs	r4, r4, r3
   88c94:	2c00      	cmp	r4, #0
   88c96:	4617      	mov	r7, r2
   88c98:	d17d      	bne.n	88d96 <__mdiff+0x10e>
   88c9a:	f101 0614 	add.w	r6, r1, #20
   88c9e:	3214      	adds	r2, #20
   88ca0:	eb02 0283 	add.w	r2, r2, r3, lsl #2
   88ca4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   88ca8:	e001      	b.n	88cae <__mdiff+0x26>
   88caa:	429e      	cmp	r6, r3
   88cac:	d276      	bcs.n	88d9c <__mdiff+0x114>
   88cae:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   88cb2:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   88cb6:	428d      	cmp	r5, r1
   88cb8:	d0f7      	beq.n	88caa <__mdiff+0x22>
   88cba:	d367      	bcc.n	88d8c <__mdiff+0x104>
   88cbc:	f8d9 1004 	ldr.w	r1, [r9, #4]
   88cc0:	f7ff fd46 	bl	88750 <_Balloc>
   88cc4:	2800      	cmp	r0, #0
   88cc6:	d073      	beq.n	88db0 <__mdiff+0x128>
   88cc8:	f8d9 5010 	ldr.w	r5, [r9, #16]
   88ccc:	60c4      	str	r4, [r0, #12]
   88cce:	f100 0414 	add.w	r4, r0, #20
   88cd2:	4626      	mov	r6, r4
   88cd4:	f04f 0a00 	mov.w	sl, #0
   88cd8:	693b      	ldr	r3, [r7, #16]
   88cda:	f109 0814 	add.w	r8, r9, #20
   88cde:	f107 0e14 	add.w	lr, r7, #20
   88ce2:	f109 0c10 	add.w	ip, r9, #16
   88ce6:	eb08 0285 	add.w	r2, r8, r5, lsl #2
   88cea:	eb0e 0983 	add.w	r9, lr, r3, lsl #2
   88cee:	f85c bf04 	ldr.w	fp, [ip, #4]!
   88cf2:	f85e 1b04 	ldr.w	r1, [lr], #4
   88cf6:	fa1f f38b 	uxth.w	r3, fp
   88cfa:	4453      	add	r3, sl
   88cfc:	fa1f fa81 	uxth.w	sl, r1
   88d00:	0c09      	lsrs	r1, r1, #16
   88d02:	eba3 030a 	sub.w	r3, r3, sl
   88d06:	ebc1 411b 	rsb	r1, r1, fp, lsr #16
   88d0a:	eb01 4123 	add.w	r1, r1, r3, asr #16
   88d0e:	b29b      	uxth	r3, r3
   88d10:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   88d14:	45f1      	cmp	r9, lr
   88d16:	f846 3b04 	str.w	r3, [r6], #4
   88d1a:	ea4f 4a21 	mov.w	sl, r1, asr #16
   88d1e:	d8e6      	bhi.n	88cee <__mdiff+0x66>
   88d20:	eba9 0107 	sub.w	r1, r9, r7
   88d24:	3915      	subs	r1, #21
   88d26:	3715      	adds	r7, #21
   88d28:	45b9      	cmp	r9, r7
   88d2a:	f021 0603 	bic.w	r6, r1, #3
   88d2e:	f106 0604 	add.w	r6, r6, #4
   88d32:	bf38      	it	cc
   88d34:	2604      	movcc	r6, #4
   88d36:	f021 0103 	bic.w	r1, r1, #3
   88d3a:	bf38      	it	cc
   88d3c:	2100      	movcc	r1, #0
   88d3e:	44b0      	add	r8, r6
   88d40:	4542      	cmp	r2, r8
   88d42:	4426      	add	r6, r4
   88d44:	440c      	add	r4, r1
   88d46:	d918      	bls.n	88d7a <__mdiff+0xf2>
   88d48:	4637      	mov	r7, r6
   88d4a:	4644      	mov	r4, r8
   88d4c:	f854 1b04 	ldr.w	r1, [r4], #4
   88d50:	b28b      	uxth	r3, r1
   88d52:	4453      	add	r3, sl
   88d54:	ea4f 4a23 	mov.w	sl, r3, asr #16
   88d58:	eb0a 4111 	add.w	r1, sl, r1, lsr #16
   88d5c:	b29b      	uxth	r3, r3
   88d5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   88d62:	42a2      	cmp	r2, r4
   88d64:	f847 3b04 	str.w	r3, [r7], #4
   88d68:	ea4f 4a21 	mov.w	sl, r1, asr #16
   88d6c:	d8ee      	bhi.n	88d4c <__mdiff+0xc4>
   88d6e:	1e54      	subs	r4, r2, #1
   88d70:	eba4 0408 	sub.w	r4, r4, r8
   88d74:	f024 0403 	bic.w	r4, r4, #3
   88d78:	4434      	add	r4, r6
   88d7a:	b923      	cbnz	r3, 88d86 <__mdiff+0xfe>
   88d7c:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   88d80:	3d01      	subs	r5, #1
   88d82:	2b00      	cmp	r3, #0
   88d84:	d0fa      	beq.n	88d7c <__mdiff+0xf4>
   88d86:	6105      	str	r5, [r0, #16]
   88d88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88d8c:	464b      	mov	r3, r9
   88d8e:	2401      	movs	r4, #1
   88d90:	46b9      	mov	r9, r7
   88d92:	461f      	mov	r7, r3
   88d94:	e792      	b.n	88cbc <__mdiff+0x34>
   88d96:	dbf9      	blt.n	88d8c <__mdiff+0x104>
   88d98:	2400      	movs	r4, #0
   88d9a:	e78f      	b.n	88cbc <__mdiff+0x34>
   88d9c:	2100      	movs	r1, #0
   88d9e:	f7ff fcd7 	bl	88750 <_Balloc>
   88da2:	b160      	cbz	r0, 88dbe <__mdiff+0x136>
   88da4:	2201      	movs	r2, #1
   88da6:	2300      	movs	r3, #0
   88da8:	e9c0 2304 	strd	r2, r3, [r0, #16]
   88dac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88db0:	4602      	mov	r2, r0
   88db2:	f44f 7110 	mov.w	r1, #576	; 0x240
   88db6:	4b05      	ldr	r3, [pc, #20]	; (88dcc <__mdiff+0x144>)
   88db8:	4805      	ldr	r0, [pc, #20]	; (88dd0 <__mdiff+0x148>)
   88dba:	f000 fc49 	bl	89650 <__assert_func>
   88dbe:	4602      	mov	r2, r0
   88dc0:	f240 2132 	movw	r1, #562	; 0x232
   88dc4:	4b01      	ldr	r3, [pc, #4]	; (88dcc <__mdiff+0x144>)
   88dc6:	4802      	ldr	r0, [pc, #8]	; (88dd0 <__mdiff+0x148>)
   88dc8:	f000 fc42 	bl	89650 <__assert_func>
   88dcc:	0008a6a4 	.word	0x0008a6a4
   88dd0:	0008a748 	.word	0x0008a748

00088dd4 <__d2b>:
   88dd4:	b570      	push	{r4, r5, r6, lr}
   88dd6:	2101      	movs	r1, #1
   88dd8:	b082      	sub	sp, #8
   88dda:	4616      	mov	r6, r2
   88ddc:	461d      	mov	r5, r3
   88dde:	f7ff fcb7 	bl	88750 <_Balloc>
   88de2:	4604      	mov	r4, r0
   88de4:	2800      	cmp	r0, #0
   88de6:	d04c      	beq.n	88e82 <__d2b+0xae>
   88de8:	462b      	mov	r3, r5
   88dea:	f3c5 550a 	ubfx	r5, r5, #20, #11
   88dee:	f3c3 0313 	ubfx	r3, r3, #0, #20
   88df2:	b10d      	cbz	r5, 88df8 <__d2b+0x24>
   88df4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   88df8:	2e00      	cmp	r6, #0
   88dfa:	9301      	str	r3, [sp, #4]
   88dfc:	d022      	beq.n	88e44 <__d2b+0x70>
   88dfe:	4668      	mov	r0, sp
   88e00:	9600      	str	r6, [sp, #0]
   88e02:	f7ff fd47 	bl	88894 <__lo0bits>
   88e06:	2800      	cmp	r0, #0
   88e08:	d037      	beq.n	88e7a <__d2b+0xa6>
   88e0a:	9b01      	ldr	r3, [sp, #4]
   88e0c:	9900      	ldr	r1, [sp, #0]
   88e0e:	f1c0 0220 	rsb	r2, r0, #32
   88e12:	fa03 f202 	lsl.w	r2, r3, r2
   88e16:	430a      	orrs	r2, r1
   88e18:	40c3      	lsrs	r3, r0
   88e1a:	9301      	str	r3, [sp, #4]
   88e1c:	6162      	str	r2, [r4, #20]
   88e1e:	2b00      	cmp	r3, #0
   88e20:	bf14      	ite	ne
   88e22:	2102      	movne	r1, #2
   88e24:	2101      	moveq	r1, #1
   88e26:	61a3      	str	r3, [r4, #24]
   88e28:	6121      	str	r1, [r4, #16]
   88e2a:	b1b5      	cbz	r5, 88e5a <__d2b+0x86>
   88e2c:	9b06      	ldr	r3, [sp, #24]
   88e2e:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
   88e32:	4405      	add	r5, r0
   88e34:	601d      	str	r5, [r3, #0]
   88e36:	9b07      	ldr	r3, [sp, #28]
   88e38:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   88e3c:	6018      	str	r0, [r3, #0]
   88e3e:	4620      	mov	r0, r4
   88e40:	b002      	add	sp, #8
   88e42:	bd70      	pop	{r4, r5, r6, pc}
   88e44:	a801      	add	r0, sp, #4
   88e46:	f7ff fd25 	bl	88894 <__lo0bits>
   88e4a:	2301      	movs	r3, #1
   88e4c:	9a01      	ldr	r2, [sp, #4]
   88e4e:	4619      	mov	r1, r3
   88e50:	6162      	str	r2, [r4, #20]
   88e52:	3020      	adds	r0, #32
   88e54:	6123      	str	r3, [r4, #16]
   88e56:	2d00      	cmp	r5, #0
   88e58:	d1e8      	bne.n	88e2c <__d2b+0x58>
   88e5a:	eb04 0281 	add.w	r2, r4, r1, lsl #2
   88e5e:	f2a0 4332 	subw	r3, r0, #1074	; 0x432
   88e62:	6910      	ldr	r0, [r2, #16]
   88e64:	9a06      	ldr	r2, [sp, #24]
   88e66:	6013      	str	r3, [r2, #0]
   88e68:	f7ff fcf4 	bl	88854 <__hi0bits>
   88e6c:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
   88e70:	4620      	mov	r0, r4
   88e72:	9b07      	ldr	r3, [sp, #28]
   88e74:	6019      	str	r1, [r3, #0]
   88e76:	b002      	add	sp, #8
   88e78:	bd70      	pop	{r4, r5, r6, pc}
   88e7a:	e9dd 2300 	ldrd	r2, r3, [sp]
   88e7e:	6162      	str	r2, [r4, #20]
   88e80:	e7cd      	b.n	88e1e <__d2b+0x4a>
   88e82:	4602      	mov	r2, r0
   88e84:	f240 310a 	movw	r1, #778	; 0x30a
   88e88:	4b01      	ldr	r3, [pc, #4]	; (88e90 <__d2b+0xbc>)
   88e8a:	4802      	ldr	r0, [pc, #8]	; (88e94 <__d2b+0xc0>)
   88e8c:	f000 fbe0 	bl	89650 <__assert_func>
   88e90:	0008a6a4 	.word	0x0008a6a4
   88e94:	0008a748 	.word	0x0008a748

00088e98 <_realloc_r>:
   88e98:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88e9c:	4616      	mov	r6, r2
   88e9e:	2900      	cmp	r1, #0
   88ea0:	f000 8098 	beq.w	88fd4 <_realloc_r+0x13c>
   88ea4:	f106 050b 	add.w	r5, r6, #11
   88ea8:	4680      	mov	r8, r0
   88eaa:	460c      	mov	r4, r1
   88eac:	f7ff fc44 	bl	88738 <__malloc_lock>
   88eb0:	2d16      	cmp	r5, #22
   88eb2:	d85d      	bhi.n	88f70 <_realloc_r+0xd8>
   88eb4:	2510      	movs	r5, #16
   88eb6:	462a      	mov	r2, r5
   88eb8:	42ae      	cmp	r6, r5
   88eba:	d85e      	bhi.n	88f7a <_realloc_r+0xe2>
   88ebc:	f854 1c04 	ldr.w	r1, [r4, #-4]
   88ec0:	f1a4 0908 	sub.w	r9, r4, #8
   88ec4:	f021 0703 	bic.w	r7, r1, #3
   88ec8:	4297      	cmp	r7, r2
   88eca:	da62      	bge.n	88f92 <_realloc_r+0xfa>
   88ecc:	4bbc      	ldr	r3, [pc, #752]	; (891c0 <_realloc_r+0x328>)
   88ece:	eb09 0007 	add.w	r0, r9, r7
   88ed2:	f8d3 c008 	ldr.w	ip, [r3, #8]
   88ed6:	4584      	cmp	ip, r0
   88ed8:	f000 8097 	beq.w	8900a <_realloc_r+0x172>
   88edc:	f8d0 c004 	ldr.w	ip, [r0, #4]
   88ee0:	f02c 0301 	bic.w	r3, ip, #1
   88ee4:	4403      	add	r3, r0
   88ee6:	685b      	ldr	r3, [r3, #4]
   88ee8:	07db      	lsls	r3, r3, #31
   88eea:	d468      	bmi.n	88fbe <_realloc_r+0x126>
   88eec:	f02c 0c03 	bic.w	ip, ip, #3
   88ef0:	eb07 030c 	add.w	r3, r7, ip
   88ef4:	4293      	cmp	r3, r2
   88ef6:	da47      	bge.n	88f88 <_realloc_r+0xf0>
   88ef8:	07cb      	lsls	r3, r1, #31
   88efa:	d410      	bmi.n	88f1e <_realloc_r+0x86>
   88efc:	f854 3c08 	ldr.w	r3, [r4, #-8]
   88f00:	eba9 0a03 	sub.w	sl, r9, r3
   88f04:	f8da 3004 	ldr.w	r3, [sl, #4]
   88f08:	f023 0103 	bic.w	r1, r3, #3
   88f0c:	448c      	add	ip, r1
   88f0e:	44bc      	add	ip, r7
   88f10:	4594      	cmp	ip, r2
   88f12:	f280 8111 	bge.w	89138 <_realloc_r+0x2a0>
   88f16:	187b      	adds	r3, r7, r1
   88f18:	4293      	cmp	r3, r2
   88f1a:	f280 80e8 	bge.w	890ee <_realloc_r+0x256>
   88f1e:	4631      	mov	r1, r6
   88f20:	4640      	mov	r0, r8
   88f22:	f7ff f883 	bl	8802c <_malloc_r>
   88f26:	4606      	mov	r6, r0
   88f28:	b1e0      	cbz	r0, 88f64 <_realloc_r+0xcc>
   88f2a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   88f2e:	f1a0 0208 	sub.w	r2, r0, #8
   88f32:	f023 0301 	bic.w	r3, r3, #1
   88f36:	444b      	add	r3, r9
   88f38:	4293      	cmp	r3, r2
   88f3a:	f000 80d2 	beq.w	890e2 <_realloc_r+0x24a>
   88f3e:	1f3a      	subs	r2, r7, #4
   88f40:	2a24      	cmp	r2, #36	; 0x24
   88f42:	f200 80f5 	bhi.w	89130 <_realloc_r+0x298>
   88f46:	2a13      	cmp	r2, #19
   88f48:	f200 80ac 	bhi.w	890a4 <_realloc_r+0x20c>
   88f4c:	4603      	mov	r3, r0
   88f4e:	4622      	mov	r2, r4
   88f50:	6811      	ldr	r1, [r2, #0]
   88f52:	6019      	str	r1, [r3, #0]
   88f54:	6851      	ldr	r1, [r2, #4]
   88f56:	6059      	str	r1, [r3, #4]
   88f58:	6892      	ldr	r2, [r2, #8]
   88f5a:	609a      	str	r2, [r3, #8]
   88f5c:	4621      	mov	r1, r4
   88f5e:	4640      	mov	r0, r8
   88f60:	f7fe fd46 	bl	879f0 <_free_r>
   88f64:	4640      	mov	r0, r8
   88f66:	f7ff fbed 	bl	88744 <__malloc_unlock>
   88f6a:	4630      	mov	r0, r6
   88f6c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88f70:	f025 0507 	bic.w	r5, r5, #7
   88f74:	2d00      	cmp	r5, #0
   88f76:	462a      	mov	r2, r5
   88f78:	da9e      	bge.n	88eb8 <_realloc_r+0x20>
   88f7a:	230c      	movs	r3, #12
   88f7c:	2600      	movs	r6, #0
   88f7e:	f8c8 3000 	str.w	r3, [r8]
   88f82:	4630      	mov	r0, r6
   88f84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88f88:	461f      	mov	r7, r3
   88f8a:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
   88f8e:	60d3      	str	r3, [r2, #12]
   88f90:	609a      	str	r2, [r3, #8]
   88f92:	1b7b      	subs	r3, r7, r5
   88f94:	2b0f      	cmp	r3, #15
   88f96:	d822      	bhi.n	88fde <_realloc_r+0x146>
   88f98:	f8d9 3004 	ldr.w	r3, [r9, #4]
   88f9c:	f003 0301 	and.w	r3, r3, #1
   88fa0:	433b      	orrs	r3, r7
   88fa2:	f8c9 3004 	str.w	r3, [r9, #4]
   88fa6:	444f      	add	r7, r9
   88fa8:	687b      	ldr	r3, [r7, #4]
   88faa:	f043 0301 	orr.w	r3, r3, #1
   88fae:	607b      	str	r3, [r7, #4]
   88fb0:	4626      	mov	r6, r4
   88fb2:	4640      	mov	r0, r8
   88fb4:	f7ff fbc6 	bl	88744 <__malloc_unlock>
   88fb8:	4630      	mov	r0, r6
   88fba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88fbe:	07c9      	lsls	r1, r1, #31
   88fc0:	d4ad      	bmi.n	88f1e <_realloc_r+0x86>
   88fc2:	f854 3c08 	ldr.w	r3, [r4, #-8]
   88fc6:	eba9 0a03 	sub.w	sl, r9, r3
   88fca:	f8da 1004 	ldr.w	r1, [sl, #4]
   88fce:	f021 0103 	bic.w	r1, r1, #3
   88fd2:	e7a0      	b.n	88f16 <_realloc_r+0x7e>
   88fd4:	4611      	mov	r1, r2
   88fd6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88fda:	f7ff b827 	b.w	8802c <_malloc_r>
   88fde:	f8d9 1004 	ldr.w	r1, [r9, #4]
   88fe2:	f043 0301 	orr.w	r3, r3, #1
   88fe6:	f001 0101 	and.w	r1, r1, #1
   88fea:	4329      	orrs	r1, r5
   88fec:	f8c9 1004 	str.w	r1, [r9, #4]
   88ff0:	eb09 0105 	add.w	r1, r9, r5
   88ff4:	604b      	str	r3, [r1, #4]
   88ff6:	444f      	add	r7, r9
   88ff8:	687b      	ldr	r3, [r7, #4]
   88ffa:	4640      	mov	r0, r8
   88ffc:	f043 0301 	orr.w	r3, r3, #1
   89000:	3108      	adds	r1, #8
   89002:	607b      	str	r3, [r7, #4]
   89004:	f7fe fcf4 	bl	879f0 <_free_r>
   89008:	e7d2      	b.n	88fb0 <_realloc_r+0x118>
   8900a:	f8dc 0004 	ldr.w	r0, [ip, #4]
   8900e:	f020 0b03 	bic.w	fp, r0, #3
   89012:	eb07 0c0b 	add.w	ip, r7, fp
   89016:	f105 0010 	add.w	r0, r5, #16
   8901a:	4584      	cmp	ip, r0
   8901c:	da4d      	bge.n	890ba <_realloc_r+0x222>
   8901e:	07c9      	lsls	r1, r1, #31
   89020:	f53f af7d 	bmi.w	88f1e <_realloc_r+0x86>
   89024:	f854 1c08 	ldr.w	r1, [r4, #-8]
   89028:	eba9 0a01 	sub.w	sl, r9, r1
   8902c:	f8da 1004 	ldr.w	r1, [sl, #4]
   89030:	f021 0103 	bic.w	r1, r1, #3
   89034:	448b      	add	fp, r1
   89036:	44bb      	add	fp, r7
   89038:	4558      	cmp	r0, fp
   8903a:	f73f af6c 	bgt.w	88f16 <_realloc_r+0x7e>
   8903e:	4656      	mov	r6, sl
   89040:	f8da 100c 	ldr.w	r1, [sl, #12]
   89044:	f856 0f08 	ldr.w	r0, [r6, #8]!
   89048:	1f3a      	subs	r2, r7, #4
   8904a:	2a24      	cmp	r2, #36	; 0x24
   8904c:	60c1      	str	r1, [r0, #12]
   8904e:	6088      	str	r0, [r1, #8]
   89050:	f200 80db 	bhi.w	8920a <_realloc_r+0x372>
   89054:	2a13      	cmp	r2, #19
   89056:	f240 80d6 	bls.w	89206 <_realloc_r+0x36e>
   8905a:	6821      	ldr	r1, [r4, #0]
   8905c:	2a1b      	cmp	r2, #27
   8905e:	f8ca 1008 	str.w	r1, [sl, #8]
   89062:	6861      	ldr	r1, [r4, #4]
   89064:	f8ca 100c 	str.w	r1, [sl, #12]
   89068:	f200 80e0 	bhi.w	8922c <_realloc_r+0x394>
   8906c:	3408      	adds	r4, #8
   8906e:	f10a 0210 	add.w	r2, sl, #16
   89072:	6821      	ldr	r1, [r4, #0]
   89074:	6011      	str	r1, [r2, #0]
   89076:	6861      	ldr	r1, [r4, #4]
   89078:	6051      	str	r1, [r2, #4]
   8907a:	68a1      	ldr	r1, [r4, #8]
   8907c:	6091      	str	r1, [r2, #8]
   8907e:	ebab 0205 	sub.w	r2, fp, r5
   89082:	eb0a 0105 	add.w	r1, sl, r5
   89086:	f042 0201 	orr.w	r2, r2, #1
   8908a:	6099      	str	r1, [r3, #8]
   8908c:	604a      	str	r2, [r1, #4]
   8908e:	f8da 3004 	ldr.w	r3, [sl, #4]
   89092:	4640      	mov	r0, r8
   89094:	f003 0301 	and.w	r3, r3, #1
   89098:	431d      	orrs	r5, r3
   8909a:	f8ca 5004 	str.w	r5, [sl, #4]
   8909e:	f7ff fb51 	bl	88744 <__malloc_unlock>
   890a2:	e76e      	b.n	88f82 <_realloc_r+0xea>
   890a4:	6823      	ldr	r3, [r4, #0]
   890a6:	2a1b      	cmp	r2, #27
   890a8:	6003      	str	r3, [r0, #0]
   890aa:	6863      	ldr	r3, [r4, #4]
   890ac:	6043      	str	r3, [r0, #4]
   890ae:	d868      	bhi.n	89182 <_realloc_r+0x2ea>
   890b0:	f104 0208 	add.w	r2, r4, #8
   890b4:	f100 0308 	add.w	r3, r0, #8
   890b8:	e74a      	b.n	88f50 <_realloc_r+0xb8>
   890ba:	eb09 0205 	add.w	r2, r9, r5
   890be:	ebac 0c05 	sub.w	ip, ip, r5
   890c2:	609a      	str	r2, [r3, #8]
   890c4:	f04c 0301 	orr.w	r3, ip, #1
   890c8:	6053      	str	r3, [r2, #4]
   890ca:	f854 3c04 	ldr.w	r3, [r4, #-4]
   890ce:	4640      	mov	r0, r8
   890d0:	f003 0301 	and.w	r3, r3, #1
   890d4:	431d      	orrs	r5, r3
   890d6:	f844 5c04 	str.w	r5, [r4, #-4]
   890da:	f7ff fb33 	bl	88744 <__malloc_unlock>
   890de:	4626      	mov	r6, r4
   890e0:	e74f      	b.n	88f82 <_realloc_r+0xea>
   890e2:	f850 3c04 	ldr.w	r3, [r0, #-4]
   890e6:	f023 0303 	bic.w	r3, r3, #3
   890ea:	441f      	add	r7, r3
   890ec:	e751      	b.n	88f92 <_realloc_r+0xfa>
   890ee:	4656      	mov	r6, sl
   890f0:	f8da 100c 	ldr.w	r1, [sl, #12]
   890f4:	f856 0f08 	ldr.w	r0, [r6, #8]!
   890f8:	1f3a      	subs	r2, r7, #4
   890fa:	2a24      	cmp	r2, #36	; 0x24
   890fc:	60c1      	str	r1, [r0, #12]
   890fe:	6088      	str	r0, [r1, #8]
   89100:	d84c      	bhi.n	8919c <_realloc_r+0x304>
   89102:	2a13      	cmp	r2, #19
   89104:	d948      	bls.n	89198 <_realloc_r+0x300>
   89106:	6821      	ldr	r1, [r4, #0]
   89108:	2a1b      	cmp	r2, #27
   8910a:	f8ca 1008 	str.w	r1, [sl, #8]
   8910e:	6861      	ldr	r1, [r4, #4]
   89110:	f8ca 100c 	str.w	r1, [sl, #12]
   89114:	d856      	bhi.n	891c4 <_realloc_r+0x32c>
   89116:	3408      	adds	r4, #8
   89118:	f10a 0210 	add.w	r2, sl, #16
   8911c:	461f      	mov	r7, r3
   8911e:	6823      	ldr	r3, [r4, #0]
   89120:	46d1      	mov	r9, sl
   89122:	6013      	str	r3, [r2, #0]
   89124:	6863      	ldr	r3, [r4, #4]
   89126:	6053      	str	r3, [r2, #4]
   89128:	68a3      	ldr	r3, [r4, #8]
   8912a:	4634      	mov	r4, r6
   8912c:	6093      	str	r3, [r2, #8]
   8912e:	e730      	b.n	88f92 <_realloc_r+0xfa>
   89130:	4621      	mov	r1, r4
   89132:	f7ff fa85 	bl	88640 <memmove>
   89136:	e711      	b.n	88f5c <_realloc_r+0xc4>
   89138:	4656      	mov	r6, sl
   8913a:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
   8913e:	60cb      	str	r3, [r1, #12]
   89140:	6099      	str	r1, [r3, #8]
   89142:	f856 1f08 	ldr.w	r1, [r6, #8]!
   89146:	f8da 300c 	ldr.w	r3, [sl, #12]
   8914a:	1f3a      	subs	r2, r7, #4
   8914c:	2a24      	cmp	r2, #36	; 0x24
   8914e:	60cb      	str	r3, [r1, #12]
   89150:	6099      	str	r1, [r3, #8]
   89152:	d82d      	bhi.n	891b0 <_realloc_r+0x318>
   89154:	2a13      	cmp	r2, #19
   89156:	d929      	bls.n	891ac <_realloc_r+0x314>
   89158:	6823      	ldr	r3, [r4, #0]
   8915a:	2a1b      	cmp	r2, #27
   8915c:	f8ca 3008 	str.w	r3, [sl, #8]
   89160:	6863      	ldr	r3, [r4, #4]
   89162:	f8ca 300c 	str.w	r3, [sl, #12]
   89166:	d842      	bhi.n	891ee <_realloc_r+0x356>
   89168:	3408      	adds	r4, #8
   8916a:	f10a 0310 	add.w	r3, sl, #16
   8916e:	6822      	ldr	r2, [r4, #0]
   89170:	4667      	mov	r7, ip
   89172:	601a      	str	r2, [r3, #0]
   89174:	6862      	ldr	r2, [r4, #4]
   89176:	46d1      	mov	r9, sl
   89178:	605a      	str	r2, [r3, #4]
   8917a:	68a2      	ldr	r2, [r4, #8]
   8917c:	4634      	mov	r4, r6
   8917e:	609a      	str	r2, [r3, #8]
   89180:	e707      	b.n	88f92 <_realloc_r+0xfa>
   89182:	68a3      	ldr	r3, [r4, #8]
   89184:	2a24      	cmp	r2, #36	; 0x24
   89186:	6083      	str	r3, [r0, #8]
   89188:	68e3      	ldr	r3, [r4, #12]
   8918a:	60c3      	str	r3, [r0, #12]
   8918c:	d026      	beq.n	891dc <_realloc_r+0x344>
   8918e:	f104 0210 	add.w	r2, r4, #16
   89192:	f100 0310 	add.w	r3, r0, #16
   89196:	e6db      	b.n	88f50 <_realloc_r+0xb8>
   89198:	4632      	mov	r2, r6
   8919a:	e7bf      	b.n	8911c <_realloc_r+0x284>
   8919c:	4621      	mov	r1, r4
   8919e:	4630      	mov	r0, r6
   891a0:	461f      	mov	r7, r3
   891a2:	46d1      	mov	r9, sl
   891a4:	f7ff fa4c 	bl	88640 <memmove>
   891a8:	4634      	mov	r4, r6
   891aa:	e6f2      	b.n	88f92 <_realloc_r+0xfa>
   891ac:	4633      	mov	r3, r6
   891ae:	e7de      	b.n	8916e <_realloc_r+0x2d6>
   891b0:	4621      	mov	r1, r4
   891b2:	4630      	mov	r0, r6
   891b4:	4667      	mov	r7, ip
   891b6:	46d1      	mov	r9, sl
   891b8:	f7ff fa42 	bl	88640 <memmove>
   891bc:	4634      	mov	r4, r6
   891be:	e6e8      	b.n	88f92 <_realloc_r+0xfa>
   891c0:	20000940 	.word	0x20000940
   891c4:	68a1      	ldr	r1, [r4, #8]
   891c6:	2a24      	cmp	r2, #36	; 0x24
   891c8:	f8ca 1010 	str.w	r1, [sl, #16]
   891cc:	68e1      	ldr	r1, [r4, #12]
   891ce:	f8ca 1014 	str.w	r1, [sl, #20]
   891d2:	d020      	beq.n	89216 <_realloc_r+0x37e>
   891d4:	3410      	adds	r4, #16
   891d6:	f10a 0218 	add.w	r2, sl, #24
   891da:	e79f      	b.n	8911c <_realloc_r+0x284>
   891dc:	6923      	ldr	r3, [r4, #16]
   891de:	f104 0218 	add.w	r2, r4, #24
   891e2:	6103      	str	r3, [r0, #16]
   891e4:	6963      	ldr	r3, [r4, #20]
   891e6:	6143      	str	r3, [r0, #20]
   891e8:	f100 0318 	add.w	r3, r0, #24
   891ec:	e6b0      	b.n	88f50 <_realloc_r+0xb8>
   891ee:	68a3      	ldr	r3, [r4, #8]
   891f0:	2a24      	cmp	r2, #36	; 0x24
   891f2:	f8ca 3010 	str.w	r3, [sl, #16]
   891f6:	68e3      	ldr	r3, [r4, #12]
   891f8:	f8ca 3014 	str.w	r3, [sl, #20]
   891fc:	d022      	beq.n	89244 <_realloc_r+0x3ac>
   891fe:	3410      	adds	r4, #16
   89200:	f10a 0318 	add.w	r3, sl, #24
   89204:	e7b3      	b.n	8916e <_realloc_r+0x2d6>
   89206:	4632      	mov	r2, r6
   89208:	e733      	b.n	89072 <_realloc_r+0x1da>
   8920a:	4621      	mov	r1, r4
   8920c:	4630      	mov	r0, r6
   8920e:	f7ff fa17 	bl	88640 <memmove>
   89212:	4b17      	ldr	r3, [pc, #92]	; (89270 <_realloc_r+0x3d8>)
   89214:	e733      	b.n	8907e <_realloc_r+0x1e6>
   89216:	6922      	ldr	r2, [r4, #16]
   89218:	3418      	adds	r4, #24
   8921a:	f8ca 2018 	str.w	r2, [sl, #24]
   8921e:	f854 2c04 	ldr.w	r2, [r4, #-4]
   89222:	f8ca 201c 	str.w	r2, [sl, #28]
   89226:	f10a 0220 	add.w	r2, sl, #32
   8922a:	e777      	b.n	8911c <_realloc_r+0x284>
   8922c:	68a1      	ldr	r1, [r4, #8]
   8922e:	2a24      	cmp	r2, #36	; 0x24
   89230:	f8ca 1010 	str.w	r1, [sl, #16]
   89234:	68e1      	ldr	r1, [r4, #12]
   89236:	f8ca 1014 	str.w	r1, [sl, #20]
   8923a:	d00e      	beq.n	8925a <_realloc_r+0x3c2>
   8923c:	3410      	adds	r4, #16
   8923e:	f10a 0218 	add.w	r2, sl, #24
   89242:	e716      	b.n	89072 <_realloc_r+0x1da>
   89244:	6923      	ldr	r3, [r4, #16]
   89246:	3418      	adds	r4, #24
   89248:	f8ca 3018 	str.w	r3, [sl, #24]
   8924c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   89250:	f8ca 301c 	str.w	r3, [sl, #28]
   89254:	f10a 0320 	add.w	r3, sl, #32
   89258:	e789      	b.n	8916e <_realloc_r+0x2d6>
   8925a:	6922      	ldr	r2, [r4, #16]
   8925c:	3418      	adds	r4, #24
   8925e:	f8ca 2018 	str.w	r2, [sl, #24]
   89262:	f854 2c04 	ldr.w	r2, [r4, #-4]
   89266:	f8ca 201c 	str.w	r2, [sl, #28]
   8926a:	f10a 0220 	add.w	r2, sl, #32
   8926e:	e700      	b.n	89072 <_realloc_r+0x1da>
   89270:	20000940 	.word	0x20000940

00089274 <frexp>:
   89274:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89276:	2700      	movs	r7, #0
   89278:	f8df c05c 	ldr.w	ip, [pc, #92]	; 892d8 <frexp+0x64>
   8927c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   89280:	4563      	cmp	r3, ip
   89282:	4604      	mov	r4, r0
   89284:	460d      	mov	r5, r1
   89286:	6017      	str	r7, [r2, #0]
   89288:	dc23      	bgt.n	892d2 <frexp+0x5e>
   8928a:	4684      	mov	ip, r0
   8928c:	ea53 0c0c 	orrs.w	ip, r3, ip
   89290:	d01f      	beq.n	892d2 <frexp+0x5e>
   89292:	f8df c048 	ldr.w	ip, [pc, #72]	; 892dc <frexp+0x68>
   89296:	4616      	mov	r6, r2
   89298:	ea01 0c0c 	and.w	ip, r1, ip
   8929c:	460a      	mov	r2, r1
   8929e:	f1bc 0f00 	cmp.w	ip, #0
   892a2:	d109      	bne.n	892b8 <frexp+0x44>
   892a4:	2200      	movs	r2, #0
   892a6:	4b0e      	ldr	r3, [pc, #56]	; (892e0 <frexp+0x6c>)
   892a8:	f000 fd1a 	bl	89ce0 <__aeabi_dmul>
   892ac:	f06f 0735 	mvn.w	r7, #53	; 0x35
   892b0:	4604      	mov	r4, r0
   892b2:	460a      	mov	r2, r1
   892b4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   892b8:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
   892bc:	151b      	asrs	r3, r3, #20
   892be:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
   892c2:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
   892c6:	443b      	add	r3, r7
   892c8:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
   892cc:	6033      	str	r3, [r6, #0]
   892ce:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
   892d2:	4620      	mov	r0, r4
   892d4:	4629      	mov	r1, r5
   892d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   892d8:	7fefffff 	.word	0x7fefffff
   892dc:	7ff00000 	.word	0x7ff00000
   892e0:	43500000 	.word	0x43500000

000892e4 <_sbrk_r>:
   892e4:	2200      	movs	r2, #0
   892e6:	b538      	push	{r3, r4, r5, lr}
   892e8:	4d06      	ldr	r5, [pc, #24]	; (89304 <_sbrk_r+0x20>)
   892ea:	4604      	mov	r4, r0
   892ec:	4608      	mov	r0, r1
   892ee:	602a      	str	r2, [r5, #0]
   892f0:	f7fa f950 	bl	83594 <_sbrk>
   892f4:	1c43      	adds	r3, r0, #1
   892f6:	d000      	beq.n	892fa <_sbrk_r+0x16>
   892f8:	bd38      	pop	{r3, r4, r5, pc}
   892fa:	682b      	ldr	r3, [r5, #0]
   892fc:	2b00      	cmp	r3, #0
   892fe:	d0fb      	beq.n	892f8 <_sbrk_r+0x14>
   89300:	6023      	str	r3, [r4, #0]
   89302:	bd38      	pop	{r3, r4, r5, pc}
   89304:	200013c0 	.word	0x200013c0

00089308 <__sread>:
   89308:	b510      	push	{r4, lr}
   8930a:	460c      	mov	r4, r1
   8930c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   89310:	f000 fac8 	bl	898a4 <_read_r>
   89314:	2800      	cmp	r0, #0
   89316:	db03      	blt.n	89320 <__sread+0x18>
   89318:	6d23      	ldr	r3, [r4, #80]	; 0x50
   8931a:	4403      	add	r3, r0
   8931c:	6523      	str	r3, [r4, #80]	; 0x50
   8931e:	bd10      	pop	{r4, pc}
   89320:	89a3      	ldrh	r3, [r4, #12]
   89322:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   89326:	81a3      	strh	r3, [r4, #12]
   89328:	bd10      	pop	{r4, pc}
   8932a:	bf00      	nop

0008932c <__swrite>:
   8932c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   89330:	460c      	mov	r4, r1
   89332:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   89336:	461f      	mov	r7, r3
   89338:	05cb      	lsls	r3, r1, #23
   8933a:	4605      	mov	r5, r0
   8933c:	4616      	mov	r6, r2
   8933e:	d40b      	bmi.n	89358 <__swrite+0x2c>
   89340:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   89344:	81a1      	strh	r1, [r4, #12]
   89346:	463b      	mov	r3, r7
   89348:	4632      	mov	r2, r6
   8934a:	4628      	mov	r0, r5
   8934c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   89350:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   89354:	f000 b920 	b.w	89598 <_write_r>
   89358:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   8935c:	2302      	movs	r3, #2
   8935e:	2200      	movs	r2, #0
   89360:	f000 fa8a 	bl	89878 <_lseek_r>
   89364:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   89368:	e7ea      	b.n	89340 <__swrite+0x14>
   8936a:	bf00      	nop

0008936c <__sseek>:
   8936c:	b510      	push	{r4, lr}
   8936e:	460c      	mov	r4, r1
   89370:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   89374:	f000 fa80 	bl	89878 <_lseek_r>
   89378:	89a3      	ldrh	r3, [r4, #12]
   8937a:	1c42      	adds	r2, r0, #1
   8937c:	bf0e      	itee	eq
   8937e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   89382:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   89386:	6520      	strne	r0, [r4, #80]	; 0x50
   89388:	81a3      	strh	r3, [r4, #12]
   8938a:	bd10      	pop	{r4, pc}

0008938c <__sclose>:
   8938c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   89390:	f000 b9ba 	b.w	89708 <_close_r>

00089394 <__ssprint_r>:
   89394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   89398:	6893      	ldr	r3, [r2, #8]
   8939a:	4691      	mov	r9, r2
   8939c:	b083      	sub	sp, #12
   8939e:	2b00      	cmp	r3, #0
   893a0:	d06e      	beq.n	89480 <__ssprint_r+0xec>
   893a2:	6817      	ldr	r7, [r2, #0]
   893a4:	4680      	mov	r8, r0
   893a6:	460c      	mov	r4, r1
   893a8:	6808      	ldr	r0, [r1, #0]
   893aa:	688d      	ldr	r5, [r1, #8]
   893ac:	3708      	adds	r7, #8
   893ae:	e044      	b.n	8943a <__ssprint_r+0xa6>
   893b0:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
   893b4:	f41c 6f90 	tst.w	ip, #1152	; 0x480
   893b8:	d02e      	beq.n	89418 <__ssprint_r+0x84>
   893ba:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
   893be:	1a45      	subs	r5, r0, r1
   893c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   893c4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   893c8:	19aa      	adds	r2, r5, r6
   893ca:	ea4f 0a63 	mov.w	sl, r3, asr #1
   893ce:	1c53      	adds	r3, r2, #1
   893d0:	4553      	cmp	r3, sl
   893d2:	4652      	mov	r2, sl
   893d4:	bf84      	itt	hi
   893d6:	469a      	movhi	sl, r3
   893d8:	4652      	movhi	r2, sl
   893da:	f41c 6f80 	tst.w	ip, #1024	; 0x400
   893de:	d036      	beq.n	8944e <__ssprint_r+0xba>
   893e0:	4611      	mov	r1, r2
   893e2:	4640      	mov	r0, r8
   893e4:	f7fe fe22 	bl	8802c <_malloc_r>
   893e8:	2800      	cmp	r0, #0
   893ea:	d03a      	beq.n	89462 <__ssprint_r+0xce>
   893ec:	462a      	mov	r2, r5
   893ee:	6921      	ldr	r1, [r4, #16]
   893f0:	9001      	str	r0, [sp, #4]
   893f2:	f7fa fa5b 	bl	838ac <memcpy>
   893f6:	89a2      	ldrh	r2, [r4, #12]
   893f8:	9b01      	ldr	r3, [sp, #4]
   893fa:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   893fe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   89402:	81a2      	strh	r2, [r4, #12]
   89404:	1958      	adds	r0, r3, r5
   89406:	ebaa 0505 	sub.w	r5, sl, r5
   8940a:	60a5      	str	r5, [r4, #8]
   8940c:	f8c4 a014 	str.w	sl, [r4, #20]
   89410:	4635      	mov	r5, r6
   89412:	46b2      	mov	sl, r6
   89414:	6123      	str	r3, [r4, #16]
   89416:	6020      	str	r0, [r4, #0]
   89418:	4659      	mov	r1, fp
   8941a:	4652      	mov	r2, sl
   8941c:	f7ff f910 	bl	88640 <memmove>
   89420:	f8d9 3008 	ldr.w	r3, [r9, #8]
   89424:	68a1      	ldr	r1, [r4, #8]
   89426:	6820      	ldr	r0, [r4, #0]
   89428:	1b4d      	subs	r5, r1, r5
   8942a:	4450      	add	r0, sl
   8942c:	1b9e      	subs	r6, r3, r6
   8942e:	60a5      	str	r5, [r4, #8]
   89430:	6020      	str	r0, [r4, #0]
   89432:	f8c9 6008 	str.w	r6, [r9, #8]
   89436:	b31e      	cbz	r6, 89480 <__ssprint_r+0xec>
   89438:	3708      	adds	r7, #8
   8943a:	e957 b602 	ldrd	fp, r6, [r7, #-8]
   8943e:	2e00      	cmp	r6, #0
   89440:	d0fa      	beq.n	89438 <__ssprint_r+0xa4>
   89442:	42b5      	cmp	r5, r6
   89444:	46aa      	mov	sl, r5
   89446:	d9b3      	bls.n	893b0 <__ssprint_r+0x1c>
   89448:	4635      	mov	r5, r6
   8944a:	46b2      	mov	sl, r6
   8944c:	e7e4      	b.n	89418 <__ssprint_r+0x84>
   8944e:	4640      	mov	r0, r8
   89450:	f7ff fd22 	bl	88e98 <_realloc_r>
   89454:	4603      	mov	r3, r0
   89456:	2800      	cmp	r0, #0
   89458:	d1d4      	bne.n	89404 <__ssprint_r+0x70>
   8945a:	4640      	mov	r0, r8
   8945c:	6921      	ldr	r1, [r4, #16]
   8945e:	f7fe fac7 	bl	879f0 <_free_r>
   89462:	230c      	movs	r3, #12
   89464:	2200      	movs	r2, #0
   89466:	f04f 30ff 	mov.w	r0, #4294967295
   8946a:	f8c8 3000 	str.w	r3, [r8]
   8946e:	89a3      	ldrh	r3, [r4, #12]
   89470:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   89474:	81a3      	strh	r3, [r4, #12]
   89476:	e9c9 2201 	strd	r2, r2, [r9, #4]
   8947a:	b003      	add	sp, #12
   8947c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   89480:	2300      	movs	r3, #0
   89482:	4618      	mov	r0, r3
   89484:	f8c9 3004 	str.w	r3, [r9, #4]
   89488:	b003      	add	sp, #12
   8948a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8948e:	bf00      	nop

00089490 <__swbuf_r>:
   89490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89492:	4606      	mov	r6, r0
   89494:	460d      	mov	r5, r1
   89496:	4614      	mov	r4, r2
   89498:	b110      	cbz	r0, 894a0 <__swbuf_r+0x10>
   8949a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8949c:	2b00      	cmp	r3, #0
   8949e:	d043      	beq.n	89528 <__swbuf_r+0x98>
   894a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   894a4:	69a3      	ldr	r3, [r4, #24]
   894a6:	0710      	lsls	r0, r2, #28
   894a8:	60a3      	str	r3, [r4, #8]
   894aa:	b291      	uxth	r1, r2
   894ac:	d51b      	bpl.n	894e6 <__swbuf_r+0x56>
   894ae:	6923      	ldr	r3, [r4, #16]
   894b0:	b1cb      	cbz	r3, 894e6 <__swbuf_r+0x56>
   894b2:	b2ed      	uxtb	r5, r5
   894b4:	0489      	lsls	r1, r1, #18
   894b6:	462f      	mov	r7, r5
   894b8:	d522      	bpl.n	89500 <__swbuf_r+0x70>
   894ba:	6822      	ldr	r2, [r4, #0]
   894bc:	6961      	ldr	r1, [r4, #20]
   894be:	1ad3      	subs	r3, r2, r3
   894c0:	4299      	cmp	r1, r3
   894c2:	dd29      	ble.n	89518 <__swbuf_r+0x88>
   894c4:	3301      	adds	r3, #1
   894c6:	68a1      	ldr	r1, [r4, #8]
   894c8:	3901      	subs	r1, #1
   894ca:	60a1      	str	r1, [r4, #8]
   894cc:	1c51      	adds	r1, r2, #1
   894ce:	6021      	str	r1, [r4, #0]
   894d0:	7015      	strb	r5, [r2, #0]
   894d2:	6962      	ldr	r2, [r4, #20]
   894d4:	429a      	cmp	r2, r3
   894d6:	d02a      	beq.n	8952e <__swbuf_r+0x9e>
   894d8:	89a3      	ldrh	r3, [r4, #12]
   894da:	07db      	lsls	r3, r3, #31
   894dc:	d501      	bpl.n	894e2 <__swbuf_r+0x52>
   894de:	2d0a      	cmp	r5, #10
   894e0:	d025      	beq.n	8952e <__swbuf_r+0x9e>
   894e2:	4638      	mov	r0, r7
   894e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   894e6:	4621      	mov	r1, r4
   894e8:	4630      	mov	r0, r6
   894ea:	f7fc ffc7 	bl	8647c <__swsetup_r>
   894ee:	bb20      	cbnz	r0, 8953a <__swbuf_r+0xaa>
   894f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   894f4:	b2ed      	uxtb	r5, r5
   894f6:	b291      	uxth	r1, r2
   894f8:	0489      	lsls	r1, r1, #18
   894fa:	462f      	mov	r7, r5
   894fc:	6923      	ldr	r3, [r4, #16]
   894fe:	d4dc      	bmi.n	894ba <__swbuf_r+0x2a>
   89500:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   89504:	81a2      	strh	r2, [r4, #12]
   89506:	6e62      	ldr	r2, [r4, #100]	; 0x64
   89508:	6961      	ldr	r1, [r4, #20]
   8950a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   8950e:	6662      	str	r2, [r4, #100]	; 0x64
   89510:	6822      	ldr	r2, [r4, #0]
   89512:	1ad3      	subs	r3, r2, r3
   89514:	4299      	cmp	r1, r3
   89516:	dcd5      	bgt.n	894c4 <__swbuf_r+0x34>
   89518:	4621      	mov	r1, r4
   8951a:	4630      	mov	r0, r6
   8951c:	f7fe f8b8 	bl	87690 <_fflush_r>
   89520:	b958      	cbnz	r0, 8953a <__swbuf_r+0xaa>
   89522:	2301      	movs	r3, #1
   89524:	6822      	ldr	r2, [r4, #0]
   89526:	e7ce      	b.n	894c6 <__swbuf_r+0x36>
   89528:	f7fe f8e6 	bl	876f8 <__sinit>
   8952c:	e7b8      	b.n	894a0 <__swbuf_r+0x10>
   8952e:	4621      	mov	r1, r4
   89530:	4630      	mov	r0, r6
   89532:	f7fe f8ad 	bl	87690 <_fflush_r>
   89536:	2800      	cmp	r0, #0
   89538:	d0d3      	beq.n	894e2 <__swbuf_r+0x52>
   8953a:	f04f 37ff 	mov.w	r7, #4294967295
   8953e:	e7d0      	b.n	894e2 <__swbuf_r+0x52>

00089540 <_wcrtomb_r>:
   89540:	b570      	push	{r4, r5, r6, lr}
   89542:	4605      	mov	r5, r0
   89544:	461c      	mov	r4, r3
   89546:	b084      	sub	sp, #16
   89548:	b139      	cbz	r1, 8955a <_wcrtomb_r+0x1a>
   8954a:	4e0b      	ldr	r6, [pc, #44]	; (89578 <_wcrtomb_r+0x38>)
   8954c:	f8d6 60e0 	ldr.w	r6, [r6, #224]	; 0xe0
   89550:	47b0      	blx	r6
   89552:	1c43      	adds	r3, r0, #1
   89554:	d009      	beq.n	8956a <_wcrtomb_r+0x2a>
   89556:	b004      	add	sp, #16
   89558:	bd70      	pop	{r4, r5, r6, pc}
   8955a:	460a      	mov	r2, r1
   8955c:	4906      	ldr	r1, [pc, #24]	; (89578 <_wcrtomb_r+0x38>)
   8955e:	f8d1 60e0 	ldr.w	r6, [r1, #224]	; 0xe0
   89562:	a901      	add	r1, sp, #4
   89564:	47b0      	blx	r6
   89566:	1c43      	adds	r3, r0, #1
   89568:	d1f5      	bne.n	89556 <_wcrtomb_r+0x16>
   8956a:	2200      	movs	r2, #0
   8956c:	238a      	movs	r3, #138	; 0x8a
   8956e:	6022      	str	r2, [r4, #0]
   89570:	602b      	str	r3, [r5, #0]
   89572:	b004      	add	sp, #16
   89574:	bd70      	pop	{r4, r5, r6, pc}
   89576:	bf00      	nop
   89578:	200007d4 	.word	0x200007d4

0008957c <__ascii_wctomb>:
   8957c:	4603      	mov	r3, r0
   8957e:	b149      	cbz	r1, 89594 <__ascii_wctomb+0x18>
   89580:	2aff      	cmp	r2, #255	; 0xff
   89582:	d802      	bhi.n	8958a <__ascii_wctomb+0xe>
   89584:	2001      	movs	r0, #1
   89586:	700a      	strb	r2, [r1, #0]
   89588:	4770      	bx	lr
   8958a:	228a      	movs	r2, #138	; 0x8a
   8958c:	f04f 30ff 	mov.w	r0, #4294967295
   89590:	601a      	str	r2, [r3, #0]
   89592:	4770      	bx	lr
   89594:	4608      	mov	r0, r1
   89596:	4770      	bx	lr

00089598 <_write_r>:
   89598:	b538      	push	{r3, r4, r5, lr}
   8959a:	460c      	mov	r4, r1
   8959c:	4611      	mov	r1, r2
   8959e:	2200      	movs	r2, #0
   895a0:	4684      	mov	ip, r0
   895a2:	4d07      	ldr	r5, [pc, #28]	; (895c0 <_write_r+0x28>)
   895a4:	4620      	mov	r0, r4
   895a6:	602a      	str	r2, [r5, #0]
   895a8:	461a      	mov	r2, r3
   895aa:	4664      	mov	r4, ip
   895ac:	f7f9 faf8 	bl	82ba0 <_write>
   895b0:	1c43      	adds	r3, r0, #1
   895b2:	d000      	beq.n	895b6 <_write_r+0x1e>
   895b4:	bd38      	pop	{r3, r4, r5, pc}
   895b6:	682b      	ldr	r3, [r5, #0]
   895b8:	2b00      	cmp	r3, #0
   895ba:	d0fb      	beq.n	895b4 <_write_r+0x1c>
   895bc:	6023      	str	r3, [r4, #0]
   895be:	bd38      	pop	{r3, r4, r5, pc}
   895c0:	200013c0 	.word	0x200013c0

000895c4 <__register_exitproc>:
   895c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   895c8:	f8df a07c 	ldr.w	sl, [pc, #124]	; 89648 <__register_exitproc+0x84>
   895cc:	4606      	mov	r6, r0
   895ce:	f8da 0000 	ldr.w	r0, [sl]
   895d2:	4698      	mov	r8, r3
   895d4:	460f      	mov	r7, r1
   895d6:	4691      	mov	r9, r2
   895d8:	f7fe fcb4 	bl	87f44 <__retarget_lock_acquire_recursive>
   895dc:	4b1b      	ldr	r3, [pc, #108]	; (8964c <__register_exitproc+0x88>)
   895de:	681b      	ldr	r3, [r3, #0]
   895e0:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
   895e4:	b324      	cbz	r4, 89630 <__register_exitproc+0x6c>
   895e6:	6865      	ldr	r5, [r4, #4]
   895e8:	2d1f      	cmp	r5, #31
   895ea:	dc26      	bgt.n	8963a <__register_exitproc+0x76>
   895ec:	b95e      	cbnz	r6, 89606 <__register_exitproc+0x42>
   895ee:	1c6b      	adds	r3, r5, #1
   895f0:	3502      	adds	r5, #2
   895f2:	f8da 0000 	ldr.w	r0, [sl]
   895f6:	6063      	str	r3, [r4, #4]
   895f8:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
   895fc:	f7fe fca4 	bl	87f48 <__retarget_lock_release_recursive>
   89600:	2000      	movs	r0, #0
   89602:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   89606:	2301      	movs	r3, #1
   89608:	eb04 0185 	add.w	r1, r4, r5, lsl #2
   8960c:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
   89610:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   89614:	40ab      	lsls	r3, r5
   89616:	431a      	orrs	r2, r3
   89618:	2e02      	cmp	r6, #2
   8961a:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   8961e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
   89622:	d1e4      	bne.n	895ee <__register_exitproc+0x2a>
   89624:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
   89628:	4313      	orrs	r3, r2
   8962a:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
   8962e:	e7de      	b.n	895ee <__register_exitproc+0x2a>
   89630:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
   89634:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
   89638:	e7d5      	b.n	895e6 <__register_exitproc+0x22>
   8963a:	f8da 0000 	ldr.w	r0, [sl]
   8963e:	f7fe fc83 	bl	87f48 <__retarget_lock_release_recursive>
   89642:	f04f 30ff 	mov.w	r0, #4294967295
   89646:	e7dc      	b.n	89602 <__register_exitproc+0x3e>
   89648:	200007d0 	.word	0x200007d0
   8964c:	0008a60c 	.word	0x0008a60c

00089650 <__assert_func>:
   89650:	4614      	mov	r4, r2
   89652:	b500      	push	{lr}
   89654:	461a      	mov	r2, r3
   89656:	4b0a      	ldr	r3, [pc, #40]	; (89680 <__assert_func+0x30>)
   89658:	460d      	mov	r5, r1
   8965a:	681b      	ldr	r3, [r3, #0]
   8965c:	b085      	sub	sp, #20
   8965e:	68de      	ldr	r6, [r3, #12]
   89660:	4603      	mov	r3, r0
   89662:	b14c      	cbz	r4, 89678 <__assert_func+0x28>
   89664:	4907      	ldr	r1, [pc, #28]	; (89684 <__assert_func+0x34>)
   89666:	9101      	str	r1, [sp, #4]
   89668:	4630      	mov	r0, r6
   8966a:	4907      	ldr	r1, [pc, #28]	; (89688 <__assert_func+0x38>)
   8966c:	9402      	str	r4, [sp, #8]
   8966e:	9500      	str	r5, [sp, #0]
   89670:	f000 f8c8 	bl	89804 <fiprintf>
   89674:	f000 f92c 	bl	898d0 <abort>
   89678:	4904      	ldr	r1, [pc, #16]	; (8968c <__assert_func+0x3c>)
   8967a:	460c      	mov	r4, r1
   8967c:	e7f3      	b.n	89666 <__assert_func+0x16>
   8967e:	bf00      	nop
   89680:	200003a0 	.word	0x200003a0
   89684:	0008a8c4 	.word	0x0008a8c4
   89688:	0008a8d4 	.word	0x0008a8d4
   8968c:	0008a608 	.word	0x0008a608

00089690 <_calloc_r>:
   89690:	b538      	push	{r3, r4, r5, lr}
   89692:	fba1 1402 	umull	r1, r4, r1, r2
   89696:	bb84      	cbnz	r4, 896fa <_calloc_r+0x6a>
   89698:	f7fe fcc8 	bl	8802c <_malloc_r>
   8969c:	4605      	mov	r5, r0
   8969e:	b1d8      	cbz	r0, 896d8 <_calloc_r+0x48>
   896a0:	f850 2c04 	ldr.w	r2, [r0, #-4]
   896a4:	f022 0203 	bic.w	r2, r2, #3
   896a8:	3a04      	subs	r2, #4
   896aa:	2a24      	cmp	r2, #36	; 0x24
   896ac:	d816      	bhi.n	896dc <_calloc_r+0x4c>
   896ae:	2a13      	cmp	r2, #19
   896b0:	d919      	bls.n	896e6 <_calloc_r+0x56>
   896b2:	2a1b      	cmp	r2, #27
   896b4:	e9c0 4400 	strd	r4, r4, [r0]
   896b8:	d91c      	bls.n	896f4 <_calloc_r+0x64>
   896ba:	2300      	movs	r3, #0
   896bc:	2a24      	cmp	r2, #36	; 0x24
   896be:	bf14      	ite	ne
   896c0:	f100 0210 	addne.w	r2, r0, #16
   896c4:	f100 0218 	addeq.w	r2, r0, #24
   896c8:	e9c0 4402 	strd	r4, r4, [r0, #8]
   896cc:	bf04      	itt	eq
   896ce:	6104      	streq	r4, [r0, #16]
   896d0:	6144      	streq	r4, [r0, #20]
   896d2:	e9c2 3300 	strd	r3, r3, [r2]
   896d6:	6093      	str	r3, [r2, #8]
   896d8:	4628      	mov	r0, r5
   896da:	bd38      	pop	{r3, r4, r5, pc}
   896dc:	4621      	mov	r1, r4
   896de:	f7fa f95b 	bl	83998 <memset>
   896e2:	4628      	mov	r0, r5
   896e4:	bd38      	pop	{r3, r4, r5, pc}
   896e6:	4602      	mov	r2, r0
   896e8:	2300      	movs	r3, #0
   896ea:	4628      	mov	r0, r5
   896ec:	e9c2 3300 	strd	r3, r3, [r2]
   896f0:	6093      	str	r3, [r2, #8]
   896f2:	bd38      	pop	{r3, r4, r5, pc}
   896f4:	f100 0208 	add.w	r2, r0, #8
   896f8:	e7f6      	b.n	896e8 <_calloc_r+0x58>
   896fa:	f000 f817 	bl	8972c <__errno>
   896fe:	230c      	movs	r3, #12
   89700:	2500      	movs	r5, #0
   89702:	6003      	str	r3, [r0, #0]
   89704:	e7e8      	b.n	896d8 <_calloc_r+0x48>
   89706:	bf00      	nop

00089708 <_close_r>:
   89708:	2200      	movs	r2, #0
   8970a:	b538      	push	{r3, r4, r5, lr}
   8970c:	4d06      	ldr	r5, [pc, #24]	; (89728 <_close_r+0x20>)
   8970e:	4604      	mov	r4, r0
   89710:	4608      	mov	r0, r1
   89712:	602a      	str	r2, [r5, #0]
   89714:	f7f9 ff5e 	bl	835d4 <_close>
   89718:	1c43      	adds	r3, r0, #1
   8971a:	d000      	beq.n	8971e <_close_r+0x16>
   8971c:	bd38      	pop	{r3, r4, r5, pc}
   8971e:	682b      	ldr	r3, [r5, #0]
   89720:	2b00      	cmp	r3, #0
   89722:	d0fb      	beq.n	8971c <_close_r+0x14>
   89724:	6023      	str	r3, [r4, #0]
   89726:	bd38      	pop	{r3, r4, r5, pc}
   89728:	200013c0 	.word	0x200013c0

0008972c <__errno>:
   8972c:	4b01      	ldr	r3, [pc, #4]	; (89734 <__errno+0x8>)
   8972e:	6818      	ldr	r0, [r3, #0]
   89730:	4770      	bx	lr
   89732:	bf00      	nop
   89734:	200003a0 	.word	0x200003a0

00089738 <_fclose_r>:
   89738:	b570      	push	{r4, r5, r6, lr}
   8973a:	2900      	cmp	r1, #0
   8973c:	d04b      	beq.n	897d6 <_fclose_r+0x9e>
   8973e:	4606      	mov	r6, r0
   89740:	460c      	mov	r4, r1
   89742:	b110      	cbz	r0, 8974a <_fclose_r+0x12>
   89744:	6b83      	ldr	r3, [r0, #56]	; 0x38
   89746:	2b00      	cmp	r3, #0
   89748:	d048      	beq.n	897dc <_fclose_r+0xa4>
   8974a:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8974c:	07d8      	lsls	r0, r3, #31
   8974e:	d534      	bpl.n	897ba <_fclose_r+0x82>
   89750:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   89754:	2b00      	cmp	r3, #0
   89756:	d03e      	beq.n	897d6 <_fclose_r+0x9e>
   89758:	4621      	mov	r1, r4
   8975a:	4630      	mov	r0, r6
   8975c:	f7fd ff06 	bl	8756c <__sflush_r>
   89760:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   89762:	4605      	mov	r5, r0
   89764:	b133      	cbz	r3, 89774 <_fclose_r+0x3c>
   89766:	4630      	mov	r0, r6
   89768:	69e1      	ldr	r1, [r4, #28]
   8976a:	4798      	blx	r3
   8976c:	2800      	cmp	r0, #0
   8976e:	bfb8      	it	lt
   89770:	f04f 35ff 	movlt.w	r5, #4294967295
   89774:	89a3      	ldrh	r3, [r4, #12]
   89776:	061a      	lsls	r2, r3, #24
   89778:	d43b      	bmi.n	897f2 <_fclose_r+0xba>
   8977a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8977c:	b141      	cbz	r1, 89790 <_fclose_r+0x58>
   8977e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   89782:	4299      	cmp	r1, r3
   89784:	d002      	beq.n	8978c <_fclose_r+0x54>
   89786:	4630      	mov	r0, r6
   89788:	f7fe f932 	bl	879f0 <_free_r>
   8978c:	2300      	movs	r3, #0
   8978e:	6323      	str	r3, [r4, #48]	; 0x30
   89790:	6c61      	ldr	r1, [r4, #68]	; 0x44
   89792:	b121      	cbz	r1, 8979e <_fclose_r+0x66>
   89794:	4630      	mov	r0, r6
   89796:	f7fe f92b 	bl	879f0 <_free_r>
   8979a:	2300      	movs	r3, #0
   8979c:	6463      	str	r3, [r4, #68]	; 0x44
   8979e:	f7fe f831 	bl	87804 <__sfp_lock_acquire>
   897a2:	2200      	movs	r2, #0
   897a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   897a6:	81a2      	strh	r2, [r4, #12]
   897a8:	07db      	lsls	r3, r3, #31
   897aa:	d527      	bpl.n	897fc <_fclose_r+0xc4>
   897ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
   897ae:	f7fe fbc7 	bl	87f40 <__retarget_lock_close_recursive>
   897b2:	f7fe f82d 	bl	87810 <__sfp_lock_release>
   897b6:	4628      	mov	r0, r5
   897b8:	bd70      	pop	{r4, r5, r6, pc}
   897ba:	89a3      	ldrh	r3, [r4, #12]
   897bc:	0599      	lsls	r1, r3, #22
   897be:	d4cb      	bmi.n	89758 <_fclose_r+0x20>
   897c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   897c2:	f7fe fbbf 	bl	87f44 <__retarget_lock_acquire_recursive>
   897c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   897ca:	2b00      	cmp	r3, #0
   897cc:	d1c4      	bne.n	89758 <_fclose_r+0x20>
   897ce:	6e65      	ldr	r5, [r4, #100]	; 0x64
   897d0:	f015 0501 	ands.w	r5, r5, #1
   897d4:	d008      	beq.n	897e8 <_fclose_r+0xb0>
   897d6:	2500      	movs	r5, #0
   897d8:	4628      	mov	r0, r5
   897da:	bd70      	pop	{r4, r5, r6, pc}
   897dc:	f7fd ff8c 	bl	876f8 <__sinit>
   897e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
   897e2:	07d8      	lsls	r0, r3, #31
   897e4:	d4b4      	bmi.n	89750 <_fclose_r+0x18>
   897e6:	e7e8      	b.n	897ba <_fclose_r+0x82>
   897e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   897ea:	f7fe fbad 	bl	87f48 <__retarget_lock_release_recursive>
   897ee:	4628      	mov	r0, r5
   897f0:	bd70      	pop	{r4, r5, r6, pc}
   897f2:	4630      	mov	r0, r6
   897f4:	6921      	ldr	r1, [r4, #16]
   897f6:	f7fe f8fb 	bl	879f0 <_free_r>
   897fa:	e7be      	b.n	8977a <_fclose_r+0x42>
   897fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   897fe:	f7fe fba3 	bl	87f48 <__retarget_lock_release_recursive>
   89802:	e7d3      	b.n	897ac <_fclose_r+0x74>

00089804 <fiprintf>:
   89804:	b40e      	push	{r1, r2, r3}
   89806:	b500      	push	{lr}
   89808:	4a07      	ldr	r2, [pc, #28]	; (89828 <fiprintf+0x24>)
   8980a:	b082      	sub	sp, #8
   8980c:	ab03      	add	r3, sp, #12
   8980e:	4601      	mov	r1, r0
   89810:	6810      	ldr	r0, [r2, #0]
   89812:	f853 2b04 	ldr.w	r2, [r3], #4
   89816:	9301      	str	r3, [sp, #4]
   89818:	f7fb ff22 	bl	85660 <_vfiprintf_r>
   8981c:	b002      	add	sp, #8
   8981e:	f85d eb04 	ldr.w	lr, [sp], #4
   89822:	b003      	add	sp, #12
   89824:	4770      	bx	lr
   89826:	bf00      	nop
   89828:	200003a0 	.word	0x200003a0

0008982c <_fstat_r>:
   8982c:	b570      	push	{r4, r5, r6, lr}
   8982e:	2600      	movs	r6, #0
   89830:	4d07      	ldr	r5, [pc, #28]	; (89850 <_fstat_r+0x24>)
   89832:	4604      	mov	r4, r0
   89834:	4608      	mov	r0, r1
   89836:	4611      	mov	r1, r2
   89838:	602e      	str	r6, [r5, #0]
   8983a:	f7f9 fecf 	bl	835dc <_fstat>
   8983e:	1c43      	adds	r3, r0, #1
   89840:	d000      	beq.n	89844 <_fstat_r+0x18>
   89842:	bd70      	pop	{r4, r5, r6, pc}
   89844:	682b      	ldr	r3, [r5, #0]
   89846:	2b00      	cmp	r3, #0
   89848:	d0fb      	beq.n	89842 <_fstat_r+0x16>
   8984a:	6023      	str	r3, [r4, #0]
   8984c:	bd70      	pop	{r4, r5, r6, pc}
   8984e:	bf00      	nop
   89850:	200013c0 	.word	0x200013c0

00089854 <_isatty_r>:
   89854:	2200      	movs	r2, #0
   89856:	b538      	push	{r3, r4, r5, lr}
   89858:	4d06      	ldr	r5, [pc, #24]	; (89874 <_isatty_r+0x20>)
   8985a:	4604      	mov	r4, r0
   8985c:	4608      	mov	r0, r1
   8985e:	602a      	str	r2, [r5, #0]
   89860:	f7f9 fec2 	bl	835e8 <_isatty>
   89864:	1c43      	adds	r3, r0, #1
   89866:	d000      	beq.n	8986a <_isatty_r+0x16>
   89868:	bd38      	pop	{r3, r4, r5, pc}
   8986a:	682b      	ldr	r3, [r5, #0]
   8986c:	2b00      	cmp	r3, #0
   8986e:	d0fb      	beq.n	89868 <_isatty_r+0x14>
   89870:	6023      	str	r3, [r4, #0]
   89872:	bd38      	pop	{r3, r4, r5, pc}
   89874:	200013c0 	.word	0x200013c0

00089878 <_lseek_r>:
   89878:	b538      	push	{r3, r4, r5, lr}
   8987a:	460c      	mov	r4, r1
   8987c:	4611      	mov	r1, r2
   8987e:	2200      	movs	r2, #0
   89880:	4684      	mov	ip, r0
   89882:	4d07      	ldr	r5, [pc, #28]	; (898a0 <_lseek_r+0x28>)
   89884:	4620      	mov	r0, r4
   89886:	602a      	str	r2, [r5, #0]
   89888:	461a      	mov	r2, r3
   8988a:	4664      	mov	r4, ip
   8988c:	f7f9 feae 	bl	835ec <_lseek>
   89890:	1c43      	adds	r3, r0, #1
   89892:	d000      	beq.n	89896 <_lseek_r+0x1e>
   89894:	bd38      	pop	{r3, r4, r5, pc}
   89896:	682b      	ldr	r3, [r5, #0]
   89898:	2b00      	cmp	r3, #0
   8989a:	d0fb      	beq.n	89894 <_lseek_r+0x1c>
   8989c:	6023      	str	r3, [r4, #0]
   8989e:	bd38      	pop	{r3, r4, r5, pc}
   898a0:	200013c0 	.word	0x200013c0

000898a4 <_read_r>:
   898a4:	b538      	push	{r3, r4, r5, lr}
   898a6:	460c      	mov	r4, r1
   898a8:	4611      	mov	r1, r2
   898aa:	2200      	movs	r2, #0
   898ac:	4684      	mov	ip, r0
   898ae:	4d07      	ldr	r5, [pc, #28]	; (898cc <_read_r+0x28>)
   898b0:	4620      	mov	r0, r4
   898b2:	602a      	str	r2, [r5, #0]
   898b4:	461a      	mov	r2, r3
   898b6:	4664      	mov	r4, ip
   898b8:	f7f9 ff2c 	bl	83714 <_read>
   898bc:	1c43      	adds	r3, r0, #1
   898be:	d000      	beq.n	898c2 <_read_r+0x1e>
   898c0:	bd38      	pop	{r3, r4, r5, pc}
   898c2:	682b      	ldr	r3, [r5, #0]
   898c4:	2b00      	cmp	r3, #0
   898c6:	d0fb      	beq.n	898c0 <_read_r+0x1c>
   898c8:	6023      	str	r3, [r4, #0]
   898ca:	bd38      	pop	{r3, r4, r5, pc}
   898cc:	200013c0 	.word	0x200013c0

000898d0 <abort>:
   898d0:	2006      	movs	r0, #6
   898d2:	b508      	push	{r3, lr}
   898d4:	f000 f804 	bl	898e0 <raise>
   898d8:	2001      	movs	r0, #1
   898da:	f7f9 fe89 	bl	835f0 <_exit>
   898de:	bf00      	nop

000898e0 <raise>:
   898e0:	b538      	push	{r3, r4, r5, lr}
   898e2:	4b15      	ldr	r3, [pc, #84]	; (89938 <raise+0x58>)
   898e4:	281f      	cmp	r0, #31
   898e6:	681d      	ldr	r5, [r3, #0]
   898e8:	d820      	bhi.n	8992c <raise+0x4c>
   898ea:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
   898ee:	4604      	mov	r4, r0
   898f0:	b162      	cbz	r2, 8990c <raise+0x2c>
   898f2:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
   898f6:	b14b      	cbz	r3, 8990c <raise+0x2c>
   898f8:	2b01      	cmp	r3, #1
   898fa:	d015      	beq.n	89928 <raise+0x48>
   898fc:	1c59      	adds	r1, r3, #1
   898fe:	d00f      	beq.n	89920 <raise+0x40>
   89900:	2500      	movs	r5, #0
   89902:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
   89906:	4798      	blx	r3
   89908:	4628      	mov	r0, r5
   8990a:	bd38      	pop	{r3, r4, r5, pc}
   8990c:	4628      	mov	r0, r5
   8990e:	f000 f829 	bl	89964 <_getpid_r>
   89912:	4622      	mov	r2, r4
   89914:	4601      	mov	r1, r0
   89916:	4628      	mov	r0, r5
   89918:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8991c:	f000 b80e 	b.w	8993c <_kill_r>
   89920:	2316      	movs	r3, #22
   89922:	2001      	movs	r0, #1
   89924:	602b      	str	r3, [r5, #0]
   89926:	bd38      	pop	{r3, r4, r5, pc}
   89928:	2000      	movs	r0, #0
   8992a:	bd38      	pop	{r3, r4, r5, pc}
   8992c:	2316      	movs	r3, #22
   8992e:	f04f 30ff 	mov.w	r0, #4294967295
   89932:	602b      	str	r3, [r5, #0]
   89934:	bd38      	pop	{r3, r4, r5, pc}
   89936:	bf00      	nop
   89938:	200003a0 	.word	0x200003a0

0008993c <_kill_r>:
   8993c:	b570      	push	{r4, r5, r6, lr}
   8993e:	2600      	movs	r6, #0
   89940:	4d07      	ldr	r5, [pc, #28]	; (89960 <_kill_r+0x24>)
   89942:	4604      	mov	r4, r0
   89944:	4608      	mov	r0, r1
   89946:	4611      	mov	r1, r2
   89948:	602e      	str	r6, [r5, #0]
   8994a:	f7f9 fe5b 	bl	83604 <_kill>
   8994e:	1c43      	adds	r3, r0, #1
   89950:	d000      	beq.n	89954 <_kill_r+0x18>
   89952:	bd70      	pop	{r4, r5, r6, pc}
   89954:	682b      	ldr	r3, [r5, #0]
   89956:	2b00      	cmp	r3, #0
   89958:	d0fb      	beq.n	89952 <_kill_r+0x16>
   8995a:	6023      	str	r3, [r4, #0]
   8995c:	bd70      	pop	{r4, r5, r6, pc}
   8995e:	bf00      	nop
   89960:	200013c0 	.word	0x200013c0

00089964 <_getpid_r>:
   89964:	f7f9 be50 	b.w	83608 <_getpid>

00089968 <__aeabi_drsub>:
   89968:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   8996c:	e002      	b.n	89974 <__adddf3>
   8996e:	bf00      	nop

00089970 <__aeabi_dsub>:
   89970:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00089974 <__adddf3>:
   89974:	b530      	push	{r4, r5, lr}
   89976:	ea4f 0441 	mov.w	r4, r1, lsl #1
   8997a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   8997e:	ea94 0f05 	teq	r4, r5
   89982:	bf08      	it	eq
   89984:	ea90 0f02 	teqeq	r0, r2
   89988:	bf1f      	itttt	ne
   8998a:	ea54 0c00 	orrsne.w	ip, r4, r0
   8998e:	ea55 0c02 	orrsne.w	ip, r5, r2
   89992:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   89996:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8999a:	f000 80e2 	beq.w	89b62 <__adddf3+0x1ee>
   8999e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   899a2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   899a6:	bfb8      	it	lt
   899a8:	426d      	neglt	r5, r5
   899aa:	dd0c      	ble.n	899c6 <__adddf3+0x52>
   899ac:	442c      	add	r4, r5
   899ae:	ea80 0202 	eor.w	r2, r0, r2
   899b2:	ea81 0303 	eor.w	r3, r1, r3
   899b6:	ea82 0000 	eor.w	r0, r2, r0
   899ba:	ea83 0101 	eor.w	r1, r3, r1
   899be:	ea80 0202 	eor.w	r2, r0, r2
   899c2:	ea81 0303 	eor.w	r3, r1, r3
   899c6:	2d36      	cmp	r5, #54	; 0x36
   899c8:	bf88      	it	hi
   899ca:	bd30      	pophi	{r4, r5, pc}
   899cc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   899d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   899d4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   899d8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   899dc:	d002      	beq.n	899e4 <__adddf3+0x70>
   899de:	4240      	negs	r0, r0
   899e0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   899e4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   899e8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   899ec:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   899f0:	d002      	beq.n	899f8 <__adddf3+0x84>
   899f2:	4252      	negs	r2, r2
   899f4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   899f8:	ea94 0f05 	teq	r4, r5
   899fc:	f000 80a7 	beq.w	89b4e <__adddf3+0x1da>
   89a00:	f1a4 0401 	sub.w	r4, r4, #1
   89a04:	f1d5 0e20 	rsbs	lr, r5, #32
   89a08:	db0d      	blt.n	89a26 <__adddf3+0xb2>
   89a0a:	fa02 fc0e 	lsl.w	ip, r2, lr
   89a0e:	fa22 f205 	lsr.w	r2, r2, r5
   89a12:	1880      	adds	r0, r0, r2
   89a14:	f141 0100 	adc.w	r1, r1, #0
   89a18:	fa03 f20e 	lsl.w	r2, r3, lr
   89a1c:	1880      	adds	r0, r0, r2
   89a1e:	fa43 f305 	asr.w	r3, r3, r5
   89a22:	4159      	adcs	r1, r3
   89a24:	e00e      	b.n	89a44 <__adddf3+0xd0>
   89a26:	f1a5 0520 	sub.w	r5, r5, #32
   89a2a:	f10e 0e20 	add.w	lr, lr, #32
   89a2e:	2a01      	cmp	r2, #1
   89a30:	fa03 fc0e 	lsl.w	ip, r3, lr
   89a34:	bf28      	it	cs
   89a36:	f04c 0c02 	orrcs.w	ip, ip, #2
   89a3a:	fa43 f305 	asr.w	r3, r3, r5
   89a3e:	18c0      	adds	r0, r0, r3
   89a40:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   89a44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89a48:	d507      	bpl.n	89a5a <__adddf3+0xe6>
   89a4a:	f04f 0e00 	mov.w	lr, #0
   89a4e:	f1dc 0c00 	rsbs	ip, ip, #0
   89a52:	eb7e 0000 	sbcs.w	r0, lr, r0
   89a56:	eb6e 0101 	sbc.w	r1, lr, r1
   89a5a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   89a5e:	d31b      	bcc.n	89a98 <__adddf3+0x124>
   89a60:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   89a64:	d30c      	bcc.n	89a80 <__adddf3+0x10c>
   89a66:	0849      	lsrs	r1, r1, #1
   89a68:	ea5f 0030 	movs.w	r0, r0, rrx
   89a6c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   89a70:	f104 0401 	add.w	r4, r4, #1
   89a74:	ea4f 5244 	mov.w	r2, r4, lsl #21
   89a78:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   89a7c:	f080 809a 	bcs.w	89bb4 <__adddf3+0x240>
   89a80:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   89a84:	bf08      	it	eq
   89a86:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   89a8a:	f150 0000 	adcs.w	r0, r0, #0
   89a8e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89a92:	ea41 0105 	orr.w	r1, r1, r5
   89a96:	bd30      	pop	{r4, r5, pc}
   89a98:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   89a9c:	4140      	adcs	r0, r0
   89a9e:	eb41 0101 	adc.w	r1, r1, r1
   89aa2:	3c01      	subs	r4, #1
   89aa4:	bf28      	it	cs
   89aa6:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
   89aaa:	d2e9      	bcs.n	89a80 <__adddf3+0x10c>
   89aac:	f091 0f00 	teq	r1, #0
   89ab0:	bf04      	itt	eq
   89ab2:	4601      	moveq	r1, r0
   89ab4:	2000      	moveq	r0, #0
   89ab6:	fab1 f381 	clz	r3, r1
   89aba:	bf08      	it	eq
   89abc:	3320      	addeq	r3, #32
   89abe:	f1a3 030b 	sub.w	r3, r3, #11
   89ac2:	f1b3 0220 	subs.w	r2, r3, #32
   89ac6:	da0c      	bge.n	89ae2 <__adddf3+0x16e>
   89ac8:	320c      	adds	r2, #12
   89aca:	dd08      	ble.n	89ade <__adddf3+0x16a>
   89acc:	f102 0c14 	add.w	ip, r2, #20
   89ad0:	f1c2 020c 	rsb	r2, r2, #12
   89ad4:	fa01 f00c 	lsl.w	r0, r1, ip
   89ad8:	fa21 f102 	lsr.w	r1, r1, r2
   89adc:	e00c      	b.n	89af8 <__adddf3+0x184>
   89ade:	f102 0214 	add.w	r2, r2, #20
   89ae2:	bfd8      	it	le
   89ae4:	f1c2 0c20 	rsble	ip, r2, #32
   89ae8:	fa01 f102 	lsl.w	r1, r1, r2
   89aec:	fa20 fc0c 	lsr.w	ip, r0, ip
   89af0:	bfdc      	itt	le
   89af2:	ea41 010c 	orrle.w	r1, r1, ip
   89af6:	4090      	lslle	r0, r2
   89af8:	1ae4      	subs	r4, r4, r3
   89afa:	bfa2      	ittt	ge
   89afc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   89b00:	4329      	orrge	r1, r5
   89b02:	bd30      	popge	{r4, r5, pc}
   89b04:	ea6f 0404 	mvn.w	r4, r4
   89b08:	3c1f      	subs	r4, #31
   89b0a:	da1c      	bge.n	89b46 <__adddf3+0x1d2>
   89b0c:	340c      	adds	r4, #12
   89b0e:	dc0e      	bgt.n	89b2e <__adddf3+0x1ba>
   89b10:	f104 0414 	add.w	r4, r4, #20
   89b14:	f1c4 0220 	rsb	r2, r4, #32
   89b18:	fa20 f004 	lsr.w	r0, r0, r4
   89b1c:	fa01 f302 	lsl.w	r3, r1, r2
   89b20:	ea40 0003 	orr.w	r0, r0, r3
   89b24:	fa21 f304 	lsr.w	r3, r1, r4
   89b28:	ea45 0103 	orr.w	r1, r5, r3
   89b2c:	bd30      	pop	{r4, r5, pc}
   89b2e:	f1c4 040c 	rsb	r4, r4, #12
   89b32:	f1c4 0220 	rsb	r2, r4, #32
   89b36:	fa20 f002 	lsr.w	r0, r0, r2
   89b3a:	fa01 f304 	lsl.w	r3, r1, r4
   89b3e:	ea40 0003 	orr.w	r0, r0, r3
   89b42:	4629      	mov	r1, r5
   89b44:	bd30      	pop	{r4, r5, pc}
   89b46:	fa21 f004 	lsr.w	r0, r1, r4
   89b4a:	4629      	mov	r1, r5
   89b4c:	bd30      	pop	{r4, r5, pc}
   89b4e:	f094 0f00 	teq	r4, #0
   89b52:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   89b56:	bf06      	itte	eq
   89b58:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   89b5c:	3401      	addeq	r4, #1
   89b5e:	3d01      	subne	r5, #1
   89b60:	e74e      	b.n	89a00 <__adddf3+0x8c>
   89b62:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   89b66:	bf18      	it	ne
   89b68:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   89b6c:	d029      	beq.n	89bc2 <__adddf3+0x24e>
   89b6e:	ea94 0f05 	teq	r4, r5
   89b72:	bf08      	it	eq
   89b74:	ea90 0f02 	teqeq	r0, r2
   89b78:	d005      	beq.n	89b86 <__adddf3+0x212>
   89b7a:	ea54 0c00 	orrs.w	ip, r4, r0
   89b7e:	bf04      	itt	eq
   89b80:	4619      	moveq	r1, r3
   89b82:	4610      	moveq	r0, r2
   89b84:	bd30      	pop	{r4, r5, pc}
   89b86:	ea91 0f03 	teq	r1, r3
   89b8a:	bf1e      	ittt	ne
   89b8c:	2100      	movne	r1, #0
   89b8e:	2000      	movne	r0, #0
   89b90:	bd30      	popne	{r4, r5, pc}
   89b92:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   89b96:	d105      	bne.n	89ba4 <__adddf3+0x230>
   89b98:	0040      	lsls	r0, r0, #1
   89b9a:	4149      	adcs	r1, r1
   89b9c:	bf28      	it	cs
   89b9e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   89ba2:	bd30      	pop	{r4, r5, pc}
   89ba4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   89ba8:	bf3c      	itt	cc
   89baa:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   89bae:	bd30      	popcc	{r4, r5, pc}
   89bb0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89bb4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   89bb8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   89bbc:	f04f 0000 	mov.w	r0, #0
   89bc0:	bd30      	pop	{r4, r5, pc}
   89bc2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   89bc6:	bf1a      	itte	ne
   89bc8:	4619      	movne	r1, r3
   89bca:	4610      	movne	r0, r2
   89bcc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   89bd0:	bf1c      	itt	ne
   89bd2:	460b      	movne	r3, r1
   89bd4:	4602      	movne	r2, r0
   89bd6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   89bda:	bf06      	itte	eq
   89bdc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   89be0:	ea91 0f03 	teqeq	r1, r3
   89be4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   89be8:	bd30      	pop	{r4, r5, pc}
   89bea:	bf00      	nop

00089bec <__aeabi_ui2d>:
   89bec:	f090 0f00 	teq	r0, #0
   89bf0:	bf04      	itt	eq
   89bf2:	2100      	moveq	r1, #0
   89bf4:	4770      	bxeq	lr
   89bf6:	b530      	push	{r4, r5, lr}
   89bf8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   89bfc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89c00:	f04f 0500 	mov.w	r5, #0
   89c04:	f04f 0100 	mov.w	r1, #0
   89c08:	e750      	b.n	89aac <__adddf3+0x138>
   89c0a:	bf00      	nop

00089c0c <__aeabi_i2d>:
   89c0c:	f090 0f00 	teq	r0, #0
   89c10:	bf04      	itt	eq
   89c12:	2100      	moveq	r1, #0
   89c14:	4770      	bxeq	lr
   89c16:	b530      	push	{r4, r5, lr}
   89c18:	f44f 6480 	mov.w	r4, #1024	; 0x400
   89c1c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89c20:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   89c24:	bf48      	it	mi
   89c26:	4240      	negmi	r0, r0
   89c28:	f04f 0100 	mov.w	r1, #0
   89c2c:	e73e      	b.n	89aac <__adddf3+0x138>
   89c2e:	bf00      	nop

00089c30 <__aeabi_f2d>:
   89c30:	0042      	lsls	r2, r0, #1
   89c32:	ea4f 01e2 	mov.w	r1, r2, asr #3
   89c36:	ea4f 0131 	mov.w	r1, r1, rrx
   89c3a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   89c3e:	bf1f      	itttt	ne
   89c40:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   89c44:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   89c48:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   89c4c:	4770      	bxne	lr
   89c4e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   89c52:	bf08      	it	eq
   89c54:	4770      	bxeq	lr
   89c56:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   89c5a:	bf04      	itt	eq
   89c5c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   89c60:	4770      	bxeq	lr
   89c62:	b530      	push	{r4, r5, lr}
   89c64:	f44f 7460 	mov.w	r4, #896	; 0x380
   89c68:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89c6c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   89c70:	e71c      	b.n	89aac <__adddf3+0x138>
   89c72:	bf00      	nop

00089c74 <__aeabi_ul2d>:
   89c74:	ea50 0201 	orrs.w	r2, r0, r1
   89c78:	bf08      	it	eq
   89c7a:	4770      	bxeq	lr
   89c7c:	b530      	push	{r4, r5, lr}
   89c7e:	f04f 0500 	mov.w	r5, #0
   89c82:	e00a      	b.n	89c9a <__aeabi_l2d+0x16>

00089c84 <__aeabi_l2d>:
   89c84:	ea50 0201 	orrs.w	r2, r0, r1
   89c88:	bf08      	it	eq
   89c8a:	4770      	bxeq	lr
   89c8c:	b530      	push	{r4, r5, lr}
   89c8e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   89c92:	d502      	bpl.n	89c9a <__aeabi_l2d+0x16>
   89c94:	4240      	negs	r0, r0
   89c96:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   89c9a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   89c9e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89ca2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   89ca6:	f43f aed8 	beq.w	89a5a <__adddf3+0xe6>
   89caa:	f04f 0203 	mov.w	r2, #3
   89cae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   89cb2:	bf18      	it	ne
   89cb4:	3203      	addne	r2, #3
   89cb6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   89cba:	bf18      	it	ne
   89cbc:	3203      	addne	r2, #3
   89cbe:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   89cc2:	f1c2 0320 	rsb	r3, r2, #32
   89cc6:	fa00 fc03 	lsl.w	ip, r0, r3
   89cca:	fa20 f002 	lsr.w	r0, r0, r2
   89cce:	fa01 fe03 	lsl.w	lr, r1, r3
   89cd2:	ea40 000e 	orr.w	r0, r0, lr
   89cd6:	fa21 f102 	lsr.w	r1, r1, r2
   89cda:	4414      	add	r4, r2
   89cdc:	e6bd      	b.n	89a5a <__adddf3+0xe6>
   89cde:	bf00      	nop

00089ce0 <__aeabi_dmul>:
   89ce0:	b570      	push	{r4, r5, r6, lr}
   89ce2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   89ce6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   89cea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   89cee:	bf1d      	ittte	ne
   89cf0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   89cf4:	ea94 0f0c 	teqne	r4, ip
   89cf8:	ea95 0f0c 	teqne	r5, ip
   89cfc:	f000 f8de 	bleq	89ebc <__aeabi_dmul+0x1dc>
   89d00:	442c      	add	r4, r5
   89d02:	ea81 0603 	eor.w	r6, r1, r3
   89d06:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   89d0a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   89d0e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   89d12:	bf18      	it	ne
   89d14:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   89d18:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89d1c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   89d20:	d038      	beq.n	89d94 <__aeabi_dmul+0xb4>
   89d22:	fba0 ce02 	umull	ip, lr, r0, r2
   89d26:	f04f 0500 	mov.w	r5, #0
   89d2a:	fbe1 e502 	umlal	lr, r5, r1, r2
   89d2e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   89d32:	fbe0 e503 	umlal	lr, r5, r0, r3
   89d36:	f04f 0600 	mov.w	r6, #0
   89d3a:	fbe1 5603 	umlal	r5, r6, r1, r3
   89d3e:	f09c 0f00 	teq	ip, #0
   89d42:	bf18      	it	ne
   89d44:	f04e 0e01 	orrne.w	lr, lr, #1
   89d48:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   89d4c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   89d50:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   89d54:	d204      	bcs.n	89d60 <__aeabi_dmul+0x80>
   89d56:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   89d5a:	416d      	adcs	r5, r5
   89d5c:	eb46 0606 	adc.w	r6, r6, r6
   89d60:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   89d64:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   89d68:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   89d6c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   89d70:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   89d74:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   89d78:	bf88      	it	hi
   89d7a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   89d7e:	d81e      	bhi.n	89dbe <__aeabi_dmul+0xde>
   89d80:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   89d84:	bf08      	it	eq
   89d86:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   89d8a:	f150 0000 	adcs.w	r0, r0, #0
   89d8e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89d92:	bd70      	pop	{r4, r5, r6, pc}
   89d94:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   89d98:	ea46 0101 	orr.w	r1, r6, r1
   89d9c:	ea40 0002 	orr.w	r0, r0, r2
   89da0:	ea81 0103 	eor.w	r1, r1, r3
   89da4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   89da8:	bfc2      	ittt	gt
   89daa:	ebd4 050c 	rsbsgt	r5, r4, ip
   89dae:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   89db2:	bd70      	popgt	{r4, r5, r6, pc}
   89db4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89db8:	f04f 0e00 	mov.w	lr, #0
   89dbc:	3c01      	subs	r4, #1
   89dbe:	f300 80ab 	bgt.w	89f18 <__aeabi_dmul+0x238>
   89dc2:	f114 0f36 	cmn.w	r4, #54	; 0x36
   89dc6:	bfde      	ittt	le
   89dc8:	2000      	movle	r0, #0
   89dca:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   89dce:	bd70      	pople	{r4, r5, r6, pc}
   89dd0:	f1c4 0400 	rsb	r4, r4, #0
   89dd4:	3c20      	subs	r4, #32
   89dd6:	da35      	bge.n	89e44 <__aeabi_dmul+0x164>
   89dd8:	340c      	adds	r4, #12
   89dda:	dc1b      	bgt.n	89e14 <__aeabi_dmul+0x134>
   89ddc:	f104 0414 	add.w	r4, r4, #20
   89de0:	f1c4 0520 	rsb	r5, r4, #32
   89de4:	fa00 f305 	lsl.w	r3, r0, r5
   89de8:	fa20 f004 	lsr.w	r0, r0, r4
   89dec:	fa01 f205 	lsl.w	r2, r1, r5
   89df0:	ea40 0002 	orr.w	r0, r0, r2
   89df4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   89df8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   89dfc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   89e00:	fa21 f604 	lsr.w	r6, r1, r4
   89e04:	eb42 0106 	adc.w	r1, r2, r6
   89e08:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89e0c:	bf08      	it	eq
   89e0e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   89e12:	bd70      	pop	{r4, r5, r6, pc}
   89e14:	f1c4 040c 	rsb	r4, r4, #12
   89e18:	f1c4 0520 	rsb	r5, r4, #32
   89e1c:	fa00 f304 	lsl.w	r3, r0, r4
   89e20:	fa20 f005 	lsr.w	r0, r0, r5
   89e24:	fa01 f204 	lsl.w	r2, r1, r4
   89e28:	ea40 0002 	orr.w	r0, r0, r2
   89e2c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89e30:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   89e34:	f141 0100 	adc.w	r1, r1, #0
   89e38:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89e3c:	bf08      	it	eq
   89e3e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   89e42:	bd70      	pop	{r4, r5, r6, pc}
   89e44:	f1c4 0520 	rsb	r5, r4, #32
   89e48:	fa00 f205 	lsl.w	r2, r0, r5
   89e4c:	ea4e 0e02 	orr.w	lr, lr, r2
   89e50:	fa20 f304 	lsr.w	r3, r0, r4
   89e54:	fa01 f205 	lsl.w	r2, r1, r5
   89e58:	ea43 0302 	orr.w	r3, r3, r2
   89e5c:	fa21 f004 	lsr.w	r0, r1, r4
   89e60:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89e64:	fa21 f204 	lsr.w	r2, r1, r4
   89e68:	ea20 0002 	bic.w	r0, r0, r2
   89e6c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   89e70:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89e74:	bf08      	it	eq
   89e76:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   89e7a:	bd70      	pop	{r4, r5, r6, pc}
   89e7c:	f094 0f00 	teq	r4, #0
   89e80:	d10f      	bne.n	89ea2 <__aeabi_dmul+0x1c2>
   89e82:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   89e86:	0040      	lsls	r0, r0, #1
   89e88:	eb41 0101 	adc.w	r1, r1, r1
   89e8c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   89e90:	bf08      	it	eq
   89e92:	3c01      	subeq	r4, #1
   89e94:	d0f7      	beq.n	89e86 <__aeabi_dmul+0x1a6>
   89e96:	ea41 0106 	orr.w	r1, r1, r6
   89e9a:	f095 0f00 	teq	r5, #0
   89e9e:	bf18      	it	ne
   89ea0:	4770      	bxne	lr
   89ea2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   89ea6:	0052      	lsls	r2, r2, #1
   89ea8:	eb43 0303 	adc.w	r3, r3, r3
   89eac:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   89eb0:	bf08      	it	eq
   89eb2:	3d01      	subeq	r5, #1
   89eb4:	d0f7      	beq.n	89ea6 <__aeabi_dmul+0x1c6>
   89eb6:	ea43 0306 	orr.w	r3, r3, r6
   89eba:	4770      	bx	lr
   89ebc:	ea94 0f0c 	teq	r4, ip
   89ec0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   89ec4:	bf18      	it	ne
   89ec6:	ea95 0f0c 	teqne	r5, ip
   89eca:	d00c      	beq.n	89ee6 <__aeabi_dmul+0x206>
   89ecc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   89ed0:	bf18      	it	ne
   89ed2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   89ed6:	d1d1      	bne.n	89e7c <__aeabi_dmul+0x19c>
   89ed8:	ea81 0103 	eor.w	r1, r1, r3
   89edc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89ee0:	f04f 0000 	mov.w	r0, #0
   89ee4:	bd70      	pop	{r4, r5, r6, pc}
   89ee6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   89eea:	bf06      	itte	eq
   89eec:	4610      	moveq	r0, r2
   89eee:	4619      	moveq	r1, r3
   89ef0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   89ef4:	d019      	beq.n	89f2a <__aeabi_dmul+0x24a>
   89ef6:	ea94 0f0c 	teq	r4, ip
   89efa:	d102      	bne.n	89f02 <__aeabi_dmul+0x222>
   89efc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   89f00:	d113      	bne.n	89f2a <__aeabi_dmul+0x24a>
   89f02:	ea95 0f0c 	teq	r5, ip
   89f06:	d105      	bne.n	89f14 <__aeabi_dmul+0x234>
   89f08:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   89f0c:	bf1c      	itt	ne
   89f0e:	4610      	movne	r0, r2
   89f10:	4619      	movne	r1, r3
   89f12:	d10a      	bne.n	89f2a <__aeabi_dmul+0x24a>
   89f14:	ea81 0103 	eor.w	r1, r1, r3
   89f18:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89f1c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   89f20:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   89f24:	f04f 0000 	mov.w	r0, #0
   89f28:	bd70      	pop	{r4, r5, r6, pc}
   89f2a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   89f2e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   89f32:	bd70      	pop	{r4, r5, r6, pc}

00089f34 <__aeabi_ddiv>:
   89f34:	b570      	push	{r4, r5, r6, lr}
   89f36:	f04f 0cff 	mov.w	ip, #255	; 0xff
   89f3a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   89f3e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   89f42:	bf1d      	ittte	ne
   89f44:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   89f48:	ea94 0f0c 	teqne	r4, ip
   89f4c:	ea95 0f0c 	teqne	r5, ip
   89f50:	f000 f8a7 	bleq	8a0a2 <__aeabi_ddiv+0x16e>
   89f54:	eba4 0405 	sub.w	r4, r4, r5
   89f58:	ea81 0e03 	eor.w	lr, r1, r3
   89f5c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   89f60:	ea4f 3101 	mov.w	r1, r1, lsl #12
   89f64:	f000 8088 	beq.w	8a078 <__aeabi_ddiv+0x144>
   89f68:	ea4f 3303 	mov.w	r3, r3, lsl #12
   89f6c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   89f70:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   89f74:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   89f78:	ea4f 2202 	mov.w	r2, r2, lsl #8
   89f7c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   89f80:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   89f84:	ea4f 2600 	mov.w	r6, r0, lsl #8
   89f88:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   89f8c:	429d      	cmp	r5, r3
   89f8e:	bf08      	it	eq
   89f90:	4296      	cmpeq	r6, r2
   89f92:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   89f96:	f504 7440 	add.w	r4, r4, #768	; 0x300
   89f9a:	d202      	bcs.n	89fa2 <__aeabi_ddiv+0x6e>
   89f9c:	085b      	lsrs	r3, r3, #1
   89f9e:	ea4f 0232 	mov.w	r2, r2, rrx
   89fa2:	1ab6      	subs	r6, r6, r2
   89fa4:	eb65 0503 	sbc.w	r5, r5, r3
   89fa8:	085b      	lsrs	r3, r3, #1
   89faa:	ea4f 0232 	mov.w	r2, r2, rrx
   89fae:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   89fb2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   89fb6:	ebb6 0e02 	subs.w	lr, r6, r2
   89fba:	eb75 0e03 	sbcs.w	lr, r5, r3
   89fbe:	bf22      	ittt	cs
   89fc0:	1ab6      	subcs	r6, r6, r2
   89fc2:	4675      	movcs	r5, lr
   89fc4:	ea40 000c 	orrcs.w	r0, r0, ip
   89fc8:	085b      	lsrs	r3, r3, #1
   89fca:	ea4f 0232 	mov.w	r2, r2, rrx
   89fce:	ebb6 0e02 	subs.w	lr, r6, r2
   89fd2:	eb75 0e03 	sbcs.w	lr, r5, r3
   89fd6:	bf22      	ittt	cs
   89fd8:	1ab6      	subcs	r6, r6, r2
   89fda:	4675      	movcs	r5, lr
   89fdc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   89fe0:	085b      	lsrs	r3, r3, #1
   89fe2:	ea4f 0232 	mov.w	r2, r2, rrx
   89fe6:	ebb6 0e02 	subs.w	lr, r6, r2
   89fea:	eb75 0e03 	sbcs.w	lr, r5, r3
   89fee:	bf22      	ittt	cs
   89ff0:	1ab6      	subcs	r6, r6, r2
   89ff2:	4675      	movcs	r5, lr
   89ff4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   89ff8:	085b      	lsrs	r3, r3, #1
   89ffa:	ea4f 0232 	mov.w	r2, r2, rrx
   89ffe:	ebb6 0e02 	subs.w	lr, r6, r2
   8a002:	eb75 0e03 	sbcs.w	lr, r5, r3
   8a006:	bf22      	ittt	cs
   8a008:	1ab6      	subcs	r6, r6, r2
   8a00a:	4675      	movcs	r5, lr
   8a00c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   8a010:	ea55 0e06 	orrs.w	lr, r5, r6
   8a014:	d018      	beq.n	8a048 <__aeabi_ddiv+0x114>
   8a016:	ea4f 1505 	mov.w	r5, r5, lsl #4
   8a01a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8a01e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8a022:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8a026:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   8a02a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8a02e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8a032:	d1c0      	bne.n	89fb6 <__aeabi_ddiv+0x82>
   8a034:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8a038:	d10b      	bne.n	8a052 <__aeabi_ddiv+0x11e>
   8a03a:	ea41 0100 	orr.w	r1, r1, r0
   8a03e:	f04f 0000 	mov.w	r0, #0
   8a042:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8a046:	e7b6      	b.n	89fb6 <__aeabi_ddiv+0x82>
   8a048:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8a04c:	bf04      	itt	eq
   8a04e:	4301      	orreq	r1, r0
   8a050:	2000      	moveq	r0, #0
   8a052:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8a056:	bf88      	it	hi
   8a058:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8a05c:	f63f aeaf 	bhi.w	89dbe <__aeabi_dmul+0xde>
   8a060:	ebb5 0c03 	subs.w	ip, r5, r3
   8a064:	bf04      	itt	eq
   8a066:	ebb6 0c02 	subseq.w	ip, r6, r2
   8a06a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8a06e:	f150 0000 	adcs.w	r0, r0, #0
   8a072:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8a076:	bd70      	pop	{r4, r5, r6, pc}
   8a078:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   8a07c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   8a080:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8a084:	bfc2      	ittt	gt
   8a086:	ebd4 050c 	rsbsgt	r5, r4, ip
   8a08a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8a08e:	bd70      	popgt	{r4, r5, r6, pc}
   8a090:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8a094:	f04f 0e00 	mov.w	lr, #0
   8a098:	3c01      	subs	r4, #1
   8a09a:	e690      	b.n	89dbe <__aeabi_dmul+0xde>
   8a09c:	ea45 0e06 	orr.w	lr, r5, r6
   8a0a0:	e68d      	b.n	89dbe <__aeabi_dmul+0xde>
   8a0a2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8a0a6:	ea94 0f0c 	teq	r4, ip
   8a0aa:	bf08      	it	eq
   8a0ac:	ea95 0f0c 	teqeq	r5, ip
   8a0b0:	f43f af3b 	beq.w	89f2a <__aeabi_dmul+0x24a>
   8a0b4:	ea94 0f0c 	teq	r4, ip
   8a0b8:	d10a      	bne.n	8a0d0 <__aeabi_ddiv+0x19c>
   8a0ba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8a0be:	f47f af34 	bne.w	89f2a <__aeabi_dmul+0x24a>
   8a0c2:	ea95 0f0c 	teq	r5, ip
   8a0c6:	f47f af25 	bne.w	89f14 <__aeabi_dmul+0x234>
   8a0ca:	4610      	mov	r0, r2
   8a0cc:	4619      	mov	r1, r3
   8a0ce:	e72c      	b.n	89f2a <__aeabi_dmul+0x24a>
   8a0d0:	ea95 0f0c 	teq	r5, ip
   8a0d4:	d106      	bne.n	8a0e4 <__aeabi_ddiv+0x1b0>
   8a0d6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8a0da:	f43f aefd 	beq.w	89ed8 <__aeabi_dmul+0x1f8>
   8a0de:	4610      	mov	r0, r2
   8a0e0:	4619      	mov	r1, r3
   8a0e2:	e722      	b.n	89f2a <__aeabi_dmul+0x24a>
   8a0e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8a0e8:	bf18      	it	ne
   8a0ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8a0ee:	f47f aec5 	bne.w	89e7c <__aeabi_dmul+0x19c>
   8a0f2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8a0f6:	f47f af0d 	bne.w	89f14 <__aeabi_dmul+0x234>
   8a0fa:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8a0fe:	f47f aeeb 	bne.w	89ed8 <__aeabi_dmul+0x1f8>
   8a102:	e712      	b.n	89f2a <__aeabi_dmul+0x24a>

0008a104 <__gedf2>:
   8a104:	f04f 3cff 	mov.w	ip, #4294967295
   8a108:	e006      	b.n	8a118 <__cmpdf2+0x4>
   8a10a:	bf00      	nop

0008a10c <__ledf2>:
   8a10c:	f04f 0c01 	mov.w	ip, #1
   8a110:	e002      	b.n	8a118 <__cmpdf2+0x4>
   8a112:	bf00      	nop

0008a114 <__cmpdf2>:
   8a114:	f04f 0c01 	mov.w	ip, #1
   8a118:	f84d cd04 	str.w	ip, [sp, #-4]!
   8a11c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8a120:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a124:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8a128:	bf18      	it	ne
   8a12a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8a12e:	d01b      	beq.n	8a168 <__cmpdf2+0x54>
   8a130:	b001      	add	sp, #4
   8a132:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8a136:	bf0c      	ite	eq
   8a138:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   8a13c:	ea91 0f03 	teqne	r1, r3
   8a140:	bf02      	ittt	eq
   8a142:	ea90 0f02 	teqeq	r0, r2
   8a146:	2000      	moveq	r0, #0
   8a148:	4770      	bxeq	lr
   8a14a:	f110 0f00 	cmn.w	r0, #0
   8a14e:	ea91 0f03 	teq	r1, r3
   8a152:	bf58      	it	pl
   8a154:	4299      	cmppl	r1, r3
   8a156:	bf08      	it	eq
   8a158:	4290      	cmpeq	r0, r2
   8a15a:	bf2c      	ite	cs
   8a15c:	17d8      	asrcs	r0, r3, #31
   8a15e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8a162:	f040 0001 	orr.w	r0, r0, #1
   8a166:	4770      	bx	lr
   8a168:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8a16c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a170:	d102      	bne.n	8a178 <__cmpdf2+0x64>
   8a172:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8a176:	d107      	bne.n	8a188 <__cmpdf2+0x74>
   8a178:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8a17c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a180:	d1d6      	bne.n	8a130 <__cmpdf2+0x1c>
   8a182:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8a186:	d0d3      	beq.n	8a130 <__cmpdf2+0x1c>
   8a188:	f85d 0b04 	ldr.w	r0, [sp], #4
   8a18c:	4770      	bx	lr
   8a18e:	bf00      	nop

0008a190 <__aeabi_cdrcmple>:
   8a190:	4684      	mov	ip, r0
   8a192:	4610      	mov	r0, r2
   8a194:	4662      	mov	r2, ip
   8a196:	468c      	mov	ip, r1
   8a198:	4619      	mov	r1, r3
   8a19a:	4663      	mov	r3, ip
   8a19c:	e000      	b.n	8a1a0 <__aeabi_cdcmpeq>
   8a19e:	bf00      	nop

0008a1a0 <__aeabi_cdcmpeq>:
   8a1a0:	b501      	push	{r0, lr}
   8a1a2:	f7ff ffb7 	bl	8a114 <__cmpdf2>
   8a1a6:	2800      	cmp	r0, #0
   8a1a8:	bf48      	it	mi
   8a1aa:	f110 0f00 	cmnmi.w	r0, #0
   8a1ae:	bd01      	pop	{r0, pc}

0008a1b0 <__aeabi_dcmpeq>:
   8a1b0:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a1b4:	f7ff fff4 	bl	8a1a0 <__aeabi_cdcmpeq>
   8a1b8:	bf0c      	ite	eq
   8a1ba:	2001      	moveq	r0, #1
   8a1bc:	2000      	movne	r0, #0
   8a1be:	f85d fb08 	ldr.w	pc, [sp], #8
   8a1c2:	bf00      	nop

0008a1c4 <__aeabi_dcmplt>:
   8a1c4:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a1c8:	f7ff ffea 	bl	8a1a0 <__aeabi_cdcmpeq>
   8a1cc:	bf34      	ite	cc
   8a1ce:	2001      	movcc	r0, #1
   8a1d0:	2000      	movcs	r0, #0
   8a1d2:	f85d fb08 	ldr.w	pc, [sp], #8
   8a1d6:	bf00      	nop

0008a1d8 <__aeabi_dcmple>:
   8a1d8:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a1dc:	f7ff ffe0 	bl	8a1a0 <__aeabi_cdcmpeq>
   8a1e0:	bf94      	ite	ls
   8a1e2:	2001      	movls	r0, #1
   8a1e4:	2000      	movhi	r0, #0
   8a1e6:	f85d fb08 	ldr.w	pc, [sp], #8
   8a1ea:	bf00      	nop

0008a1ec <__aeabi_dcmpge>:
   8a1ec:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a1f0:	f7ff ffce 	bl	8a190 <__aeabi_cdrcmple>
   8a1f4:	bf94      	ite	ls
   8a1f6:	2001      	movls	r0, #1
   8a1f8:	2000      	movhi	r0, #0
   8a1fa:	f85d fb08 	ldr.w	pc, [sp], #8
   8a1fe:	bf00      	nop

0008a200 <__aeabi_dcmpgt>:
   8a200:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a204:	f7ff ffc4 	bl	8a190 <__aeabi_cdrcmple>
   8a208:	bf34      	ite	cc
   8a20a:	2001      	movcc	r0, #1
   8a20c:	2000      	movcs	r0, #0
   8a20e:	f85d fb08 	ldr.w	pc, [sp], #8
   8a212:	bf00      	nop

0008a214 <__aeabi_dcmpun>:
   8a214:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8a218:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a21c:	d102      	bne.n	8a224 <__aeabi_dcmpun+0x10>
   8a21e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8a222:	d10a      	bne.n	8a23a <__aeabi_dcmpun+0x26>
   8a224:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8a228:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a22c:	d102      	bne.n	8a234 <__aeabi_dcmpun+0x20>
   8a22e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8a232:	d102      	bne.n	8a23a <__aeabi_dcmpun+0x26>
   8a234:	f04f 0000 	mov.w	r0, #0
   8a238:	4770      	bx	lr
   8a23a:	f04f 0001 	mov.w	r0, #1
   8a23e:	4770      	bx	lr

0008a240 <__aeabi_d2iz>:
   8a240:	ea4f 0241 	mov.w	r2, r1, lsl #1
   8a244:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   8a248:	d215      	bcs.n	8a276 <__aeabi_d2iz+0x36>
   8a24a:	d511      	bpl.n	8a270 <__aeabi_d2iz+0x30>
   8a24c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8a250:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   8a254:	d912      	bls.n	8a27c <__aeabi_d2iz+0x3c>
   8a256:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8a25a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8a25e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8a262:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8a266:	fa23 f002 	lsr.w	r0, r3, r2
   8a26a:	bf18      	it	ne
   8a26c:	4240      	negne	r0, r0
   8a26e:	4770      	bx	lr
   8a270:	f04f 0000 	mov.w	r0, #0
   8a274:	4770      	bx	lr
   8a276:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   8a27a:	d105      	bne.n	8a288 <__aeabi_d2iz+0x48>
   8a27c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8a280:	bf08      	it	eq
   8a282:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   8a286:	4770      	bx	lr
   8a288:	f04f 0000 	mov.w	r0, #0
   8a28c:	4770      	bx	lr
   8a28e:	bf00      	nop

0008a290 <__aeabi_uldivmod>:
   8a290:	b953      	cbnz	r3, 8a2a8 <__aeabi_uldivmod+0x18>
   8a292:	b94a      	cbnz	r2, 8a2a8 <__aeabi_uldivmod+0x18>
   8a294:	2900      	cmp	r1, #0
   8a296:	bf08      	it	eq
   8a298:	2800      	cmpeq	r0, #0
   8a29a:	bf1c      	itt	ne
   8a29c:	f04f 31ff 	movne.w	r1, #4294967295
   8a2a0:	f04f 30ff 	movne.w	r0, #4294967295
   8a2a4:	f000 b976 	b.w	8a594 <__aeabi_idiv0>
   8a2a8:	f1ad 0c08 	sub.w	ip, sp, #8
   8a2ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   8a2b0:	f000 f806 	bl	8a2c0 <__udivmoddi4>
   8a2b4:	f8dd e004 	ldr.w	lr, [sp, #4]
   8a2b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   8a2bc:	b004      	add	sp, #16
   8a2be:	4770      	bx	lr

0008a2c0 <__udivmoddi4>:
   8a2c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8a2c4:	9e08      	ldr	r6, [sp, #32]
   8a2c6:	460d      	mov	r5, r1
   8a2c8:	4604      	mov	r4, r0
   8a2ca:	4688      	mov	r8, r1
   8a2cc:	2b00      	cmp	r3, #0
   8a2ce:	d14d      	bne.n	8a36c <__udivmoddi4+0xac>
   8a2d0:	428a      	cmp	r2, r1
   8a2d2:	4694      	mov	ip, r2
   8a2d4:	d968      	bls.n	8a3a8 <__udivmoddi4+0xe8>
   8a2d6:	fab2 f282 	clz	r2, r2
   8a2da:	b152      	cbz	r2, 8a2f2 <__udivmoddi4+0x32>
   8a2dc:	fa01 f302 	lsl.w	r3, r1, r2
   8a2e0:	f1c2 0120 	rsb	r1, r2, #32
   8a2e4:	fa20 f101 	lsr.w	r1, r0, r1
   8a2e8:	fa0c fc02 	lsl.w	ip, ip, r2
   8a2ec:	ea41 0803 	orr.w	r8, r1, r3
   8a2f0:	4094      	lsls	r4, r2
   8a2f2:	ea4f 411c 	mov.w	r1, ip, lsr #16
   8a2f6:	fbb8 f7f1 	udiv	r7, r8, r1
   8a2fa:	fa1f fe8c 	uxth.w	lr, ip
   8a2fe:	fb01 8817 	mls	r8, r1, r7, r8
   8a302:	fb07 f00e 	mul.w	r0, r7, lr
   8a306:	0c23      	lsrs	r3, r4, #16
   8a308:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8a30c:	4298      	cmp	r0, r3
   8a30e:	d90a      	bls.n	8a326 <__udivmoddi4+0x66>
   8a310:	eb1c 0303 	adds.w	r3, ip, r3
   8a314:	f107 35ff 	add.w	r5, r7, #4294967295
   8a318:	f080 811e 	bcs.w	8a558 <__udivmoddi4+0x298>
   8a31c:	4298      	cmp	r0, r3
   8a31e:	f240 811b 	bls.w	8a558 <__udivmoddi4+0x298>
   8a322:	3f02      	subs	r7, #2
   8a324:	4463      	add	r3, ip
   8a326:	1a1b      	subs	r3, r3, r0
   8a328:	fbb3 f0f1 	udiv	r0, r3, r1
   8a32c:	fb01 3310 	mls	r3, r1, r0, r3
   8a330:	fb00 fe0e 	mul.w	lr, r0, lr
   8a334:	b2a4      	uxth	r4, r4
   8a336:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   8a33a:	45a6      	cmp	lr, r4
   8a33c:	d90a      	bls.n	8a354 <__udivmoddi4+0x94>
   8a33e:	eb1c 0404 	adds.w	r4, ip, r4
   8a342:	f100 33ff 	add.w	r3, r0, #4294967295
   8a346:	f080 8109 	bcs.w	8a55c <__udivmoddi4+0x29c>
   8a34a:	45a6      	cmp	lr, r4
   8a34c:	f240 8106 	bls.w	8a55c <__udivmoddi4+0x29c>
   8a350:	4464      	add	r4, ip
   8a352:	3802      	subs	r0, #2
   8a354:	2100      	movs	r1, #0
   8a356:	eba4 040e 	sub.w	r4, r4, lr
   8a35a:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   8a35e:	b11e      	cbz	r6, 8a368 <__udivmoddi4+0xa8>
   8a360:	2300      	movs	r3, #0
   8a362:	40d4      	lsrs	r4, r2
   8a364:	e9c6 4300 	strd	r4, r3, [r6]
   8a368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8a36c:	428b      	cmp	r3, r1
   8a36e:	d908      	bls.n	8a382 <__udivmoddi4+0xc2>
   8a370:	2e00      	cmp	r6, #0
   8a372:	f000 80ee 	beq.w	8a552 <__udivmoddi4+0x292>
   8a376:	2100      	movs	r1, #0
   8a378:	e9c6 0500 	strd	r0, r5, [r6]
   8a37c:	4608      	mov	r0, r1
   8a37e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8a382:	fab3 f183 	clz	r1, r3
   8a386:	2900      	cmp	r1, #0
   8a388:	d14a      	bne.n	8a420 <__udivmoddi4+0x160>
   8a38a:	42ab      	cmp	r3, r5
   8a38c:	d302      	bcc.n	8a394 <__udivmoddi4+0xd4>
   8a38e:	4282      	cmp	r2, r0
   8a390:	f200 80fc 	bhi.w	8a58c <__udivmoddi4+0x2cc>
   8a394:	1a84      	subs	r4, r0, r2
   8a396:	eb65 0303 	sbc.w	r3, r5, r3
   8a39a:	2001      	movs	r0, #1
   8a39c:	4698      	mov	r8, r3
   8a39e:	2e00      	cmp	r6, #0
   8a3a0:	d0e2      	beq.n	8a368 <__udivmoddi4+0xa8>
   8a3a2:	e9c6 4800 	strd	r4, r8, [r6]
   8a3a6:	e7df      	b.n	8a368 <__udivmoddi4+0xa8>
   8a3a8:	b902      	cbnz	r2, 8a3ac <__udivmoddi4+0xec>
   8a3aa:	deff      	udf	#255	; 0xff
   8a3ac:	fab2 f282 	clz	r2, r2
   8a3b0:	2a00      	cmp	r2, #0
   8a3b2:	f040 8091 	bne.w	8a4d8 <__udivmoddi4+0x218>
   8a3b6:	eba1 000c 	sub.w	r0, r1, ip
   8a3ba:	2101      	movs	r1, #1
   8a3bc:	ea4f 471c 	mov.w	r7, ip, lsr #16
   8a3c0:	fa1f fe8c 	uxth.w	lr, ip
   8a3c4:	fbb0 f3f7 	udiv	r3, r0, r7
   8a3c8:	fb07 0013 	mls	r0, r7, r3, r0
   8a3cc:	0c25      	lsrs	r5, r4, #16
   8a3ce:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   8a3d2:	fb0e f003 	mul.w	r0, lr, r3
   8a3d6:	42a8      	cmp	r0, r5
   8a3d8:	d908      	bls.n	8a3ec <__udivmoddi4+0x12c>
   8a3da:	eb1c 0505 	adds.w	r5, ip, r5
   8a3de:	f103 38ff 	add.w	r8, r3, #4294967295
   8a3e2:	d202      	bcs.n	8a3ea <__udivmoddi4+0x12a>
   8a3e4:	42a8      	cmp	r0, r5
   8a3e6:	f200 80ce 	bhi.w	8a586 <__udivmoddi4+0x2c6>
   8a3ea:	4643      	mov	r3, r8
   8a3ec:	1a2d      	subs	r5, r5, r0
   8a3ee:	fbb5 f0f7 	udiv	r0, r5, r7
   8a3f2:	fb07 5510 	mls	r5, r7, r0, r5
   8a3f6:	fb0e fe00 	mul.w	lr, lr, r0
   8a3fa:	b2a4      	uxth	r4, r4
   8a3fc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   8a400:	45a6      	cmp	lr, r4
   8a402:	d908      	bls.n	8a416 <__udivmoddi4+0x156>
   8a404:	eb1c 0404 	adds.w	r4, ip, r4
   8a408:	f100 35ff 	add.w	r5, r0, #4294967295
   8a40c:	d202      	bcs.n	8a414 <__udivmoddi4+0x154>
   8a40e:	45a6      	cmp	lr, r4
   8a410:	f200 80b6 	bhi.w	8a580 <__udivmoddi4+0x2c0>
   8a414:	4628      	mov	r0, r5
   8a416:	eba4 040e 	sub.w	r4, r4, lr
   8a41a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   8a41e:	e79e      	b.n	8a35e <__udivmoddi4+0x9e>
   8a420:	f1c1 0720 	rsb	r7, r1, #32
   8a424:	408b      	lsls	r3, r1
   8a426:	fa22 fc07 	lsr.w	ip, r2, r7
   8a42a:	ea4c 0c03 	orr.w	ip, ip, r3
   8a42e:	fa25 fa07 	lsr.w	sl, r5, r7
   8a432:	ea4f 491c 	mov.w	r9, ip, lsr #16
   8a436:	fbba f8f9 	udiv	r8, sl, r9
   8a43a:	fa20 f307 	lsr.w	r3, r0, r7
   8a43e:	fb09 aa18 	mls	sl, r9, r8, sl
   8a442:	408d      	lsls	r5, r1
   8a444:	fa1f fe8c 	uxth.w	lr, ip
   8a448:	431d      	orrs	r5, r3
   8a44a:	fa00 f301 	lsl.w	r3, r0, r1
   8a44e:	fb08 f00e 	mul.w	r0, r8, lr
   8a452:	0c2c      	lsrs	r4, r5, #16
   8a454:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
   8a458:	42a0      	cmp	r0, r4
   8a45a:	fa02 f201 	lsl.w	r2, r2, r1
   8a45e:	d90b      	bls.n	8a478 <__udivmoddi4+0x1b8>
   8a460:	eb1c 0404 	adds.w	r4, ip, r4
   8a464:	f108 3aff 	add.w	sl, r8, #4294967295
   8a468:	f080 8088 	bcs.w	8a57c <__udivmoddi4+0x2bc>
   8a46c:	42a0      	cmp	r0, r4
   8a46e:	f240 8085 	bls.w	8a57c <__udivmoddi4+0x2bc>
   8a472:	f1a8 0802 	sub.w	r8, r8, #2
   8a476:	4464      	add	r4, ip
   8a478:	1a24      	subs	r4, r4, r0
   8a47a:	fbb4 f0f9 	udiv	r0, r4, r9
   8a47e:	fb09 4410 	mls	r4, r9, r0, r4
   8a482:	fb00 fe0e 	mul.w	lr, r0, lr
   8a486:	b2ad      	uxth	r5, r5
   8a488:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
   8a48c:	45a6      	cmp	lr, r4
   8a48e:	d908      	bls.n	8a4a2 <__udivmoddi4+0x1e2>
   8a490:	eb1c 0404 	adds.w	r4, ip, r4
   8a494:	f100 35ff 	add.w	r5, r0, #4294967295
   8a498:	d26c      	bcs.n	8a574 <__udivmoddi4+0x2b4>
   8a49a:	45a6      	cmp	lr, r4
   8a49c:	d96a      	bls.n	8a574 <__udivmoddi4+0x2b4>
   8a49e:	3802      	subs	r0, #2
   8a4a0:	4464      	add	r4, ip
   8a4a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
   8a4a6:	fba0 9502 	umull	r9, r5, r0, r2
   8a4aa:	eba4 040e 	sub.w	r4, r4, lr
   8a4ae:	42ac      	cmp	r4, r5
   8a4b0:	46c8      	mov	r8, r9
   8a4b2:	46ae      	mov	lr, r5
   8a4b4:	d356      	bcc.n	8a564 <__udivmoddi4+0x2a4>
   8a4b6:	d053      	beq.n	8a560 <__udivmoddi4+0x2a0>
   8a4b8:	2e00      	cmp	r6, #0
   8a4ba:	d069      	beq.n	8a590 <__udivmoddi4+0x2d0>
   8a4bc:	ebb3 0208 	subs.w	r2, r3, r8
   8a4c0:	eb64 040e 	sbc.w	r4, r4, lr
   8a4c4:	fa22 f301 	lsr.w	r3, r2, r1
   8a4c8:	fa04 f707 	lsl.w	r7, r4, r7
   8a4cc:	431f      	orrs	r7, r3
   8a4ce:	40cc      	lsrs	r4, r1
   8a4d0:	e9c6 7400 	strd	r7, r4, [r6]
   8a4d4:	2100      	movs	r1, #0
   8a4d6:	e747      	b.n	8a368 <__udivmoddi4+0xa8>
   8a4d8:	fa0c fc02 	lsl.w	ip, ip, r2
   8a4dc:	f1c2 0120 	rsb	r1, r2, #32
   8a4e0:	fa25 f301 	lsr.w	r3, r5, r1
   8a4e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
   8a4e8:	fa20 f101 	lsr.w	r1, r0, r1
   8a4ec:	4095      	lsls	r5, r2
   8a4ee:	430d      	orrs	r5, r1
   8a4f0:	fbb3 f1f7 	udiv	r1, r3, r7
   8a4f4:	fb07 3311 	mls	r3, r7, r1, r3
   8a4f8:	fa1f fe8c 	uxth.w	lr, ip
   8a4fc:	0c28      	lsrs	r0, r5, #16
   8a4fe:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   8a502:	fb01 f30e 	mul.w	r3, r1, lr
   8a506:	4283      	cmp	r3, r0
   8a508:	fa04 f402 	lsl.w	r4, r4, r2
   8a50c:	d908      	bls.n	8a520 <__udivmoddi4+0x260>
   8a50e:	eb1c 0000 	adds.w	r0, ip, r0
   8a512:	f101 38ff 	add.w	r8, r1, #4294967295
   8a516:	d22f      	bcs.n	8a578 <__udivmoddi4+0x2b8>
   8a518:	4283      	cmp	r3, r0
   8a51a:	d92d      	bls.n	8a578 <__udivmoddi4+0x2b8>
   8a51c:	3902      	subs	r1, #2
   8a51e:	4460      	add	r0, ip
   8a520:	1ac0      	subs	r0, r0, r3
   8a522:	fbb0 f3f7 	udiv	r3, r0, r7
   8a526:	fb07 0013 	mls	r0, r7, r3, r0
   8a52a:	b2ad      	uxth	r5, r5
   8a52c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   8a530:	fb03 f00e 	mul.w	r0, r3, lr
   8a534:	42a8      	cmp	r0, r5
   8a536:	d908      	bls.n	8a54a <__udivmoddi4+0x28a>
   8a538:	eb1c 0505 	adds.w	r5, ip, r5
   8a53c:	f103 38ff 	add.w	r8, r3, #4294967295
   8a540:	d216      	bcs.n	8a570 <__udivmoddi4+0x2b0>
   8a542:	42a8      	cmp	r0, r5
   8a544:	d914      	bls.n	8a570 <__udivmoddi4+0x2b0>
   8a546:	3b02      	subs	r3, #2
   8a548:	4465      	add	r5, ip
   8a54a:	1a28      	subs	r0, r5, r0
   8a54c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   8a550:	e738      	b.n	8a3c4 <__udivmoddi4+0x104>
   8a552:	4631      	mov	r1, r6
   8a554:	4630      	mov	r0, r6
   8a556:	e707      	b.n	8a368 <__udivmoddi4+0xa8>
   8a558:	462f      	mov	r7, r5
   8a55a:	e6e4      	b.n	8a326 <__udivmoddi4+0x66>
   8a55c:	4618      	mov	r0, r3
   8a55e:	e6f9      	b.n	8a354 <__udivmoddi4+0x94>
   8a560:	454b      	cmp	r3, r9
   8a562:	d2a9      	bcs.n	8a4b8 <__udivmoddi4+0x1f8>
   8a564:	ebb9 0802 	subs.w	r8, r9, r2
   8a568:	eb65 0e0c 	sbc.w	lr, r5, ip
   8a56c:	3801      	subs	r0, #1
   8a56e:	e7a3      	b.n	8a4b8 <__udivmoddi4+0x1f8>
   8a570:	4643      	mov	r3, r8
   8a572:	e7ea      	b.n	8a54a <__udivmoddi4+0x28a>
   8a574:	4628      	mov	r0, r5
   8a576:	e794      	b.n	8a4a2 <__udivmoddi4+0x1e2>
   8a578:	4641      	mov	r1, r8
   8a57a:	e7d1      	b.n	8a520 <__udivmoddi4+0x260>
   8a57c:	46d0      	mov	r8, sl
   8a57e:	e77b      	b.n	8a478 <__udivmoddi4+0x1b8>
   8a580:	4464      	add	r4, ip
   8a582:	3802      	subs	r0, #2
   8a584:	e747      	b.n	8a416 <__udivmoddi4+0x156>
   8a586:	3b02      	subs	r3, #2
   8a588:	4465      	add	r5, ip
   8a58a:	e72f      	b.n	8a3ec <__udivmoddi4+0x12c>
   8a58c:	4608      	mov	r0, r1
   8a58e:	e706      	b.n	8a39e <__udivmoddi4+0xde>
   8a590:	4631      	mov	r1, r6
   8a592:	e6e9      	b.n	8a368 <__udivmoddi4+0xa8>

0008a594 <__aeabi_idiv0>:
   8a594:	4770      	bx	lr
   8a596:	bf00      	nop
   8a598:	78383025 	.word	0x78383025
   8a59c:	00000000 	.word	0x00000000

0008a5a0 <BUILD_DATE>:
   8a5a0:	20677541 32203033 00323230              Aug 30 2022.

0008a5ac <BUILD_TIME>:
   8a5ac:	323a3331 36353a36 00000000 00000000     13:26:56........
   8a5bc:	00000000 aaaaaa00 aaaaaaaa eeeeeeaa     ................
   8a5cc:	eeeeeeee fffffeee ffffffff ffffffff     ................
   8a5dc:	dfbf7fff fdfbf7ef dfbf7efc fdfbf7ef     .........~......
   8a5ec:	0000007e 74697845 20676e69 68746977     ~...Exiting with
   8a5fc:	61747320 20737574 0a2e6425 00000000      status %d......

0008a60c <_global_impure_ptr>:
   8a60c:	200003a8 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   8a61c:	006e616e 33323130 37363534 62613938     nan.0123456789ab
   8a62c:	66656463 00000000 33323130 37363534     cdef....01234567
   8a63c:	42413938 46454443 00000000 6c756e28     89ABCDEF....(nul
   8a64c:	0000296c 00000030                       l)..0...

0008a654 <blanks.1>:
   8a654:	20202020 20202020 20202020 20202020                     

0008a664 <zeroes.0>:
   8a664:	30303030 30303030 30303030 30303030     0000000000000000

0008a674 <blanks.1>:
   8a674:	20202020 20202020 20202020 20202020                     

0008a684 <zeroes.0>:
   8a684:	30303030 30303030 30303030 30303030     0000000000000000
   8a694:	004e614e 69666e49 7974696e 00000000     NaN.Infinity....
   8a6a4:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
   8a6b4:	00000000 746e6d2f 726f772f 6170736b     ..../mnt/workspa
   8a6c4:	772f6563 736b726f 65636170 4343472f     ce/workspace/GCC
   8a6d4:	2d30312d 65706970 656e696c 6e656a2f     -10-pipeline/jen
   8a6e4:	736e696b 4343472d 2d30312d 65706970     kins-GCC-10-pipe
   8a6f4:	656e696c 3833332d 3230325f 31303131     line-338_2021101
   8a704:	36315f38 31353433 33303236 6372732f     8_1634516203/src
   8a714:	77656e2f 2f62696c 6c77656e 6c2f6269     /newlib/newlib/l
   8a724:	2f636269 6c647473 642f6269 2e616f74     ibc/stdlib/dtoa.
   8a734:	00000063 00000043 49534f50 00000058     c...C...POSIX...
   8a744:	0000002e 746e6d2f 726f772f 6170736b     ..../mnt/workspa
   8a754:	772f6563 736b726f 65636170 4343472f     ce/workspace/GCC
   8a764:	2d30312d 65706970 656e696c 6e656a2f     -10-pipeline/jen
   8a774:	736e696b 4343472d 2d30312d 65706970     kins-GCC-10-pipe
   8a784:	656e696c 3833332d 3230325f 31303131     line-338_2021101
   8a794:	36315f38 31353433 33303236 6372732f     8_1634516203/src
   8a7a4:	77656e2f 2f62696c 6c77656e 6c2f6269     /newlib/newlib/l
   8a7b4:	2f636269 6c647473 6d2f6269 63657270     ibc/stdlib/mprec
   8a7c4:	0000632e                                .c..

0008a7c8 <__mprec_bigtens>:
   8a7c8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   8a7d8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   8a7e8:	7f73bf3c 75154fdd                       <.s..O.u

0008a7f0 <__mprec_tens>:
   8a7f0:	00000000 3ff00000 00000000 40240000     .......?......$@
   8a800:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   8a810:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   8a820:	00000000 412e8480 00000000 416312d0     .......A......cA
   8a830:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   8a840:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   8a850:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   8a860:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   8a870:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   8a880:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   8a890:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   8a8a0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   8a8b0:	79d99db4 44ea7843                       ...yCx.D

0008a8b8 <p05.0>:
   8a8b8:	00000005 00000019 0000007d 7566202c     ........}..., fu
   8a8c8:	6974636e 203a6e6f 00000000 65737361     nction: ....asse
   8a8d8:	6f697472 2522206e 66202273 656c6961     rtion "%s" faile
   8a8e8:	66203a64 20656c69 22732522 696c202c     d: file "%s", li
   8a8f8:	2520656e 25732564 00000a73              ne %d%s%s...

0008a904 <_ctype_>:
   8a904:	20202000 20202020 28282020 20282828     .         ((((( 
   8a914:	20202020 20202020 20202020 20202020                     
   8a924:	10108820 10101010 10101010 10101010      ...............
   8a934:	04040410 04040404 10040404 10101010     ................
   8a944:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8a954:	01010101 01010101 01010101 10101010     ................
   8a964:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8a974:	02020202 02020202 02020202 10101010     ................
   8a984:	00000020 00000000 00000000 00000000      ...............
   8a994:	00000000 00000000 00000000 00000000     ................
   8a9a4:	00000000 00000000 00000000 00000000     ................
   8a9b4:	00000000 00000000 00000000 00000000     ................
   8a9c4:	00000000 00000000 00000000 00000000     ................
   8a9d4:	00000000 00000000 00000000 00000000     ................
   8a9e4:	00000000 00000000 00000000 00000000     ................
   8a9f4:	00000000 00000000 00000000 00000000     ................
   8aa04:	00000000                                ....

0008aa08 <_init>:
   8aa08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8aa0a:	bf00      	nop
   8aa0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8aa0e:	bc08      	pop	{r3}
   8aa10:	469e      	mov	lr, r3
   8aa12:	4770      	bx	lr

0008aa14 <__init_array_start>:
   8aa14:	00086551 	.word	0x00086551

0008aa18 <__frame_dummy_init_array_entry>:
   8aa18:	000800e1                                ....

0008aa1c <_fini>:
   8aa1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8aa1e:	bf00      	nop
   8aa20:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8aa22:	bc08      	pop	{r3}
   8aa24:	469e      	mov	lr, r3
   8aa26:	4770      	bx	lr

0008aa28 <__do_global_dtors_aux_fini_array_entry>:
   8aa28:	00bd 0008                                   ....

Disassembly of section .relocate:

20000000 <efc_perform_read_sequence>:
__no_inline
RAMFUNC
uint32_t efc_perform_read_sequence(Efc *p_efc,
		uint32_t ul_cmd_st, uint32_t ul_cmd_sp,
		uint32_t *p_ul_buf, uint32_t ul_size)
{
20000000:	b510      	push	{r4, lr}
20000002:	b082      	sub	sp, #8
20000004:	9c04      	ldr	r4, [sp, #16]
	uint32_t *p_ul_data = (uint32_t *) READ_BUFF_ADDR;
#else
	return EFC_RC_NOT_SUPPORT;
#endif

	if (p_ul_buf == NULL) {
20000006:	b393      	cbz	r3, 2000006e <efc_perform_read_sequence+0x6e>
20000008:	4684      	mov	ip, r0
		return EFC_RC_INVALID;
	}

	p_efc->EEFC_FMR |= (0x1u << 16);
2000000a:	6800      	ldr	r0, [r0, #0]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
	p_efc->EEFC_FCR = EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
#else
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
2000000c:	b2c9      	uxtb	r1, r1
2000000e:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
	p_efc->EEFC_FMR |= (0x1u << 16);
20000012:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
20000016:	f8cc 0000 	str.w	r0, [ip]
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
2000001a:	f8cc 1004 	str.w	r1, [ip, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register
	 * (EEFC_FSR) falls.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
2000001e:	f8dc 1008 	ldr.w	r1, [ip, #8]
20000022:	9101      	str	r1, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) == EEFC_FSR_FRDY);
20000024:	9801      	ldr	r0, [sp, #4]
20000026:	f010 0001 	ands.w	r0, r0, #1
2000002a:	d1f8      	bne.n	2000001e <efc_perform_read_sequence+0x1e>

	/* The data is located in the first address of the Flash
	 * memory mapping.
	 */
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
2000002c:	b164      	cbz	r4, 20000048 <efc_perform_read_sequence+0x48>
2000002e:	eb03 0e84 	add.w	lr, r3, r4, lsl #2
20000032:	f5c3 2400 	rsb	r4, r3, #524288	; 0x80000
20000036:	f1ae 0e04 	sub.w	lr, lr, #4
2000003a:	3b04      	subs	r3, #4
2000003c:	3404      	adds	r4, #4
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
2000003e:	58e1      	ldr	r1, [r4, r3]
20000040:	f843 1f04 	str.w	r1, [r3, #4]!
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
20000044:	4573      	cmp	r3, lr
20000046:	d1fa      	bne.n	2000003e <efc_perform_read_sequence+0x3e>
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
#else
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
20000048:	b2d2      	uxtb	r2, r2
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
2000004a:	f042 42b4 	orr.w	r2, r2, #1509949440	; 0x5a000000
	p_efc->EEFC_FCR =
2000004e:	f8cc 2004 	str.w	r2, [ip, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register (EEFC_FSR)
	 * rises.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
20000052:	f8dc 3008 	ldr.w	r3, [ip, #8]
20000056:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
20000058:	9b01      	ldr	r3, [sp, #4]
2000005a:	07db      	lsls	r3, r3, #31
2000005c:	d5f9      	bpl.n	20000052 <efc_perform_read_sequence+0x52>

	p_efc->EEFC_FMR &= ~(0x1u << 16);
2000005e:	f8dc 3000 	ldr.w	r3, [ip]
20000062:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
20000066:	f8cc 3000 	str.w	r3, [ip]

	return EFC_RC_OK;
}
2000006a:	b002      	add	sp, #8
2000006c:	bd10      	pop	{r4, pc}
		return EFC_RC_INVALID;
2000006e:	2002      	movs	r0, #2
}
20000070:	b002      	add	sp, #8
20000072:	bd10      	pop	{r4, pc}

20000074 <efc_write_fmr>:
 */
__no_inline
RAMFUNC
void efc_write_fmr(Efc *p_efc, uint32_t ul_fmr)
{
	p_efc->EEFC_FMR = ul_fmr;
20000074:	6001      	str	r1, [r0, #0]
}
20000076:	4770      	bx	lr

20000078 <efc_perform_fcr>:
 * \return The current status.
 */
__no_inline
RAMFUNC
uint32_t efc_perform_fcr(Efc *p_efc, uint32_t ul_fcr)
{
20000078:	b082      	sub	sp, #8
	volatile uint32_t ul_status;

	p_efc->EEFC_FCR = ul_fcr;
2000007a:	6041      	str	r1, [r0, #4]
	do {
		ul_status = p_efc->EEFC_FSR;
2000007c:	6883      	ldr	r3, [r0, #8]
2000007e:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
20000080:	9b01      	ldr	r3, [sp, #4]
20000082:	07db      	lsls	r3, r3, #31
20000084:	d5fa      	bpl.n	2000007c <efc_perform_fcr+0x4>

	return (ul_status & EEFC_ERROR_FLAGS);
20000086:	9801      	ldr	r0, [sp, #4]
}
20000088:	f000 0006 	and.w	r0, r0, #6
2000008c:	b002      	add	sp, #8
2000008e:	4770      	bx	lr

20000090 <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000090:	f44f 6380 	mov.w	r3, #1024	; 0x400
20000094:	4819      	ldr	r0, [pc, #100]	; (200000fc <SystemInit+0x6c>)
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20000096:	491a      	ldr	r1, [pc, #104]	; (20000100 <SystemInit+0x70>)
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20000098:	4a1a      	ldr	r2, [pc, #104]	; (20000104 <SystemInit+0x74>)
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2000009a:	6003      	str	r3, [r0, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2000009c:	600b      	str	r3, [r1, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2000009e:	6a13      	ldr	r3, [r2, #32]
200000a0:	01db      	lsls	r3, r3, #7
200000a2:	d404      	bmi.n	200000ae <SystemInit+0x1e>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
200000a4:	4b18      	ldr	r3, [pc, #96]	; (20000108 <SystemInit+0x78>)
200000a6:	6213      	str	r3, [r2, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
200000a8:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000aa:	07d8      	lsls	r0, r3, #31
200000ac:	d5fc      	bpl.n	200000a8 <SystemInit+0x18>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
200000ae:	4a15      	ldr	r2, [pc, #84]	; (20000104 <SystemInit+0x74>)
200000b0:	4b16      	ldr	r3, [pc, #88]	; (2000010c <SystemInit+0x7c>)
200000b2:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
200000b4:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000b6:	03d9      	lsls	r1, r3, #15
200000b8:	d5fc      	bpl.n	200000b4 <SystemInit+0x24>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
200000ba:	6b13      	ldr	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000bc:	4811      	ldr	r0, [pc, #68]	; (20000104 <SystemInit+0x74>)
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
200000be:	f023 0303 	bic.w	r3, r3, #3
200000c2:	f043 0301 	orr.w	r3, r3, #1
200000c6:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000c8:	6e83      	ldr	r3, [r0, #104]	; 0x68
200000ca:	071b      	lsls	r3, r3, #28
200000cc:	d5fc      	bpl.n	200000c8 <SystemInit+0x38>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
200000ce:	4b10      	ldr	r3, [pc, #64]	; (20000110 <SystemInit+0x80>)
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
200000d0:	490c      	ldr	r1, [pc, #48]	; (20000104 <SystemInit+0x74>)
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
200000d2:	6283      	str	r3, [r0, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
200000d4:	6e8b      	ldr	r3, [r1, #104]	; 0x68
200000d6:	0798      	lsls	r0, r3, #30
200000d8:	d5fc      	bpl.n	200000d4 <SystemInit+0x44>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
200000da:	2311      	movs	r3, #17
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000dc:	4a09      	ldr	r2, [pc, #36]	; (20000104 <SystemInit+0x74>)
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
200000de:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000e0:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000e2:	0719      	lsls	r1, r3, #28
200000e4:	d5fc      	bpl.n	200000e0 <SystemInit+0x50>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
200000e6:	2312      	movs	r3, #18
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000e8:	4906      	ldr	r1, [pc, #24]	; (20000104 <SystemInit+0x74>)
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
200000ea:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000ec:	6e8b      	ldr	r3, [r1, #104]	; 0x68
200000ee:	071b      	lsls	r3, r3, #28
200000f0:	d5fc      	bpl.n	200000ec <SystemInit+0x5c>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
200000f2:	4b08      	ldr	r3, [pc, #32]	; (20000114 <SystemInit+0x84>)
200000f4:	4a08      	ldr	r2, [pc, #32]	; (20000118 <SystemInit+0x88>)
200000f6:	601a      	str	r2, [r3, #0]
}
200000f8:	4770      	bx	lr
200000fa:	bf00      	nop
200000fc:	400e0800 	.word	0x400e0800
20000100:	400e0a00 	.word	0x400e0a00
20000104:	400e0400 	.word	0x400e0400
20000108:	00370809 	.word	0x00370809
2000010c:	01370809 	.word	0x01370809
20000110:	200f3f01 	.word	0x200f3f01
20000114:	20000310 	.word	0x20000310
20000118:	05b8d800 	.word	0x05b8d800

2000011c <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
2000011c:	4b14      	ldr	r3, [pc, #80]	; (20000170 <system_init_flash+0x54>)
2000011e:	4298      	cmp	r0, r3
20000120:	d205      	bcs.n	2000012e <system_init_flash+0x12>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
20000122:	2300      	movs	r3, #0
20000124:	4913      	ldr	r1, [pc, #76]	; (20000174 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
20000126:	4a14      	ldr	r2, [pc, #80]	; (20000178 <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
20000128:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
2000012a:	6013      	str	r3, [r2, #0]
2000012c:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
2000012e:	4b13      	ldr	r3, [pc, #76]	; (2000017c <system_init_flash+0x60>)
20000130:	4298      	cmp	r0, r3
20000132:	d206      	bcs.n	20000142 <system_init_flash+0x26>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
20000134:	f44f 7380 	mov.w	r3, #256	; 0x100
20000138:	490e      	ldr	r1, [pc, #56]	; (20000174 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
2000013a:	4a0f      	ldr	r2, [pc, #60]	; (20000178 <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
2000013c:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
2000013e:	6013      	str	r3, [r2, #0]
20000140:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
20000142:	4b0f      	ldr	r3, [pc, #60]	; (20000180 <system_init_flash+0x64>)
20000144:	4298      	cmp	r0, r3
20000146:	d806      	bhi.n	20000156 <system_init_flash+0x3a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20000148:	f44f 7300 	mov.w	r3, #512	; 0x200
2000014c:	4909      	ldr	r1, [pc, #36]	; (20000174 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
2000014e:	4a0a      	ldr	r2, [pc, #40]	; (20000178 <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20000150:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20000152:	6013      	str	r3, [r2, #0]
20000154:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
20000156:	4b0b      	ldr	r3, [pc, #44]	; (20000184 <system_init_flash+0x68>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000158:	4906      	ldr	r1, [pc, #24]	; (20000174 <system_init_flash+0x58>)
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
2000015a:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
2000015c:	bf94      	ite	ls
2000015e:	f44f 7340 	movls.w	r3, #768	; 0x300
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000162:	f44f 6380 	movhi.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20000166:	4a04      	ldr	r2, [pc, #16]	; (20000178 <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000168:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2000016a:	6013      	str	r3, [r2, #0]
	}
}
2000016c:	4770      	bx	lr
2000016e:	bf00      	nop
20000170:	016e3600 	.word	0x016e3600
20000174:	400e0800 	.word	0x400e0800
20000178:	400e0a00 	.word	0x400e0a00
2000017c:	02625a00 	.word	0x02625a00
20000180:	044aa1ff 	.word	0x044aa1ff
20000184:	0501bcff 	.word	0x0501bcff

20000188 <pwr_list>:
20000188:	000800fd 00080111 00080125              ........%...

20000194 <usb_serial_number>:
20000194:	30303030 30303030 30303030 44414544     000000000000DEAD
200001a4:	46454542 00000000 00000000 00000000     BEEF............
200001b4:	00000000                                ....

200001b8 <xram>:
200001b8:	60000000                                ...`

200001bc <main_b_vendor_enable>:
200001bc:	00000001                                ....

200001c0 <MS_BOS_PACKET>:
200001c0:	00210f05 05101c01 dd60df00 c74589d8     ..!.......`...E.
200001d0:	65d29c4c 8a649e9d 0300009f 01009e06     L..e..d.........
200001e0:	00000000                                ....

200001e4 <MS_OS_DESC>:
200001e4:	0000000a 06030000 0014009e 49570003     ..............WI
200001f4:	4253554e 00000000 00000000 00800000     NUSB............
20000204:	00070004 00440028 00760065 00630069     ....(.D.e.v.i.c.
20000214:	00490065 0074006e 00720065 00610066     e.I.n.t.e.r.f.a.
20000224:	00650063 00550047 00440049 004e0000     c.e.G.U.I.D...N.
20000234:	0030007b 00430041 00320045 00330042     {.0.A.C.E.2.B.3.
20000244:	002d0045 00420032 00450033 0032002d     E.-.2.B.3.E.-.2.
20000254:	00330042 002d0045 00420032 00450033     B.3.E.-.2.B.3.E.
20000264:	0034002d 00310036 00300030 00430041     -.4.6.1.0.0.A.C.
20000274:	00320045 00330042 007d0045 00000000     E.2.B.3.E.}.....

20000284 <udc_string_desc>:
20000284:	00000300 00000000 00000000 00000000     ................
20000294:	00000000 00000000 00000000 00000000     ................
200002a4:	00000000 00000000 00000000 00000000     ................
200002b4:	00000000 00000000 00000000 00000000     ................
200002c4:	00000000                                ....

200002c8 <udc_string_desc_languageid>:
200002c8:	04090304                                ....

200002cc <udc_string_manufacturer_name>:
200002cc:	4177654e 65542045 6f6e6863 79676f6c     NewAE Technology
200002dc:	636e4920 0000002e                        Inc....

200002e4 <udc_string_product_name>:
200002e4:	57796850 70736968 72657265 4253552d     PhyWhisperer-USB
200002f4:	00000000                                ....

200002f8 <udi_api_vendor>:
200002f8:	0008304d 00083009 0008301d 00082ffd     M0...0...0.../..
20000308:	00000000                                ....

2000030c <g_interrupt_enabled>:
2000030c:	00000001                                ....

20000310 <SystemCoreClock>:
20000310:	003d0900                                ..=.

20000314 <udc_config>:
20000314:	2000037c 20000334 2000037c 20000390     |.. 4.. |.. ... 
20000324:	2000032c 00000000                       ,.. ....

2000032c <udc_config_hs>:
2000032c:	2000035c 2000039c                       \.. ... 

20000334 <udc_config_lsfs>:
20000334:	2000033c 2000039c                       <.. ... 

2000033c <udc_desc_fs>:
2000033c:	00200209 80000101 000409fa ffff0200     .. .............
2000034c:	050700ff 00400281 02050700 00004002     ......@......@..

2000035c <udc_desc_hs>:
2000035c:	00200209 80000101 000409fa ffff0200     .. .............
2000036c:	050700ff 02000281 02050700 00020002     ................

2000037c <udc_device_desc>:
2000037c:	02000112 40000000 c6102b3e 02010100     .......@>+......
2000038c:	00000103                                ....

20000390 <udc_device_qual>:
20000390:	0200060a 40000000 00000001              .......@....

2000039c <udi_apis>:
2000039c:	200002f8                                ... 

200003a0 <_impure_ptr>:
200003a0:	200003a8 00000000                       ... ....

200003a8 <impure_data>:
200003a8:	00000000 20000694 200006fc 20000764     ....... ... d.. 
200003b8:	00000000 00000000 00000000 00000000     ................
200003c8:	00000000 00000000 00000000 00000000     ................
200003d8:	00000000 00000000 00000000 00000000     ................
200003e8:	00000000 00000000 00000000 00000000     ................
200003f8:	00000000 00000000 00000000 00000000     ................
20000408:	00000000 00000000 00000000 00000000     ................
20000418:	00000000 00000000 00000000 00000000     ................
20000428:	00000000 00000000 00000000 00000000     ................
20000438:	00000000 00000000 00000000 00000000     ................
20000448:	00000000 00000000 00000001 00000000     ................
20000458:	abcd330e e66d1234 0005deec 0000000b     .3..4.m.........
20000468:	00000000 00000000 00000000 00000000     ................
20000478:	00000000 00000000 00000000 00000000     ................
20000488:	00000000 00000000 00000000 00000000     ................
20000498:	00000000 00000000 00000000 00000000     ................
200004a8:	00000000 00000000 00000000 00000000     ................
200004b8:	00000000 00000000 00000000 00000000     ................
200004c8:	00000000 00000000 00000000 00000000     ................
200004d8:	00000000 00000000 00000000 00000000     ................
200004e8:	00000000 00000000 00000000 00000000     ................
200004f8:	00000000 00000000 00000000 00000000     ................
20000508:	00000000 00000000 00000000 00000000     ................
20000518:	00000000 00000000 00000000 00000000     ................
20000528:	00000000 00000000 00000000 00000000     ................
20000538:	00000000 00000000 00000000 00000000     ................
20000548:	00000000 00000000 00000000 00000000     ................
20000558:	00000000 00000000 00000000 00000000     ................
20000568:	00000000 00000000 00000000 00000000     ................
20000578:	00000000 00000000 00000000 00000000     ................
20000588:	00000000 00000000 00000000 00000000     ................
20000598:	00000000 00000000 00000000 00000000     ................
200005a8:	00000000 00000000 00000000 00000000     ................
200005b8:	00000000 00000000 00000000 00000000     ................
200005c8:	00000000 00000000 00000000 00000000     ................
200005d8:	00000000 00000000 00000000 00000000     ................
200005e8:	00000000 00000000 00000000 00000000     ................
200005f8:	00000000 00000000 00000000 00000000     ................
20000608:	00000000 00000000 00000000 00000000     ................
20000618:	00000000 00000000 00000000 00000000     ................
20000628:	00000000 00000000 00000000 00000000     ................
20000638:	00000000 00000000 00000000 00000000     ................
20000648:	00000000 00000000 00000000 00000000     ................
20000658:	00000000 00000000 00000000 00000000     ................
20000668:	00000000 00000000 00000000 00000000     ................
20000678:	00000000 00000000 00000000 00000000     ................
20000688:	00000000 00000000 00000000 00000000     ................
20000698:	00000000 00000000 00000000 00000000     ................
200006a8:	00000000 00000000 00000000 00000000     ................
200006b8:	00000000 00000000 00000000 00000000     ................
200006c8:	00000000 00000000 00000000 00000000     ................
200006d8:	00000000 00000000 00000000 00000000     ................
200006e8:	00000000 00000000 00000000 00000000     ................
200006f8:	00000000 00000000 00000000 00000000     ................
20000708:	00000000 00000000 00000000 00000000     ................
20000718:	00000000 00000000 00000000 00000000     ................
20000728:	00000000 00000000 00000000 00000000     ................
20000738:	00000000 00000000 00000000 00000000     ................
20000748:	00000000 00000000 00000000 00000000     ................
20000758:	00000000 00000000 00000000 00000000     ................
20000768:	00000000 00000000 00000000 00000000     ................
20000778:	00000000 00000000 00000000 00000000     ................
20000788:	00000000 00000000 00000000 00000000     ................
20000798:	00000000 00000000 00000000 00000000     ................
200007a8:	00000000 00000000 00000000 00000000     ................
200007b8:	00000000 00000000 00000000 00000000     ................
200007c8:	00000000 00000000                       ........

200007d0 <__atexit_recursive_mutex>:
200007d0:	2000137c                                |.. 

200007d4 <__global_locale>:
200007d4:	00000043 00000000 00000000 00000000     C...............
200007e4:	00000000 00000000 00000000 00000000     ................
200007f4:	00000043 00000000 00000000 00000000     C...............
20000804:	00000000 00000000 00000000 00000000     ................
20000814:	00000043 00000000 00000000 00000000     C...............
20000824:	00000000 00000000 00000000 00000000     ................
20000834:	00000043 00000000 00000000 00000000     C...............
20000844:	00000000 00000000 00000000 00000000     ................
20000854:	00000043 00000000 00000000 00000000     C...............
20000864:	00000000 00000000 00000000 00000000     ................
20000874:	00000043 00000000 00000000 00000000     C...............
20000884:	00000000 00000000 00000000 00000000     ................
20000894:	00000043 00000000 00000000 00000000     C...............
200008a4:	00000000 00000000 00000000 00000000     ................
200008b4:	0008957d 00088585 00000000 0008a904     }...............
200008c4:	0008a744 0008a608 0008a608 0008a608     D...............
200008d4:	0008a608 0008a608 0008a608 0008a608     ................
200008e4:	0008a608 0008a608 ffffffff ffffffff     ................
200008f4:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
20000904:	00000000 00000000 00000000 00000000     ................
20000914:	00000000 00000000 53410000 00494943     ..........ASCII.
20000924:	00000000 00000000 00000000 00000000     ................
20000934:	00000000 00000000 00000000              ............

20000940 <__malloc_av_>:
20000940:	00000000 00000000 20000940 20000940     ........@.. @.. 
20000950:	20000948 20000948 20000950 20000950     H.. H.. P.. P.. 
20000960:	20000958 20000958 20000960 20000960     X.. X.. `.. `.. 
20000970:	20000968 20000968 20000970 20000970     h.. h.. p.. p.. 
20000980:	20000978 20000978 20000980 20000980     x.. x.. ... ... 
20000990:	20000988 20000988 20000990 20000990     ... ... ... ... 
200009a0:	20000998 20000998 200009a0 200009a0     ... ... ... ... 
200009b0:	200009a8 200009a8 200009b0 200009b0     ... ... ... ... 
200009c0:	200009b8 200009b8 200009c0 200009c0     ... ... ... ... 
200009d0:	200009c8 200009c8 200009d0 200009d0     ... ... ... ... 
200009e0:	200009d8 200009d8 200009e0 200009e0     ... ... ... ... 
200009f0:	200009e8 200009e8 200009f0 200009f0     ... ... ... ... 
20000a00:	200009f8 200009f8 20000a00 20000a00     ... ... ... ... 
20000a10:	20000a08 20000a08 20000a10 20000a10     ... ... ... ... 
20000a20:	20000a18 20000a18 20000a20 20000a20     ... ...  ..  .. 
20000a30:	20000a28 20000a28 20000a30 20000a30     (.. (.. 0.. 0.. 
20000a40:	20000a38 20000a38 20000a40 20000a40     8.. 8.. @.. @.. 
20000a50:	20000a48 20000a48 20000a50 20000a50     H.. H.. P.. P.. 
20000a60:	20000a58 20000a58 20000a60 20000a60     X.. X.. `.. `.. 
20000a70:	20000a68 20000a68 20000a70 20000a70     h.. h.. p.. p.. 
20000a80:	20000a78 20000a78 20000a80 20000a80     x.. x.. ... ... 
20000a90:	20000a88 20000a88 20000a90 20000a90     ... ... ... ... 
20000aa0:	20000a98 20000a98 20000aa0 20000aa0     ... ... ... ... 
20000ab0:	20000aa8 20000aa8 20000ab0 20000ab0     ... ... ... ... 
20000ac0:	20000ab8 20000ab8 20000ac0 20000ac0     ... ... ... ... 
20000ad0:	20000ac8 20000ac8 20000ad0 20000ad0     ... ... ... ... 
20000ae0:	20000ad8 20000ad8 20000ae0 20000ae0     ... ... ... ... 
20000af0:	20000ae8 20000ae8 20000af0 20000af0     ... ... ... ... 
20000b00:	20000af8 20000af8 20000b00 20000b00     ... ... ... ... 
20000b10:	20000b08 20000b08 20000b10 20000b10     ... ... ... ... 
20000b20:	20000b18 20000b18 20000b20 20000b20     ... ...  ..  .. 
20000b30:	20000b28 20000b28 20000b30 20000b30     (.. (.. 0.. 0.. 
20000b40:	20000b38 20000b38 20000b40 20000b40     8.. 8.. @.. @.. 
20000b50:	20000b48 20000b48 20000b50 20000b50     H.. H.. P.. P.. 
20000b60:	20000b58 20000b58 20000b60 20000b60     X.. X.. `.. `.. 
20000b70:	20000b68 20000b68 20000b70 20000b70     h.. h.. p.. p.. 
20000b80:	20000b78 20000b78 20000b80 20000b80     x.. x.. ... ... 
20000b90:	20000b88 20000b88 20000b90 20000b90     ... ... ... ... 
20000ba0:	20000b98 20000b98 20000ba0 20000ba0     ... ... ... ... 
20000bb0:	20000ba8 20000ba8 20000bb0 20000bb0     ... ... ... ... 
20000bc0:	20000bb8 20000bb8 20000bc0 20000bc0     ... ... ... ... 
20000bd0:	20000bc8 20000bc8 20000bd0 20000bd0     ... ... ... ... 
20000be0:	20000bd8 20000bd8 20000be0 20000be0     ... ... ... ... 
20000bf0:	20000be8 20000be8 20000bf0 20000bf0     ... ... ... ... 
20000c00:	20000bf8 20000bf8 20000c00 20000c00     ... ... ... ... 
20000c10:	20000c08 20000c08 20000c10 20000c10     ... ... ... ... 
20000c20:	20000c18 20000c18 20000c20 20000c20     ... ...  ..  .. 
20000c30:	20000c28 20000c28 20000c30 20000c30     (.. (.. 0.. 0.. 
20000c40:	20000c38 20000c38 20000c40 20000c40     8.. 8.. @.. @.. 
20000c50:	20000c48 20000c48 20000c50 20000c50     H.. H.. P.. P.. 
20000c60:	20000c58 20000c58 20000c60 20000c60     X.. X.. `.. `.. 
20000c70:	20000c68 20000c68 20000c70 20000c70     h.. h.. p.. p.. 
20000c80:	20000c78 20000c78 20000c80 20000c80     x.. x.. ... ... 
20000c90:	20000c88 20000c88 20000c90 20000c90     ... ... ... ... 
20000ca0:	20000c98 20000c98 20000ca0 20000ca0     ... ... ... ... 
20000cb0:	20000ca8 20000ca8 20000cb0 20000cb0     ... ... ... ... 
20000cc0:	20000cb8 20000cb8 20000cc0 20000cc0     ... ... ... ... 
20000cd0:	20000cc8 20000cc8 20000cd0 20000cd0     ... ... ... ... 
20000ce0:	20000cd8 20000cd8 20000ce0 20000ce0     ... ... ... ... 
20000cf0:	20000ce8 20000ce8 20000cf0 20000cf0     ... ... ... ... 
20000d00:	20000cf8 20000cf8 20000d00 20000d00     ... ... ... ... 
20000d10:	20000d08 20000d08 20000d10 20000d10     ... ... ... ... 
20000d20:	20000d18 20000d18 20000d20 20000d20     ... ...  ..  .. 
20000d30:	20000d28 20000d28 20000d30 20000d30     (.. (.. 0.. 0.. 
20000d40:	20000d38 20000d38                       8.. 8.. 

20000d48 <__malloc_sbrk_base>:
20000d48:	ffffffff                                ....

20000d4c <__malloc_trim_threshold>:
20000d4c:	00020000                                ....
